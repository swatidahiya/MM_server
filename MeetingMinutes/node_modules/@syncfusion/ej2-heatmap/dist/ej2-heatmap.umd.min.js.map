{"version":3,"file":"ej2-heatmap.umd.min.js","sources":["../src/heatmap/utils/helper.js","../src/heatmap/model/theme.js","../src/heatmap/model/base.js","../src/heatmap/utils/colorMapping.js","../src/heatmap/axis/axis.js","../src/heatmap/axis/axis-helpers.js","../src/heatmap/series/series.js","../src/heatmap/utils/tooltip.js","../src/heatmap/datasource/twodimensional.js","../src/heatmap/legend/legend.js","../src/heatmap/datasource/adaptor.js","../src/heatmap/heatmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { remove, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { RgbColor } from '../utils/colorMapping';\n/**\n * Helper method for heatmap\n */\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to measure the height and width of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('heatmapmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'heatmapmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerText = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.fontSize = (font.size).indexOf('px') !== -1 ? font.size : font.size + 'px';\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/** @private */\nvar TextElement = /** @class */ (function () {\n    function TextElement(fontModel, fontColor) {\n        this['font-size'] = fontModel.size;\n        this['font-style'] = fontModel.fontStyle.toLowerCase();\n        this['font-family'] = fontModel.fontFamily;\n        this['font-weight'] = fontModel.fontWeight.toLowerCase();\n        this.fill = fontColor ? fontColor : '';\n    }\n    return TextElement;\n}());\nexport { TextElement };\nexport function titlePositionX(width, leftPadding, rightPadding, titleStyle) {\n    var positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = leftPadding + width / 2;\n    }\n    else {\n        positionX = width + leftPadding;\n    }\n    return positionX;\n}\n/**\n * Internal class size for height and width\n * @private\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color ? color : '';\n        _this['stroke-width'] = parseFloat(width.toString());\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentRect = /** @class */ (function () {\n    function CurrentRect(x, y, width, height, value, id, xIndex, yIndex, xValue, yValue, visible, displayText, textId, allowCollection) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.id = id;\n        this.xIndex = xIndex;\n        this.yIndex = yIndex;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.visible = visible;\n        this.displayText = displayText;\n        this.textId = textId;\n        /** @private */\n        this.allowCollection = allowCollection;\n    }\n    return CurrentRect;\n}());\nexport { CurrentRect };\n/**\n * Class to define the details of selected cell.\n * @private\n */\nvar SelectedCellDetails = /** @class */ (function () {\n    function SelectedCellDetails(value, xLabel, yLabel, xValue, yValue, cellElement, xPosition, yPosition, width, height, x, y) {\n        this.value = value;\n        this.xLabel = xLabel;\n        this.yLabel = yLabel;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.cellElement = cellElement;\n        this.xPosition = xPosition;\n        this.yPosition = yPosition;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n    }\n    return SelectedCellDetails;\n}());\nexport { SelectedCellDetails };\n/**\n * Class to define property to draw rectangle.\n * @private\n */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, borderColor, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height > 0 ? rect.height : 0;\n        _this.width = rect.width > 0 ? rect.width : 0;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/**\n * Class to define property to draw circle.\n * @private\n */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, borderColor, cx, cy, r) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity) || this;\n        _this.cx = cx ? cx : 0;\n        _this.cy = cy ? cy : 0;\n        _this.r = r ? r : 0;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\nexport { CircleOption };\n/**\n * Helper Class to define property to draw rectangle.\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Class to define property to draw text.\n * @private\n */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, basic, element, fontColor) {\n        var _this = _super.call(this, element, fontColor) || this;\n        _this.transform = '';\n        _this['dominant-baseline'] = 'auto';\n        _this.labelRotation = 0;\n        _this.baseline = 'auto';\n        _this.id = id;\n        _this.x = basic.x;\n        _this.y = basic.y;\n        _this['text-anchor'] = basic['text-anchor'];\n        _this.text = basic.text;\n        _this.transform = basic.transform;\n        _this.labelRotation = basic.labelRotation;\n        _this['dominant-baseline'] = basic['dominant-baseline'];\n        _this.baseline = basic.baseline;\n        _this.dy = basic.dy;\n        return _this;\n    }\n    return TextOption;\n}(TextElement));\nexport { TextOption };\n/**\n * Helper Class to define property to draw text.\n * @private\n */\nvar TextBasic = /** @class */ (function () {\n    function TextBasic(x, y, anchor, text, labelRotation, transform, baseLine, dy) {\n        this.transform = '';\n        this['dominant-baseline'] = 'auto';\n        this.labelRotation = 0;\n        this.baseline = 'auto';\n        this.x = x ? x : 0;\n        this.y = y ? y : 0;\n        this['text-anchor'] = anchor ? anchor : 'start';\n        this.text = text ? text : '';\n        this.transform = transform ? transform : '';\n        this.labelRotation = labelRotation;\n        this['dominant-baseline'] = baseLine ? baseLine : 'auto';\n        this.baseline = baseLine ? baseLine : '';\n        this.dy = dy ? dy : '';\n    }\n    return TextBasic;\n}());\nexport { TextBasic };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar Line = /** @class */ (function () {\n    function Line(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    return Line;\n}());\nexport { Line };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar LineOption = /** @class */ (function (_super) {\n    __extends(LineOption, _super);\n    function LineOption(id, line, stroke, strokewidth, opacity, dasharray) {\n        var _this = _super.call(this, id, null, strokewidth, stroke, opacity, dasharray, null) || this;\n        _this.x1 = line.x1;\n        _this.y1 = line.y1;\n        _this.x2 = line.x2;\n        _this.y2 = line.y2;\n        return _this;\n    }\n    return LineOption;\n}(PathOption));\nexport { LineOption };\n/**\n * Properties required to render path.\n * @private\n */\nvar PathAttributes = /** @class */ (function (_super) {\n    __extends(PathAttributes, _super);\n    function PathAttributes(id, path, fill, border, borderWidth, opacity, borderColor) {\n        var _this = _super.call(this, id, fill, borderWidth, borderColor, opacity, null) || this;\n        _this.d = path.d;\n        _this.x = path.x;\n        _this.y = path.y;\n        return _this;\n    }\n    return PathAttributes;\n}(PathOption));\nexport { PathAttributes };\n/**\n * Helper Class to define property to path.\n * @private\n */\nvar Path = /** @class */ (function () {\n    function Path(d, innerR, x, y, x1, y1, cx, cy, start, end, radius, counterClockWise) {\n        this.d = d;\n        this.innerR = innerR;\n        this.cx = cx;\n        this.cy = cy;\n        this.x = x;\n        this.y = y;\n        this.x1 = x1;\n        this.y1 = y1;\n        this.start = start;\n        this.end = end;\n        this.radius = radius;\n        this.counterClockWise = counterClockWise;\n    }\n    return Path;\n}());\nexport { Path };\n/** @private */\nexport function sum(values) {\n    var sum = 0;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        sum += value;\n    }\n    return sum;\n}\n/** @private */\nexport function titlePositionY(heatmapSize, topPadding, bottomPadding, titleStyle) {\n    var positionY;\n    if (titleStyle.textAlignment === 'Near') {\n        positionY = heatmapSize.height - bottomPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionY = heatmapSize.height / 2;\n    }\n    else {\n        positionY = topPadding;\n    }\n    return positionY;\n}\n/** @private */\nexport function rotateTextSize(font, text, angle) {\n    var renderer = new SvgRenderer('heatmapMeasureRotateText');\n    var svgObject = renderer.createSvg({ id: 'heatmapMeasureRotateText_svg', width: 100, height: 100 });\n    var box;\n    var options;\n    var htmlObject;\n    options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle.toLowerCase(),\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight.toLowerCase(),\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    htmlObject = renderer.createText(options, text);\n    svgObject.appendChild(htmlObject);\n    document.body.appendChild(svgObject);\n    box = htmlObject.getBoundingClientRect();\n    remove(svgObject);\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/**\n * Class to draw SVG and Canvas Rectangle & Text.\n * @private\n */\nvar DrawSvgCanvas = /** @class */ (function () {\n    function DrawSvgCanvas(heatmap) {\n        this.heatMap = heatmap;\n    }\n    //Svg & Canvas Rectangle Part\n    DrawSvgCanvas.prototype.drawRectangle = function (properties, parentElement, isFromSeries) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawRectangle(properties));\n        }\n        else {\n            this.drawCanvasRectangle(this.heatMap.canvasRenderer, properties, isFromSeries);\n        }\n    };\n    //Svg & Canvas Bubble Part\n    DrawSvgCanvas.prototype.drawCircle = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawCircle(properties));\n        }\n        else {\n            this.drawCanvasCircle(this.heatMap.canvasRenderer, properties);\n        }\n    };\n    //Svg & Canvas Pie Part\n    DrawSvgCanvas.prototype.drawPath = function (properties, options, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.x;\n            delete properties.y;\n            parentElement.appendChild(this.heatMap.renderer.drawPath(properties));\n        }\n        else {\n            this.drawCanvasPath(this.heatMap.canvasRenderer, properties, options);\n        }\n    };\n    //Svg & Canvas Text Part\n    DrawSvgCanvas.prototype.createText = function (properties, parentElement, text) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.labelRotation;\n            delete properties.baseline;\n            delete properties.text;\n            parentElement.appendChild(this.heatMap.renderer.createText(properties, text));\n            properties.text = text;\n        }\n        else {\n            this.canvasDrawText(properties, text);\n        }\n    };\n    //Draw the wrapped text for both SVG & canvas\n    DrawSvgCanvas.prototype.createWrapText = function (options, font, parentElement) {\n        var renderOptions = {};\n        var htmlObject;\n        var tspanElement;\n        var text;\n        var height;\n        renderOptions = {\n            'id': options.id,\n            'x': options.x,\n            'y': options.y,\n            'fill': options.fill,\n            'font-size': font.size,\n            'font-style': font.fontStyle,\n            'font-family': font.fontFamily,\n            'font-weight': font.fontWeight.toLowerCase(),\n            'text-anchor': options['text-anchor'],\n            'transform': options.transform,\n            'dominant-baseline': options['dominant-baseline']\n        };\n        text = options.text[0];\n        if (!this.heatMap.enableCanvasRendering) {\n            htmlObject = this.heatMap.renderer.createText(renderOptions, text);\n        }\n        else {\n            this.heatMap.canvasRenderer.createText(options, text);\n        }\n        if (typeof options.text !== 'string' && options.text.length > 1) {\n            for (var i = 1, len = options.text.length; i < len; i++) {\n                height = (measureText(options.text[i], font).height);\n                if (!this.heatMap.enableCanvasRendering) {\n                    tspanElement = this.heatMap.renderer.createTSpan({\n                        'x': options.x, 'id': options.id + i,\n                        'y': (options.y) + (i * height)\n                    }, options.text[i]);\n                    htmlObject.appendChild(tspanElement);\n                }\n                else {\n                    options.id = options.id + i;\n                    options.y += height;\n                    this.heatMap.canvasRenderer.createText(options, options.text[i]);\n                }\n            }\n        }\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(htmlObject);\n        }\n    };\n    DrawSvgCanvas.prototype.drawLine = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawLine(properties));\n        }\n        else {\n            this.heatMap.canvasRenderer.drawLine(properties);\n        }\n    };\n    //Canvas Text Part\n    DrawSvgCanvas.prototype.canvasDrawText = function (options, label, translateX, translateY) {\n        var ctx = this.heatMap.canvasRenderer.ctx;\n        if (!translateX) {\n            translateX = options.x;\n        }\n        if (!translateY) {\n            translateY = options.y;\n        }\n        var fontWeight = this.getOptionValue(options, 'font-weight');\n        if (!isNullOrUndefined(fontWeight) && fontWeight.toLowerCase() === 'regular') {\n            fontWeight = 'normal';\n        }\n        var fontFamily = this.getOptionValue(options, 'font-family');\n        var fontSize = (options['font-size'].toString()).indexOf('px') === -1 ? options['font-size'] + 'px' : options['font-size'];\n        var anchor = this.getOptionValue(options, 'text-anchor');\n        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();\n        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);\n        if (anchor === 'middle') {\n            anchor = 'center';\n        }\n        ctx.save();\n        ctx.fillStyle = options.fill;\n        ctx.font = font;\n        ctx.textAlign = anchor;\n        if (options.baseline) {\n            ctx.textBaseline = options.baseline;\n        }\n        ctx.translate(translateX, translateY);\n        ctx.rotate(options.labelRotation * Math.PI / 180);\n        ctx.fillText(label, options.x - translateX, options.y - translateY);\n        ctx.restore();\n    };\n    // method to get the attributes value\n    /* tslint:disable */\n    DrawSvgCanvas.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    };\n    DrawSvgCanvas.prototype.setAttributes = function (canvas, options) {\n        canvas.ctx.lineWidth = options['stroke-width'];\n        var dashArray = options['stroke-dasharray'];\n        if (!isNullOrUndefined(dashArray)) {\n            var dashArrayString = dashArray.split(',');\n            canvas.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);\n        }\n        canvas.ctx.strokeStyle = options['stroke'];\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasRectangle = function (canvas, options, isFromSeries) {\n        var canvasCtx = canvas.ctx;\n        var cornerRadius = options.rx;\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = options['opacity'];\n        this.setAttributes(canvas, options);\n        this.drawCornerRadius(canvas, options);\n        if ((options['stroke-width'] && options['stroke-width'] != 0) || isFromSeries) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n        canvas.ctx = canvasCtx;\n    };\n    ;\n    // To draw the corner of a rectangle\n    DrawSvgCanvas.prototype.drawCornerRadius = function (canvas, options) {\n        var cornerRadius = options.rx;\n        var x = options.x;\n        var y = options.y;\n        var width = options.width;\n        var height = options.height;\n        if (options.fill === 'none') {\n            options.fill = 'transparent';\n        }\n        canvas.ctx.fillStyle = options.fill;\n        if (width < 2 * cornerRadius) {\n            cornerRadius = width / 2;\n        }\n        if (height < 2 * cornerRadius) {\n            cornerRadius = height / 2;\n        }\n        canvas.ctx.beginPath();\n        canvas.ctx.moveTo(x + width - cornerRadius, y);\n        canvas.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n        canvas.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n        canvas.ctx.arcTo(x, y + height, x, y, cornerRadius);\n        canvas.ctx.arcTo(x, y, x + width, y, cornerRadius);\n        canvas.ctx.closePath();\n        canvas.ctx.fill();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasCircle = function (canvas, options) {\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);\n        canvas.ctx.fillStyle = options.fill;\n        canvas.ctx.globalAlpha = options.opacity;\n        canvas.ctx.fill();\n        this.setAttributes(canvas, options);\n        if (options['stroke-width'] && options['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasPath = function (canvas, properties, options) {\n        var path = properties.d;\n        var dataSplit = path.split(' ');\n        var borderWidth = this.getOptionValue(options, 'stroke-width');\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = properties.opacity;\n        canvas.ctx.fillStyle = properties.fill;\n        this.setAttributes(canvas, properties);\n        for (var i = 0; i < dataSplit.length; i = i + 3) {\n            var x1 = parseFloat(dataSplit[i + 1]);\n            var y1 = parseFloat(dataSplit[i + 2]);\n            switch (dataSplit[i]) {\n                case 'M':\n                    canvas.ctx.moveTo(x1, y1);\n                    break;\n                case 'L':\n                    canvas.ctx.lineTo(x1, y1);\n                    break;\n                case 'A':\n                case 'a':\n                    canvas.ctx.arc(options.x, options.y, options.radius, (options.start * 0.0174533), (options.end * 0.0174533), false);\n                    i = dataSplit[i] === 'a' ? i + 13 : i + 5;\n                    break;\n                case 'Z':\n                    canvas.ctx.closePath();\n                    break;\n            }\n        }\n        canvas.ctx.fill();\n        if (properties['stroke-width'] && properties['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    return DrawSvgCanvas;\n}());\nexport { DrawSvgCanvas };\nexport function getTitle(title, style, width) {\n    var titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(textNone(width, title, style));\n            break;\n    }\n    return titleCollection;\n}\nexport function textWrap(currentLabel, maximumWidth, font) {\n    var textCollection = currentLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var index = textLength - 1; index >= 0; --index) {\n            label = text.substring(0, index) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function textNone(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i);\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nvar Gradient = /** @class */ (function () {\n    function Gradient(x, x1, x2, y1, y2) {\n        this.id = x;\n        this.x1 = x1;\n        this.x2 = x2;\n        this.y1 = y1;\n        this.y2 = y2;\n    }\n    return Gradient;\n}());\nexport { Gradient };\nvar GradientColor = /** @class */ (function () {\n    function GradientColor(color, colorStop) {\n        this.color = color;\n        this.colorStop = colorStop;\n    }\n    return GradientColor;\n}());\nexport { GradientColor };\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, heatmap) {\n    var tooltip = document.getElementById(id);\n    var initialClip = heatmap.initialClipRect;\n    var size = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    });\n    var width = size.width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    x = x < 0 ? 5 : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: Segoe UI'\n        });\n        tooltip.innerText = text;\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (text === heatmap.titleSettings.text) {\n        tooltip.style.width = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (x + 15)).toString() + 'px' : '';\n    }\n    else {\n        tooltip.style.left = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (size.width + 7)).toString() + 'px' : x.toString() + 'px';\n        tooltip.style.top = (y + 15) + size.height + 6 > heatmap.availableSize.height ?\n            (y - (size.height + 6) - 10).toString() + 'px' : tooltip.style.top; // 6 and 7 are padding and border width\n    }\n    if (isTouch) {\n        setTimeout(function () { removeElement(id); }, 1500);\n    }\n}\n/** @private */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/** @private */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nexport function increaseDateTimeInterval(value, interval, intervalType, increment) {\n    var result = new Date(value);\n    interval = Math.ceil(interval * increment);\n    switch (intervalType) {\n        case 'Years':\n            result.setFullYear(result.getFullYear() + interval);\n            break;\n        case 'Months':\n            result.setMonth(result.getMonth() + interval);\n            break;\n        case 'Days':\n            result.setDate(result.getDate() + interval);\n            break;\n        case 'Hours':\n            result.setHours(result.getHours() + interval);\n            break;\n        case 'Minutes':\n            result.setMinutes(result.getMinutes() + interval);\n            break;\n    }\n    return result;\n}\n/* private */\nvar CanvasTooltip = /** @class */ (function () {\n    function CanvasTooltip(text, rect) {\n        this.region = new Rect(0, 0, 0, 0);\n        this.text = text;\n        this.region = rect;\n    }\n    return CanvasTooltip;\n}());\nexport { CanvasTooltip };\n/* private*/\n/* Method to get the tool tip text in canvas based on region. */\nexport function getTooltipText(tooltipCollection, xPosition, yPosition) {\n    var length = tooltipCollection.length;\n    var tooltip;\n    var region;\n    var text;\n    for (var i = 0; i < length; i++) {\n        tooltip = tooltipCollection[i];\n        region = tooltip.region;\n        if (xPosition >= region.x && xPosition <= (region.x + region.width) && yPosition >= region.y && yPosition <= (region.y + region.height)) {\n            text = tooltip.text;\n            break;\n        }\n    }\n    return text;\n}\n/**\n * @private\n */\nvar PaletterColor = /** @class */ (function () {\n    function PaletterColor() {\n    }\n    return PaletterColor;\n}());\nexport { PaletterColor };\n/**\n * @private\n */\nvar GradientPointer = /** @class */ (function () {\n    function GradientPointer(pathX1, pathY1, pathX2, pathY2, pathX3, pathY3) {\n        this.pathX1 = pathX1;\n        this.pathY1 = pathY1;\n        this.pathX2 = pathX2;\n        this.pathY2 = pathY2;\n        this.pathX3 = pathX3;\n        this.pathY3 = pathY3;\n    }\n    return GradientPointer;\n}());\nexport { GradientPointer };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentLegendRect = /** @class */ (function () {\n    function CurrentLegendRect(x, y, width, height, label, id) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.label = label;\n        this.id = id;\n    }\n    return CurrentLegendRect;\n}());\nexport { CurrentLegendRect };\n/** @private */\nvar LegendRange = /** @class */ (function () {\n    function LegendRange(x, y, width, height, value, visible, currentPage) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.visible = visible;\n        this.currentPage = currentPage;\n    }\n    return LegendRange;\n}());\nexport { LegendRange };\n/** @private */\nvar ToggleVisibility = /** @class */ (function () {\n    function ToggleVisibility(visible, value, startValue, endValue) {\n        this.visible = visible;\n        this.value = value;\n        this.startValue = startValue;\n        this.endValue = endValue;\n    }\n    return ToggleVisibility;\n}());\nexport { ToggleVisibility };\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('heatmapmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new RgbColor(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.R) + componentToHex(value.G) + componentToHex(value.B);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new RgbColor(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new RgbColor(255, 255, 255);\n}\n/** @private */\nexport function formatValue(isCustom, format, tempInterval, formatFun) {\n    return isCustom ? format.replace('{value}', formatFun(tempInterval))\n        : formatFun(tempInterval);\n}\n/** @private */\nvar MultiLevelPosition = /** @class */ (function () {\n    function MultiLevelPosition(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return MultiLevelPosition;\n}());\nexport { MultiLevelPosition };\n","/**\n * Specifies HeatMaps Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.heatMapTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.titleFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.rectLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.tooltipFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getThemeColor(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'highcontrastlight':\n        case 'highcontrast':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#ffffff',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#DADADA',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                heatMapTitle: '#212529',\n                axisTitle: '#212529',\n                axisLabel: '#212529',\n                cellBorder: '#E9ECEF',\n                background: '#FFFFFF',\n                cellTextColor: '#212529',\n                toggledColor: '#ffffff',\n                emptyCellColor: '#E9ECEF',\n                legendLabel: '#212529',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        default:\n            style = {\n                heatMapTitle: '#424242',\n                axisTitle: '#424242',\n                axisLabel: '#686868',\n                cellBorder: '#EEEEEE',\n                cellTextColor: '#000000',\n                toggledColor: '#ffffff',\n                background: '#FFFFFF',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#353535',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from './theme';\n/**\n * Configures the fonts in heat map.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the heat map margins.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the borders in the heat map.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"radius\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the tooltip borders in the heat map.\n */\nvar TooltipBorder = /** @class */ (function (_super) {\n    __extends(TooltipBorder, _super);\n    function TooltipBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], TooltipBorder.prototype, \"width\", void 0);\n    return TooltipBorder;\n}(ChildProperty));\nexport { TooltipBorder };\n/**\n * Configures the mapping name for size and color in SizeAndColor type.\n */\nvar BubbleData = /** @class */ (function (_super) {\n    __extends(BubbleData, _super);\n    function BubbleData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"color\", void 0);\n    return BubbleData;\n}(ChildProperty));\nexport { BubbleData };\n/**\n * class used to maintain Title styles.\n */\nvar Title = /** @class */ (function (_super) {\n    __extends(Title, _super);\n    function Title() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Title.prototype, \"text\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Title.prototype, \"textStyle\", void 0);\n    return Title;\n}(ChildProperty));\nexport { Title };\n/**\n * class used to maintain the fill color value for cell color range\n */\nvar FillColor = /** @class */ (function (_super) {\n    __extends(FillColor, _super);\n    function FillColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"minColor\", void 0);\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"maxColor\", void 0);\n    return FillColor;\n}(ChildProperty));\nexport { FillColor };\n/**\n * class used to maintain palette information.\n */\nvar PaletteCollection = /** @class */ (function (_super) {\n    __extends(PaletteCollection, _super);\n    function PaletteCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"endValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"minColor\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"maxColor\", void 0);\n    return PaletteCollection;\n}(ChildProperty));\nexport { PaletteCollection };\n/**\n * label border properties.\n */\nvar AxisLabelBorder = /** @class */ (function (_super) {\n    __extends(AxisLabelBorder, _super);\n    function AxisLabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#b5b5b5')\n    ], AxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], AxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], AxisLabelBorder.prototype, \"type\", void 0);\n    return AxisLabelBorder;\n}(ChildProperty));\nexport { AxisLabelBorder };\nvar BubbleSize = /** @class */ (function (_super) {\n    __extends(BubbleSize, _super);\n    function BubbleSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], BubbleSize.prototype, \"minimum\", void 0);\n    __decorate([\n        Property('100%')\n    ], BubbleSize.prototype, \"maximum\", void 0);\n    return BubbleSize;\n}(ChildProperty));\nexport { BubbleSize };\n/**\n * categories for multi level labels\n */\nvar MultiLevelCategories = /** @class */ (function (_super) {\n    __extends(MultiLevelCategories, _super);\n    function MultiLevelCategories() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"end\", void 0);\n    __decorate([\n        Property('')\n    ], MultiLevelCategories.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n    return MultiLevelCategories;\n}(ChildProperty));\nexport { MultiLevelCategories };\n/**\n * MultiLevelLabels properties\n */\nvar MultiLevelLabels = /** @class */ (function (_super) {\n    __extends(MultiLevelLabels, _super);\n    function MultiLevelLabels() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Center')\n    ], MultiLevelLabels.prototype, \"alignment\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], MultiLevelLabels.prototype, \"overflow\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], MultiLevelLabels.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 1, type: 'Rectangle' }, AxisLabelBorder)\n    ], MultiLevelLabels.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelCategories)\n    ], MultiLevelLabels.prototype, \"categories\", void 0);\n    return MultiLevelLabels;\n}(ChildProperty));\nexport { MultiLevelLabels };\n/**\n * Internal class used to maintain colorcollection.\n */\nvar ColorCollection = /** @class */ (function () {\n    function ColorCollection(value, color, label, startValue, endValue, minColor, maxColor) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n    }\n    return ColorCollection;\n}());\nexport { ColorCollection };\n/**\n * class used to maintain color and value collection.\n */\nvar BubbleTooltipData = /** @class */ (function () {\n    function BubbleTooltipData(mappingName, bubbleData, valueType) {\n        this.mappingName = mappingName;\n        this.bubbleData = bubbleData;\n        this.valueType = valueType;\n    }\n    return BubbleTooltipData;\n}());\nexport { BubbleTooltipData };\n/**\n * Internal class used to maintain legend colorcollection.\n */\nvar LegendColorCollection = /** @class */ (function () {\n    function LegendColorCollection(value, color, label, startValue, endValue, minColor, maxColor, isHidden) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n        this.isHidden = isHidden;\n    }\n    return LegendColorCollection;\n}());\nexport { LegendColorCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, extend, ChildProperty, Collection, isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { ColorCollection, LegendColorCollection, PaletteCollection, FillColor } from '../model/base';\nimport { PaletterColor } from './helper';\n/**\n * Configures the color property in Heatmap.\n */\nvar PaletteSettings = /** @class */ (function (_super) {\n    __extends(PaletteSettings, _super);\n    function PaletteSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([{}], PaletteCollection)\n    ], PaletteSettings.prototype, \"palette\", void 0);\n    __decorate([\n        Property('Gradient')\n    ], PaletteSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], PaletteSettings.prototype, \"emptyPointColor\", void 0);\n    __decorate([\n        Property('Table')\n    ], PaletteSettings.prototype, \"colorGradientMode\", void 0);\n    __decorate([\n        Complex({}, FillColor)\n    ], PaletteSettings.prototype, \"fillColor\", void 0);\n    return PaletteSettings;\n}(ChildProperty));\nexport { PaletteSettings };\n/**\n * Helper class for colormapping\n */\nvar RgbColor = /** @class */ (function () {\n    function RgbColor(r, g, b) {\n        this.R = r;\n        this.G = g;\n        this.B = b;\n    }\n    return RgbColor;\n}());\nexport { RgbColor };\nvar CellColor = /** @class */ (function () {\n    function CellColor(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To convert hexa color to RGB.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.convertToRGB = function (value, colorMapping) {\n        var previousOffset = this.heatMap.isColorRange ? colorMapping[0].startValue : colorMapping[0].value;\n        var nextOffset = 0;\n        var i = 0;\n        var previousColor;\n        var nextColor;\n        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n            for (i = 0; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].endValue);\n                if (value <= offset && value >= Number(colorMapping[i].startValue)) {\n                    nextOffset = offset;\n                    previousColor = this.heatMap.colorCollection[i].minColor;\n                    nextColor = this.heatMap.colorCollection[i].maxColor;\n                    break;\n                }\n                else if (colorMapping[0].startValue !== this.heatMap.dataSourceMinValue && value < colorMapping[0].startValue) {\n                    nextOffset = colorMapping[0].startValue;\n                    previousOffset = this.heatMap.dataSourceMinValue;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else if (value > offset && value <= (i === (colorMapping.length - 1) ? this.heatMap.dataSourceMaxValue :\n                    colorMapping[i + 1].startValue)) {\n                    nextOffset = (i === (colorMapping.length - 1)) ? this.heatMap.dataSourceMaxValue : colorMapping[i + 1].startValue;\n                    previousOffset = offset;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].value);\n                if (value <= offset) {\n                    nextOffset = offset;\n                    previousColor = this.getEqualColor(colorMapping, previousOffset);\n                    nextColor = this.getEqualColor(colorMapping, nextOffset);\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        var percent = 0;\n        var full = (nextOffset) - previousOffset;\n        percent = (value - previousOffset) / full;\n        percent = isNaN(percent) ? 0 : percent;\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    /**\n     * To convert Component to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    /**\n     * To get similar color.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.getEqualColor = function (list, offset) {\n        for (var i = 0; i < list.length; i++) {\n            if (Number(list[i].value) === offset) {\n                var color = list[i].color;\n                if (color.indexOf('rgb') !== -1) {\n                    color = this.convertToHex(color);\n                }\n                else if (color.indexOf('#') === -1) {\n                    color = '#FFFFFF';\n                }\n                return color;\n            }\n        }\n        return '#00000';\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.convertToHex = function (color) {\n        var itemColor = color.substr(3);\n        itemColor = itemColor.split('(')[1].split(')')[0];\n        var colorSplit = itemColor.split(',');\n        itemColor = this.rgbToHex(parseInt(colorSplit[0], 10), parseInt(colorSplit[1], 10), parseInt(colorSplit[2], 10));\n        return itemColor;\n    };\n    /**\n     * To get RGB for percentage value.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new RgbColor(r, g, b);\n    };\n    /**\n     * To convert numbet to percentage.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    /**\n     * To get complete color Collection.\n     * @private\n     */\n    CellColor.prototype.getColorCollection = function () {\n        var heatMap = this.heatMap;\n        heatMap.colorCollection = [];\n        heatMap.legendColorCollection = [];\n        var range;\n        for (var j = 0; j < this.heatMap.paletteSettings.palette.length; j++) {\n            if (this.heatMap.paletteSettings.palette[j].startValue === null || this.heatMap.paletteSettings.palette[j].endValue === null) {\n                this.heatMap.isColorRange = false;\n                break;\n            }\n            else {\n                this.heatMap.isColorRange = true;\n            }\n        }\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        heatMap.emptyPointColor = heatMap.paletteSettings.emptyPointColor ? heatMap.paletteSettings.emptyPointColor :\n            heatMap.themeStyle.emptyCellColor;\n        var tempcolorMapping = this.orderbyOffset(this.heatMap.isColorRange ? heatMap.paletteSettings.palette :\n            heatMap.paletteSettings.palette && heatMap.paletteSettings.palette.length > 1 ?\n                heatMap.paletteSettings.palette : heatMap.themeStyle.palette);\n        if (!tempcolorMapping.isCompact) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length - 1);\n            }\n            else {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length);\n            }\n            if (tempcolorMapping.offsets.length >= 2) {\n                for (var index = 0; index < tempcolorMapping.offsets.length; index++) {\n                    heatMap.colorCollection.push(new ColorCollection((Math.round(((minValue) + (index * range)) * 100) / 100), tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor));\n                    heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor, false));\n                }\n            }\n        }\n        else {\n            heatMap.colorCollection = tempcolorMapping.offsets;\n            heatMap.legendColorCollection = extend([], tempcolorMapping.offsets, null, true);\n        }\n        if (!this.heatMap.isColorRange) {\n            this.updateLegendColorCollection(minValue, maxValue, tempcolorMapping);\n        }\n    };\n    /**\n     * To update legend color Collection.\n     * @private\n     */\n    CellColor.prototype.updateLegendColorCollection = function (minValue, maxValue, tempcolorMapping) {\n        if (this.heatMap.paletteSettings.type === 'Fixed' && (tempcolorMapping.isCompact || tempcolorMapping.isLabel)) {\n            return;\n        }\n        if (Math.round(minValue * 100) / 100 < this.heatMap.legendColorCollection[0].value) {\n            this.heatMap.legendColorCollection.unshift(new LegendColorCollection(Math.round(minValue * 100) / 100, this.heatMap.legendColorCollection[0].color, this.heatMap.legendColorCollection[0].label, this.heatMap.legendColorCollection[0].startValue, this.heatMap.legendColorCollection[0].endValue, this.heatMap.legendColorCollection[0].minColor, this.heatMap.legendColorCollection[0].maxColor, true));\n        }\n        if (Math.round(maxValue * 100) / 100 > this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].value) {\n            this.heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(maxValue * 100) / 100, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].color, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].label, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].startValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].endValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].minColor, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].maxColor, true));\n        }\n    };\n    /**\n     * To get ordered palette color collection.\n     * @private\n     */\n    CellColor.prototype.orderbyOffset = function (offsets) {\n        var returnCollection = new PaletterColor();\n        var key = this.heatMap.isColorRange ? 'to' : 'value';\n        var label = 'label';\n        returnCollection.isCompact = true;\n        returnCollection.isLabel = true;\n        // tslint:disable-next-line:no-any\n        returnCollection.offsets = offsets.sort(function (a, b) {\n            if (isNullOrUndefined(a[label]) && isNullOrUndefined(b[label])) {\n                returnCollection.isLabel = false;\n            }\n            if (!isNullOrUndefined(a[key]) && !isNullOrUndefined(b[key])) {\n                return a[key] - b[key];\n            }\n            else {\n                returnCollection.isCompact = false;\n                return a;\n            }\n        });\n        if (!returnCollection.isCompact) {\n            returnCollection.offsets = this.heatMap.paletteSettings.palette && this.heatMap.paletteSettings.palette.length > 1 ?\n                this.heatMap.paletteSettings.palette : this.heatMap.themeStyle.palette;\n        }\n        return returnCollection;\n    };\n    /**\n     * To get color depends to value.\n     * @private\n     */\n    CellColor.prototype.getColorByValue = function (text) {\n        var color = '';\n        var rbg;\n        var compareValue = 0;\n        if (text.toString() !== '') {\n            if (this.heatMap.cellSettings.tileType === 'Bubble' &&\n                (this.heatMap.cellSettings.bubbleType === 'Size' || this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                color = this.heatMap.isColorRange ? this.heatMap.colorCollection[0].minColor : this.heatMap.colorCollection[0].color;\n            }\n            else if (this.heatMap.paletteSettings.type === 'Fixed') {\n                for (var y = 0; y < this.heatMap.colorCollection.length; y++) {\n                    compareValue = this.heatMap.isColorRange ? this.heatMap.paletteSettings.palette[y].startValue :\n                        this.heatMap.colorCollection[y + 1] ? this.heatMap.colorCollection[y + 1].value :\n                            this.heatMap.colorCollection[y].value;\n                    var singleValue = this.heatMap.dataSourceMinValue === this.heatMap.dataSourceMaxValue;\n                    if (this.heatMap.isColorRange) {\n                        var legendRange = void 0;\n                        if ((text <= this.heatMap.colorCollection[y].endValue && text >= this.heatMap.colorCollection[y].startValue)) {\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].minColor;\n                            break;\n                        }\n                        else {\n                            color = this.heatMap.paletteSettings.fillColor.minColor;\n                        }\n                    }\n                    else {\n                        if ((text <= compareValue && singleValue && y === 0) || text < compareValue ||\n                            (text >= compareValue && y === this.heatMap.colorCollection.length - 1)) {\n                            var legendRange = void 0;\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].color;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.heatMap.paletteSettings.colorGradientMode !== 'Table') {\n                    this.getColorCollection();\n                }\n                if (text < this.heatMap.colorCollection[0].value && !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[0].color;\n                }\n                else if (text > this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].value &&\n                    !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].color;\n                }\n                else {\n                    rbg = this.convertToRGB(text, this.heatMap.colorCollection);\n                    color = this.rgbToHex(rbg.R, rbg.G, rbg.B);\n                }\n            }\n        }\n        else {\n            color = this.heatMap.emptyPointColor;\n        }\n        return color;\n    };\n    return CellColor;\n}());\nexport { CellColor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * HeatMap Axis file\n */\nimport { Property, Complex, ChildProperty, isNullOrUndefined, Collection } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { Font, Title, AxisLabelBorder, MultiLevelLabels } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { Rect, measureText, Size, rotateTextSize, increaseDateTimeInterval, formatValue } from '../utils/helper';\nimport { MultiLevelPosition, textWrap } from '../utils/helper';\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        /** @private */\n        _this.maxLabelSize = new Size(0, 0);\n        /** @private */\n        _this.titleSize = new Size(0, 0);\n        /** @private */\n        _this.axisLabels = [];\n        /** @private */\n        _this.tooltipLabels = [];\n        /** @private */\n        _this.labelValue = [];\n        /** @private */\n        _this.axisLabelSize = 0;\n        /** @private */\n        _this.axisLabelInterval = 0;\n        /** @private */\n        _this.dateTimeAxisLabelInterval = [];\n        /** @private */\n        _this.maxLength = 0;\n        /** @private */\n        _this.min = 0;\n        /** @private */\n        _this.max = 0;\n        /** @private */\n        _this.isIntersect = false;\n        /** @private */\n        _this.jsonCellLabel = [];\n        _this.multiLevelSize = [];\n        /** @private */\n        _this.xAxisMultiLabelHeight = [];\n        /** @private */\n        _this.yAxisMultiLabelHeight = [];\n        /** @private */\n        _this.multiLevelPosition = [];\n        return _this;\n    }\n    /**\n     * measure the axis title and label size\n     * @param axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.computeSize = function (axis, heatmap, rect) {\n        var size = new Size(0, 0);\n        var innerPadding = 10;\n        this.titleSize = axis.getTitleSize(axis, innerPadding);\n        this.maxLabelSize = axis.getMaxLabelSize(axis, heatmap);\n        this.getMultilevelLabelsHeight(axis, rect, heatmap);\n        for (var i = 0; i < this.multiLevelLabels.length; i++) {\n            size = axis.multiLevelLabelSize(innerPadding, i);\n            this.multiLevelSize.push(size);\n        }\n    };\n    /**\n     * calculating x, y position of multi level labels\n     * @private\n     */\n    Axis.prototype.multiPosition = function (axis, index) {\n        var innerPadding = axis.orientation === 'Horizontal' ? 10 : 20;\n        var multiPosition = new MultiLevelPosition(0, 0);\n        if (axis.orientation === 'Horizontal') {\n            var level0 = axis.maxLabelSize.height + innerPadding;\n            var level1 = this.xAxisMultiLabelHeight[index - 1];\n            multiPosition.x = (axis.isInversed ? axis.rect.x + axis.rect.width : axis.rect.x);\n            multiPosition.y = index === 0 ? axis.rect.y + (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].y + (axis.opposedPosition ? -level1 : level1);\n        }\n        else {\n            var level0 = axis.maxLabelSize.width + innerPadding;\n            var level1 = index !== 0 && (this.multiLevelSize[index - 1].width);\n            multiPosition.x = index === 0 ? axis.rect.x - (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].x - (axis.opposedPosition ? -(level1 + innerPadding) : level1 + innerPadding);\n            multiPosition.y = axis.isInversed ? axis.rect.y : axis.rect.y + axis.rect.height;\n        }\n        return multiPosition;\n    };\n    Axis.prototype.multiLevelLabelSize = function (innerPadding, index) {\n        var labelSize = new Size(0, 0);\n        var multiLevel = this.multiLevelLabels;\n        var categoryLabel = multiLevel[index].categories;\n        for (var i = 0; i < categoryLabel.length; i++) {\n            var size_1 = measureText(categoryLabel[i].text, multiLevel[index].textStyle);\n            labelSize.width = (labelSize.width > size_1.width) ? labelSize.width : size_1.width;\n            labelSize.height = (labelSize.height > size_1.height) ? labelSize.height : size_1.height;\n        }\n        var size = (this.orientation === 'Horizontal') ? this.xAxisMultiLabelHeight[index] : this.yAxisMultiLabelHeight[index];\n        if (this.opposedPosition) {\n            this.farSizes.push(size);\n        }\n        else {\n            this.nearSizes.push(size);\n        }\n        return labelSize;\n    };\n    Axis.prototype.getMultilevelLabelsHeight = function (axis, rect, heatmap) {\n        var labelSize;\n        var gap;\n        var height;\n        var multiLevelLabelsHeight = [];\n        var start;\n        var end;\n        var startPosition;\n        var endPosition;\n        var isVertical = axis.orientation === 'Vertical';\n        var axisValue = (isVertical ? rect.height : rect.width) / axis.axisLabelSize;\n        var padding = axis.orientation === 'Vertical' ? 20 : 10;\n        this.multiLevelLabels.map(function (multiLevel, index) {\n            multiLevel.categories.map(function (categoryLabel) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    startPosition = heatmap.heatMapAxis.calculateLeftPosition(axis, start, categoryLabel.start, rect);\n                    endPosition = heatmap.heatMapAxis.calculateWidth(axis, categoryLabel.end, end, rect);\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endPosition - startPosition) :\n                        categoryLabel.maximumTextWidth);\n                    if ((labelSize.width > gap - padding) && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height + padding :\n                        ((multiLevelLabelsHeight[index] < height) ? height + padding : multiLevelLabelsHeight[index]);\n                }\n            });\n        });\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n    };\n    Axis.prototype.getTitleSize = function (axis, innerPadding) {\n        var titleSize = new Size(0, 0);\n        if (this.title.text) {\n            titleSize = measureText(this.title.text, this.title.textStyle);\n            titleSize.height += innerPadding;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(titleSize.height);\n        }\n        else {\n            this.nearSizes.push(titleSize.height);\n        }\n        return titleSize;\n    };\n    Axis.prototype.getMaxLabelSize = function (axis, heatmap) {\n        var labelSize = new Size(0, 0);\n        var labels = this.axisLabels;\n        var padding = (axis.border.width > 0 || axis.multiLevelLabels.length > 0) ? 10 : 0;\n        axis.angle = axis.labelRotation;\n        axis.isIntersect = false;\n        if (axis.orientation === 'Horizontal' && (axis.labelIntersectAction === 'Rotate45' ||\n            (axis.labelRotation % 180 === 0 && axis.labelIntersectAction === 'Trim'))) {\n            var interval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                heatmap.initialClipRect.width / axis.axisLabelSize : heatmap.initialClipRect.width / axis.axisLabels.length;\n            var startX = heatmap.initialClipRect.x + ((!axis.isInversed) ? 0 : heatmap.initialClipRect.width);\n            var previousEnd = void 0;\n            var previousStart = void 0;\n            for (var i = 0, len = labels.length; i < len; i++) {\n                var label = labels[i];\n                var elementSize = measureText(label, axis.textStyle);\n                var axisInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] * interval : interval;\n                var startPoint = startX + (!axis.isInversed ?\n                    ((interval - elementSize.width) / 2) : -((interval + elementSize.width) / 2));\n                startPoint = startPoint < heatmap.initialClipRect.x ? heatmap.initialClipRect.x : startPoint;\n                var endPoint = startPoint + elementSize.width;\n                if (!axis.isInversed) {\n                    if (isNullOrUndefined(previousEnd)) {\n                        previousEnd = endPoint;\n                    }\n                    else if ((startPoint < previousEnd)) {\n                        if (axis.labelIntersectAction === 'Rotate45') {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousEnd = endPoint;\n                }\n                else {\n                    if (isNullOrUndefined(previousStart)) {\n                        previousStart = startPoint;\n                    }\n                    else if ((previousStart < endPoint)) {\n                        if (axis.labelIntersectAction === 'Rotate45') {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousStart = startPoint;\n                }\n                startX += axis.isInversed ? -axisInterval : axisInterval;\n            }\n        }\n        for (var i = 0; i < labels.length; i++) {\n            var size = (axis.angle % 180 === 0) ?\n                measureText(labels[i], axis.textStyle) : rotateTextSize(axis.textStyle, labels[i], axis.angle);\n            labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n            labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        else {\n            this.nearSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        return labelSize;\n    };\n    /**\n     * Generate the axis lables for numeric axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateNumericAxisLabels = function (heatmap) {\n        //Axis Min\n        var min = 0;\n        var max = 0;\n        var interval = this.interval ? this.interval : 1;\n        var adaptorMin;\n        var adaptorMax;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.min : heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.max : heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        min = !isNullOrUndefined(this.minimum) ? this.minimum : ((adaptorMin) ? adaptorMin : 0);\n        max = !isNullOrUndefined(this.maximum) ? this.maximum :\n            ((adaptorMax) ? adaptorMax : (this.maxLength * this.increment));\n        var temp;\n        if (this.minimum && this.maximum && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        max = !isNullOrUndefined(this.maximum) ? max : (adaptorMax ? adaptorMax : (max + min));\n        var format = this.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatmap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        for (var i = min; i <= max; i = i + (interval * this.increment)) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.axisLabels.push(value);\n        }\n        this.min = 0;\n        this.axisLabelSize = Math.floor(((max - min) / this.increment) + 1);\n        this.max = this.axisLabelSize - 1;\n        this.axisLabelInterval = interval;\n        for (var i = min; i <= max; i = i + this.increment) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.tooltipLabels.push(value);\n            this.labelValue.push(i);\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis lables for category axis\n     * @private\n     */\n    Axis.prototype.calculateCategoryAxisLabels = function () {\n        var labels = this.labels ? this.labels : [];\n        labels = (labels.length > 0) ? labels : this.jsonCellLabel;\n        var min = !isNullOrUndefined(this.minimum) ? this.minimum : 0;\n        var max = !isNullOrUndefined(this.maximum) ? this.maximum : this.maxLength;\n        var interval = this.interval ? this.interval : 1;\n        var temp;\n        if (!isNullOrUndefined(this.minimum) && !isNullOrUndefined(this.maximum) && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        if (labels && labels.length > 0) {\n            for (var i = min; i <= max; i = i + interval) {\n                var value = labels[i] ? labels[i].toString() : i.toString();\n                this.axisLabels.push(value);\n            }\n        }\n        else {\n            for (var i = min; i <= max; i = i + interval) {\n                this.axisLabels.push(i.toString());\n            }\n        }\n        for (var i = min; i <= max; i++) {\n            this.tooltipLabels.push(labels[i] ? labels[i].toString() : i.toString());\n            this.labelValue.push(labels[i] ? labels[i].toString() : i.toString());\n        }\n        this.min = min;\n        this.max = max;\n        this.axisLabelSize = max - min + 1;\n        this.axisLabelInterval = interval;\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis labels for date time axis.\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateDateTimeAxisLabel = function (heatmap) {\n        var interval = this.interval ? this.interval : 1;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = heatmap.intl.getDateParser(option);\n        var dateFormatter = heatmap.intl.getDateFormat(option);\n        var min;\n        var max;\n        var adaptorMin = null;\n        var adaptorMax = null;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.min :\n                heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.max :\n                heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        var minimum = this.minimum ? this.minimum : (adaptorMin ? adaptorMin : null);\n        var maximum = this.maximum ? this.maximum : (adaptorMax ? adaptorMax : null);\n        if (minimum === null && maximum === null) {\n            min = 0;\n            max = this.maxLength * this.increment;\n            for (var i = min; i <= max; i = i + (interval * this.increment)) {\n                this.axisLabels.push(i.toString());\n                this.tooltipLabels.push(i.toString());\n                this.labelValue.push(i.toString());\n            }\n            this.min = 0;\n            this.max = this.maxLength;\n            this.axisLabelSize = (max - min) / this.increment + 1;\n            this.axisLabelInterval = interval;\n        }\n        else {\n            if (minimum !== null && maximum === null) {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = increaseDateTimeInterval(min, this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else if (minimum === null && maximum !== null) {\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n                min = increaseDateTimeInterval(max, -this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n            }\n            this.format = heatmap.intl.getDateFormat({\n                format: this.labelFormat, skeleton: this.getSkeleton()\n            });\n            var tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.axisLabels.push(value);\n                if (this.showLabelOn !== 'None') {\n                    interval = this.calculateLabelInterval(tempInterval);\n                    this.dateTimeAxisLabelInterval.push(interval);\n                }\n                tempInterval = increaseDateTimeInterval(tempInterval, interval, this.intervalType, this.increment).getTime();\n            }\n            this.min = 0;\n            this.axisLabelInterval = interval;\n            this.axisLabelSize = this.getTotalLabelLength(min, max); // this.tooltipLabels.length;\n            this.max = this.axisLabelSize - 1;\n            tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.tooltipLabels.push(value);\n                this.labelValue.push(new Date(tempInterval));\n                tempInterval = increaseDateTimeInterval(tempInterval, 1, this.intervalType, this.increment).getTime();\n            }\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    Axis.prototype.calculateLabelInterval = function (interval) {\n        var year = new Date(interval).getFullYear();\n        var month = new Date(interval).getMonth() + 1;\n        var day = new Date(interval).getDate();\n        var numberOfDays;\n        var tempInterval;\n        if (this.showLabelOn === 'Years' || this.showLabelOn === 'Months') {\n            if (this.showLabelOn === 'Years' && this.intervalType === 'Months') {\n                tempInterval = Math.ceil(12 / this.increment);\n            }\n            else {\n                numberOfDays = this.showLabelOn === 'Years' ? year % 4 === 0 ? 366 : 365 : new Date(year, month, 0).getDate();\n                numberOfDays += 1 - day;\n                tempInterval = this.intervalType === 'Days' ? Math.ceil(numberOfDays / this.increment) : this.intervalType === 'Hours' ?\n                    Math.ceil((numberOfDays * 24) / this.increment) : this.intervalType === 'Minutes' ?\n                    Math.ceil((numberOfDays * 24 * 60) / this.increment) : 1;\n            }\n        }\n        else if (this.showLabelOn === 'Days') {\n            tempInterval = this.intervalType === 'Hours' ? Math.ceil(24 / this.increment) : this.intervalType === 'Minutes' ?\n                Math.ceil((24 * 60) / this.increment) : 1;\n        }\n        else if (this.showLabelOn === 'Hours') {\n            var minutes = new Date(interval).getMinutes();\n            tempInterval = this.intervalType === 'Minutes' ? Math.ceil((60 - minutes) / this.increment) : 1;\n        }\n        else {\n            tempInterval = 1;\n        }\n        return tempInterval;\n    };\n    /**\n     * @private\n     */\n    Axis.prototype.getSkeleton = function () {\n        var skeleton;\n        if (this.intervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (this.intervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (this.intervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (this.intervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (this.intervalType === 'Minutes') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    };\n    /** @private */\n    Axis.prototype.getTotalLabelLength = function (min, max) {\n        var length = 0;\n        var minimum = new Date(min);\n        var maximum = new Date(max);\n        var difference;\n        var days;\n        switch (this.intervalType) {\n            case 'Years':\n                var years = ((maximum.getFullYear() - minimum.getFullYear()) / this.increment) + 1;\n                length = Math.floor(years);\n                break;\n            case 'Months':\n                var months = (maximum.getFullYear() - minimum.getFullYear()) * 12;\n                months -= minimum.getMonth();\n                months += maximum.getMonth();\n                length = months <= 0 ? 1 : Math.floor((months / this.increment) + 1);\n                break;\n            case 'Days':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                days = Math.floor(difference / (1000 * 3600 * 24));\n                length = Math.floor((days / this.increment) + 1);\n                break;\n            case 'Hours':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var hours = Math.floor(difference / (1000 * 3600));\n                length = Math.floor(hours / this.increment) + 1;\n                break;\n            case 'Minutes':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var minutes = Math.floor(difference / (1000 * 60));\n                length = Math.floor(minutes / this.increment) + 1;\n                break;\n        }\n        return length;\n    };\n    /**\n     * Clear the axis label collection\n     * @private\n     */\n    Axis.prototype.clearAxisLabel = function () {\n        this.axisLabels = [];\n        this.tooltipLabels = [];\n        this.dateTimeAxisLabelInterval = [];\n        this.labelValue = [];\n    };\n    __decorate([\n        Complex({ text: '', textStyle: Theme.axisTitleFont }, Title)\n    ], Axis.prototype, \"title\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"labels\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Axis.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(0)\n    ], Axis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property('Category')\n    ], Axis.prototype, \"valueType\", void 0);\n    __decorate([\n        Property(1)\n    ], Axis.prototype, \"increment\", void 0);\n    __decorate([\n        Property('None')\n    ], Axis.prototype, \"showLabelOn\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"interval\", void 0);\n    __decorate([\n        Property('')\n    ], Axis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('Days')\n    ], Axis.prototype, \"intervalType\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Axis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 0, type: 'Rectangle' }, AxisLabelBorder)\n    ], Axis.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelLabels)\n    ], Axis.prototype, \"multiLevelLabels\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { Rect, measureText, TextOption, rotateTextSize, textTrim, CanvasTooltip, PathOption, textWrap } from '../utils/helper';\nimport { sum, titlePositionX, LineOption, Line, DrawSvgCanvas, TextBasic, titlePositionY } from '../utils/helper';\nimport { extend, Browser } from '@syncfusion/ej2-base';\nvar AxisHelper = /** @class */ (function () {\n    function AxisHelper(heatMap) {\n        this.heatMap = heatMap;\n        this.padding = 10;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    /**\n     * To render the x and y axis.\n     *  @private\n     */\n    AxisHelper.prototype.renderAxes = function () {\n        this.initialClipRect = this.heatMap.initialClipRect;\n        var heatMap = this.heatMap;\n        var axisElement;\n        var element;\n        if (!heatMap.enableCanvasRendering) {\n            axisElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'AxisCollection' });\n        }\n        var axes = this.heatMap.axisCollections;\n        for (var i = 0, len = axes.length; i < len; i++) {\n            var axis = axes[i];\n            var optionsLine = {};\n            if (axis.orientation === 'Horizontal') {\n                if (!heatMap.enableCanvasRendering) {\n                    element = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisGroup' });\n                }\n                this.drawXAxisLine(element, axis);\n                this.drawXAxisTitle(axis, element, axis.rect);\n                this.drawXAxisLabels(axis, element, axis.rect);\n            }\n            else {\n                element = heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisGroup' });\n                this.drawYAxisLine(element, axis);\n                this.drawYAxisTitle(axis, element, axis.rect);\n                this.drawYAxisLabels(axis, element, axis.rect);\n            }\n            if (axis.multiLevelLabels.length > 0) {\n                this.drawMultiLevels(element, axis);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                axisElement.appendChild(element);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.heatMap.svgObject.appendChild(axisElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisLine = function (parent, axis) {\n        var y = this.initialClipRect.y + (!axis.opposedPosition ? this.initialClipRect.height : 0);\n        var line = new LineOption(this.heatMap.element.id + '_XAxisLine', new Line(this.initialClipRect.x, y, this.initialClipRect.x + this.initialClipRect.width, y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawYAxisLine = function (parent, axis) {\n        var x = this.initialClipRect.x + ((!axis.opposedPosition) ? 0 : this.initialClipRect.width);\n        var line = new LineOption(this.heatMap.element.id + '_YAxisLine', new Line(x, this.initialClipRect.y, x, this.initialClipRect.height + this.initialClipRect.y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawXAxisTitle = function (axis, parent, rect) {\n        var titlepadding = (axis.textStyle.size === '0px' ? 0 : 10);\n        var y = rect.y + (!axis.opposedPosition ? (axis.maxLabelSize.height + titlepadding +\n            sum(axis.xAxisMultiLabelHeight)) : -(axis.maxLabelSize.height + titlepadding + sum(axis.xAxisMultiLabelHeight)));\n        if (axis.title.text) {\n            var heatMap = this.heatMap;\n            var title = axis.title;\n            var elementSize = measureText(title.text, title.textStyle);\n            var padding = this.padding;\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n            var options = new TextOption(heatMap.element.id + '_XAxisTitle', new TextBasic(rect.x + titlePositionX(rect.width, 0, 0, title.textStyle), y + padding, anchor, title.text), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            this.drawSvgCanvas.createText(options, parent, title.text);\n        }\n    };\n    AxisHelper.prototype.drawYAxisTitle = function (axis, parent, rect) {\n        if (axis.title.text) {\n            var title = axis.title;\n            var heatMap = this.heatMap;\n            var labelRotation = (axis.opposedPosition) ? 90 : -90;\n            var elementSize = measureText(title.text, title.textStyle);\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            var padding = 10;\n            padding = axis.opposedPosition ? padding : -padding;\n            var titlepadding = (axis.textStyle.size === '0px' ? 0 : padding);\n            var x = rect.x + titlepadding + ((axis.opposedPosition) ? axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight) :\n                -(axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight)));\n            var y = rect.y + titlePositionY(rect, 0, 0, title.textStyle) + (axis.opposedPosition ? this.padding : -this.padding);\n            var options = new TextOption(heatMap.element.id + '_YAxisTitle', new TextBasic(x, y - this.padding, anchor, title.text, labelRotation, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', 'auto'), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            if (!this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.createText(options, parent, title.text);\n            }\n            else {\n                this.drawSvgCanvas.canvasDrawText(options, title.text, x, y);\n            }\n        }\n    };\n    /**\n     * Get the visible labels for both x and y axis\n     * @private\n     */\n    AxisHelper.prototype.calculateVisibleLabels = function () {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        var data = this.heatMap.dataSourceSettings;\n        var processLabels = !(data && data.isJsonData && data.adaptorType === 'Cell');\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            axis = axisCollection[i];\n            if (axis.valueType === 'Numeric' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n            else if (axis.valueType === 'DateTime' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else if (axis.valueType === 'Category') {\n                axis.clearAxisLabel();\n                axis.calculateCategoryAxisLabels();\n            }\n            axis.tooltipLabels = axis.isInversed ? axis.tooltipLabels.reverse() : axis.tooltipLabels;\n        }\n    };\n    /**\n     * Measure the title and labels rendering position for both X and Y axis.\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.measureAxis = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = axisCollection.length - 1; i >= 0; i--) {\n            axis = axisCollection[i];\n            var padding = axis.textStyle.size === '0px' ? 0 : this.padding;\n            axis.nearSizes = [];\n            axis.farSizes = [];\n            axis.computeSize(axis, heatmap, rect);\n            if (!axis.opposedPosition) {\n                if (axis.orientation === 'Horizontal') {\n                    rect.height -= (sum(axis.nearSizes) + padding);\n                }\n                else {\n                    rect.x += sum(axis.nearSizes) + padding;\n                    rect.width -= sum(axis.nearSizes) + padding;\n                }\n            }\n            else {\n                if (axis.orientation === 'Horizontal') {\n                    rect.y += sum(axis.farSizes) + padding;\n                    rect.height -= sum(axis.farSizes) + padding;\n                }\n                else {\n                    rect.width -= sum(axis.farSizes) + padding;\n                }\n            }\n        }\n    };\n    /**\n     * Calculate the X and Y axis line position\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.calculateAxisSize = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            var axis_1 = axisCollection[i];\n            axis_1.rect = extend({}, rect, null, true);\n            if (axis_1.orientation === 'Horizontal' && !axis_1.opposedPosition) {\n                axis_1.rect.y = rect.y + rect.height;\n                axis_1.rect.height = 0;\n            }\n            if (axis_1.orientation === 'Vertical' && axis_1.opposedPosition) {\n                axis_1.rect.x = rect.x + rect.width;\n                axis_1.rect.width = 0;\n            }\n            axis_1.multiLevelPosition = [];\n            for (var i_1 = 0; i_1 < axis_1.multiLevelLabels.length; i_1++) {\n                var multiPosition = axis_1.multiPosition(axis_1, i_1);\n                axis_1.multiLevelPosition.push(multiPosition);\n            }\n        }\n    };\n    AxisHelper.prototype.drawXAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.width / axis.axisLabelSize;\n        var compactInterval = 0;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var tempintervel = rect.width / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.width / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n            axisInterval = temp;\n        }\n        var padding = 10;\n        var lableStrtX = rect.x + (!axis.isInversed ? 0 : rect.width);\n        var labelPadding;\n        var angle = axis.angle;\n        padding = this.padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var lableRect = new Rect(lableStrtX, rect.y, interval, rect.height);\n            var label = (axis.labelIntersectAction === 'Trim' && axis.isIntersect) ? axis.valueType !== 'DateTime' ||\n                axis.showLabelOn === 'None' ? textTrim(interval * axisInterval, labels[i], axis.textStyle) :\n                textTrim(axis.dateTimeAxisLabelInterval[i] * interval, labels[i], axis.textStyle) : labels[i];\n            var elementSize = measureText(label, axis.textStyle);\n            var transform = void 0;\n            labelPadding = (axis.opposedPosition) ?\n                -(padding)\n                : (padding + ((angle % 360) === 0 ? (elementSize.height / 2) : 0));\n            var x = lableRect.x + ((!axis.isInversed) ?\n                (lableRect.width / 2) - (elementSize.width / 2) : -((lableRect.width / 2) + (elementSize.width / 2)));\n            if (axis.labelIntersectAction === 'Trim') {\n                x = (!axis.isInversed) ? (x >= lableRect.x ? x : lableRect.x) : (x > (lableStrtX - interval) ? x : (lableStrtX - interval));\n            }\n            else if (angle % 180 === 0) {\n                x = x < rect.x ? rect.x : x;\n                x = ((x + elementSize.width) > (rect.x + rect.width)) ? (rect.x + rect.width - elementSize.width) : x;\n            }\n            var y = rect.y + labelPadding;\n            this.drawXAxisBorder(axis, borderElement, axis.rect, x, elementSize.width, i);\n            if (angle % 360 !== 0) {\n                angle = (angle > 360) ? angle % 360 : angle;\n                var rotateSize = rotateTextSize(axis.textStyle, label, angle);\n                var diffHeight = axis.maxLabelSize.height - Math.ceil(rotateSize.height - elementSize.height);\n                var yLocation = axis.opposedPosition ? diffHeight / 2 : -diffHeight / 2;\n                x = lableRect.x + (axis.isInversed ? -(lableRect.width / 2) : (lableRect.width / 2));\n                y = y + (axis.opposedPosition ? -(rotateSize.height / 2) :\n                    (((angle % 360) === 180 || (angle % 360) === -180) ? 0 : (rotateSize.height) / 2));\n                transform = 'rotate(' + angle + ',' + x + ','\n                    + y + ')';\n            }\n            var options = new TextOption(heatMap.element.id + '_XAxis_Label' + i, new TextBasic(x, y, (angle % 360 === 0) ? 'start' : 'middle', label, angle, transform), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (angle !== 0 && this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.canvasDrawText(options, label);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, labelElement, label);\n            }\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStrtX = lableStrtX + (!axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStrtX = lableStrtX + (!axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n            }\n            if (label.indexOf('...') !== -1) {\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(labels[i], new Rect(x, y - elementSize.height, elementSize.width, elementSize.height)));\n            }\n            if (compactInterval !== 0) {\n                i = i + (compactInterval - 1);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawYAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.height / axis.axisLabelSize;\n        var compactInterval = 0;\n        var tempintervel = rect.height / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.height / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n        }\n        var padding = 10;\n        var lableStartY = rect.y + (axis.isInversed ? 0 : rect.height);\n        var anchor = axis.opposedPosition ? 'start' : 'end';\n        padding = axis.opposedPosition ? padding : -padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var labelRect = new Rect(rect.x, lableStartY, rect.width, interval);\n            var position = labelRect.height / 2; //titlePositionY(lableRect, 0, 0, axis.textStyle);\n            var x = labelRect.x + padding;\n            var y = labelRect.y + (axis.isInversed ? position : -position);\n            var options = new TextOption(heatMap.element.id + '_YAxis_Label' + i, new TextBasic(x, y, anchor, labels[i], 0, 'rotate(' + 0 + ',' + (x) + ',' + (y) + ')', 'middle'), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                options.dy = '1ex';\n            }\n            this.drawSvgCanvas.createText(options, labelElement, labels[i]);\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStartY = lableStartY + (axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStartY = lableStartY + (axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n                i = i + (compactInterval - 1);\n            }\n            var elementSize = measureText(labels[i], axis.textStyle);\n            this.drawYAxisBorder(axis, borderElement, axis.rect, y, elementSize.height, i);\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisBorder = function (axis, parent, rect, lableX, width, index) {\n        var interval = rect.width / axis.axisLabelSize;\n        var path = '';\n        var padding = 10;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = axis.isInversed ? rect.x + rect.width - (interval * index * axisInterval) :\n            rect.x + (interval * index * axisInterval);\n        var startY = rect.y;\n        var endX;\n        var endY;\n        endY = startY + (axis.opposedPosition ? -(axis.maxLabelSize.height + padding) : axis.maxLabelSize.height + padding);\n        endX = axis.isInversed ? startX - interval : startX + interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY);\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_1 = 3;\n                endY = startY + ((endY - startY) / 2) + (axis.opposedPosition ? 0 : 5);\n                var endY1 = axis.isInversed ? (lableX + width + padding_1) : (lableX - padding_1);\n                var endY2 = axis.isInversed ? (lableX - padding_1) : (lableX + width + padding_1);\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endY1 + ' ' + endY + ' ' + 'M' + ' ' + endY2 +\n                    ' ' + endY + ' ' + 'L' +\n                    ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    AxisHelper.prototype.drawYAxisBorder = function (axis, parent, rect, lableY, height, index) {\n        var interval = rect.height / axis.axisLabelSize;\n        var path = '';\n        var padding = 20;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = rect.x;\n        var startY = axis.isInversed ? rect.y + (interval * index * axisInterval) :\n            rect.y + rect.height - (interval * index * axisInterval);\n        var endX;\n        var endY;\n        endX = startX + (!axis.opposedPosition ? -(axis.maxLabelSize.width + padding) : axis.maxLabelSize.width + padding);\n        endY = axis.isInversed ? startY + interval : startY - interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY;\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                endX = startX - (startX - endX) / 2;\n                var endY1 = axis.isInversed ? lableY - height / 2 : lableY + height / 2;\n                var endY2 = axis.isInversed ? lableY + height / 2 : lableY - height / 2;\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY1 + ' ' + 'M' + ' ' +\n                    endX + ' ' + endY2 + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY;\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    /**\n     * To create border element for axis.\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createAxisBorderElement = function (axis, labelBorder, parent, index) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? '_XAxis_Label_Border' : '_YAxis_Label_Border';\n        var pathOptions = new PathOption(this.heatMap.element.id + id + index, 'transparent', axis.border.width, axis.border.color, 1, 'none', labelBorder);\n        if (!this.heatMap.enableCanvasRendering) {\n            var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    AxisHelper.prototype.drawMultiLevels = function (parent, axis) {\n        var element;\n        if (!this.heatMap.enableCanvasRendering) {\n            element = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_' + axis.orientation + '_MultiLevelLabel' });\n        }\n        axis.orientation === 'Horizontal' ? this.renderXAxisMultiLevelLabels(axis, element, axis.rect) :\n            this.renderYAxisMultiLevelLabels(axis, element, axis.rect);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(element);\n        }\n    };\n    /**\n     * render x axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var endX = 0;\n        var tooltip;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var width;\n        var textLength;\n        var position = (isInversed ? axis.rect.width : 0) + axis.rect.x;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_XAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                tooltip = false;\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startX = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startY = axis.multiLevelPosition[level].y;\n                endX = position + _this.calculateWidth(axis, categoryLabel.end, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endX - startX) : categoryLabel.maximumTextWidth) - padding;\n                y = startY + (opposedPosition ? -((axis.xAxisMultiLabelHeight[level] - labelSize.height)) : labelSize.height);\n                width = categoryLabel.maximumTextWidth ? categoryLabel.maximumTextWidth : labelSize.width;\n                x = !isInversed ? startX + padding : startX - gap;\n                if (multiLevel.alignment === 'Center') {\n                    x = ((endX - startX) / 2) + startX;\n                    x -= (labelSize.width > gap ? gap : labelSize.width) / 2;\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    x = !isInversed ? endX - padding : startX - padding;\n                    x -= (labelSize.width > gap ? gap : labelSize.width);\n                }\n                else {\n                    x = !isInversed ? startX + padding : endX + padding;\n                }\n                if (multiLevel.overflow === 'None' && labelSize.width > Math.abs(endX - startX)) {\n                    x = !isInversed ? startX + padding : startX - labelSize.width - padding;\n                    anchor = 'start';\n                }\n                var textBasic = new TextBasic(x, y, anchor, categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_XAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                if (multiLevel.overflow === 'Wrap') {\n                    options.text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    textLength = options.text.length;\n                }\n                else if (multiLevel.overflow === 'Trim') {\n                    options.text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    textLength = 1;\n                }\n                if (multiLevel.overflow === 'Wrap' && options.text.length > 1) {\n                    _this.drawSvgCanvas.createWrapText(options, multiLevel.textStyle, labelElement);\n                    for (var i_2 = 0; i_2 < options.text.length; i_2++) {\n                        if (options.text[i_2].indexOf('...') !== -1) {\n                            tooltip = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n                if (options.text.indexOf('...') !== -1 || options.text[0].indexOf('...') !== -1 || tooltip) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height * textLength)));\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderXAxisLabelBorder(level, axis, startX, startY, endX, pathRect, level, labelSize, gap, x);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisLabelBorder = function (labelIndex, axis, startX, startY, endX, path, level, labelSize, gap, x) {\n        var path1;\n        var path2;\n        var endY = startY + (axis.opposedPosition ? -(axis.xAxisMultiLabelHeight[labelIndex]) :\n            axis.xAxisMultiLabelHeight[labelIndex]);\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding = 3;\n                path1 = axis.isInversed ? (labelSize.width > gap ? gap : labelSize.width) + x + padding : x - padding;\n                path2 = axis.isInversed ? x - padding : (labelSize.width > gap ? gap : labelSize.width) + x + padding;\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + (endY - startY) / 2) + ' ' +\n                    'L' + ' ' + path1 + ' ' + (startY + (endY - startY) / 2) + ' ' + 'M' + ' ' + path2 + ' ' + (startY +\n                    (endY - startY) / 2) + ' ' + 'L' + ' ' + endX + ' ' + (startY + (endY - startY) / 2) +\n                    ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * render y axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var startY2;\n        var endY;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var interval = (axis.rect.height / axis.axisLabelSize) / axis.increment;\n        var text;\n        var position = (!isInversed ? axis.rect.height : 0) + axis.rect.y;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            startY2 = axis.multiLevelPosition[level].y;\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_YAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startY = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startX = axis.multiLevelPosition[level].x;\n                endY = position + _this.calculateWidth(axis, categoryLabel.start, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(startX) : categoryLabel.maximumTextWidth) - padding;\n                var maxWidth = Math.abs(startX - (startX - axis.multiLevelSize[level].width - 2 * padding)) / 2 -\n                    (labelSize.width / 2);\n                x = (axis.opposedPosition ? startX : startX - axis.multiLevelSize[level].width - 2 * padding) + maxWidth;\n                y = startY + padding;\n                if (multiLevel.overflow !== 'None') {\n                    if (multiLevel.overflow === 'Wrap') {\n                        text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    }\n                    else {\n                        text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    }\n                }\n                if (multiLevel.alignment === 'Center') {\n                    y += ((endY - startY) / 2 - (text.length * labelSize.height) / 2);\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    y = isInversed ? endY - labelSize.height / 2 : y - labelSize.height;\n                }\n                else {\n                    y = isInversed ? y + labelSize.height / 2 : endY + labelSize.height;\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderYAxisLabelBorder(level, axis, startX, startY, endY, pathRect, level, labelSize, gap, y);\n                }\n                var textBasic = new TextBasic(x, y, 'start', categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_YAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                options.text = text;\n                _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                if (options.text.indexOf('...') !== -1) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height)));\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisLabelBorder = function (labelIndex, axis, startX, startY, endY, path, level, labelSize, gap, y) {\n        var padding = 20;\n        var path1;\n        var path2;\n        var endX = startX - (axis.opposedPosition ? -(axis.multiLevelSize[labelIndex].width + padding) :\n            (axis.multiLevelSize[labelIndex].width + padding));\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_2 = 10;\n                path1 = axis.isInversed ? (y - padding_2 - 5) : (y + (labelSize.height) - padding_2);\n                path2 = axis.isInversed ? (y + (labelSize.height) - padding_2) : (y - padding_2 - 5);\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + startY + ' ' +\n                    'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + path1 + ' ' + 'M' + ' ' + (startX + (endX - startX) / 2) +\n                    ' ' + path2 + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' +\n                    endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * create borer element\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createBorderElement = function (borderIndex, axis, path, parent) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? 'XAxis' : 'YAxis';\n        var pathOptions = new PathOption(this.heatMap.element.id + '_' + id + '_MultiLevel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color, 1, '', path);\n        var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    /**\n     * calculate left position of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateLeftPosition = function (axis, start, label, rect) {\n        var value;\n        var interval;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                start -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * start * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(start, axis, true, rect);\n            value = axis.isInversed ? -interval : interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    /**\n     * calculate width of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateWidth = function (axis, label, end, rect) {\n        var interval;\n        var value;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                end -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * (end + 1) * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(end, axis, false, rect);\n            value = interval;\n            value = axis.isInversed ? -value : value;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    AxisHelper.prototype.calculateNumberOfDays = function (date, axis, start, rect) {\n        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        var oneMinute = 60 * 1000;\n        var oneHour = 60 * 60 * 1000;\n        var firstDate;\n        var secondDate;\n        var labels = axis.labelValue;\n        var position;\n        var interval = (axis.orientation === 'Horizontal' ? rect.width : rect.height) / axis.axisLabelSize;\n        var givenDate = new Date(Number(date));\n        var days = 0;\n        for (var index = 0; index < axis.axisLabelSize; index++) {\n            firstDate = new Date(Number(labels[index]));\n            secondDate = axis.isInversed ? new Date(Number(labels[index - 1])) : new Date(Number(labels[index + 1]));\n            if (index === (axis.isInversed ? 0 : axis.axisLabelSize - 1)) {\n                secondDate = new Date(Number(labels[index]));\n                if (axis.intervalType === 'Hours') {\n                    secondDate = new Date(Number(secondDate.setHours(secondDate.getHours() + 1)));\n                }\n                else if ((axis.intervalType === 'Minutes')) {\n                    secondDate = new Date(Number(secondDate.setMinutes(secondDate.getMinutes() + 1)));\n                }\n                else if ((axis.intervalType === 'Days')) {\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + 1)));\n                }\n                else {\n                    var numberOfDays = axis.intervalType === 'Months' ?\n                        new Date(secondDate.getFullYear(), secondDate.getMonth() + 1, 0).getDate() :\n                        secondDate.getFullYear() % 4 === 0 ? 366 : 365;\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + numberOfDays)));\n                }\n            }\n            if (Number(firstDate) <= date && Number(secondDate) >= date) {\n                if (axis.intervalType === 'Minutes' || axis.intervalType === 'Hours') {\n                    var totalMinutes = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneMinute)));\n                    var minutesInHours = Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneMinute));\n                    days = (interval / totalMinutes) * minutesInHours;\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n                else {\n                    var numberOfDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\n                    start ? givenDate.getDate() : givenDate.setDate(givenDate.getDate() + 1);\n                    if (numberOfDays !== 0) {\n                        days = (interval / numberOfDays) * (Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneDay)));\n                    }\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n            }\n        }\n        return position;\n    };\n    return AxisHelper;\n}());\nexport { AxisHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, extend, merge, Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, TextBasic, Path, PathAttributes, RectOption, CircleOption, TextOption, CurrentRect, DrawSvgCanvas } from '../utils/helper';\nimport { convertHexToColor, colorNameToHex, formatValue } from '../utils/helper';\nimport { CellColor } from '../utils/colorMapping';\nimport { Border, Font, BubbleTooltipData, BubbleSize } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the CellSettings property in the Heatmap.\n */\nvar CellSettings = /** @class */ (function (_super) {\n    __extends(CellSettings, _super);\n    function CellSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property('')\n    ], CellSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"enableCellHighlighting\", void 0);\n    __decorate([\n        Complex({}, BubbleSize)\n    ], CellSettings.prototype, \"bubbleSize\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], CellSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.rectLabelFont, Font)\n    ], CellSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Rect')\n    ], CellSettings.prototype, \"tileType\", void 0);\n    __decorate([\n        Property('Color')\n    ], CellSettings.prototype, \"bubbleType\", void 0);\n    __decorate([\n        Property(false)\n    ], CellSettings.prototype, \"isInversedBubbleSize\", void 0);\n    return CellSettings;\n}(ChildProperty));\nexport { CellSettings };\nvar Series = /** @class */ (function () {\n    function Series(heatMap) {\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(this.heatMap);\n        this.cellColor = new CellColor(this.heatMap);\n    }\n    /**\n     * To render rect series.\n     * @return {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Series.prototype.renderRectSeries = function () {\n        this.createSeriesGroup();\n        var heatMap = this.heatMap;\n        var isValueInRange = false;\n        heatMap.xLength = heatMap.axisCollections[0].axisLabelSize;\n        heatMap.yLength = heatMap.axisCollections[1].axisLabelSize; // Series Part\n        var tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n        var tempY = Math.round(heatMap.initialClipRect.y * 100) / 100;\n        var dataXIndex = 0;\n        var dataYIndex = 0;\n        var cellSetting = heatMap.cellSettings;\n        var tempWidth = Math.round(((heatMap.initialClipRect.width -\n            (cellSetting.border.width / 2)) / heatMap.xLength) * 100) / 100;\n        var tempHeight = Math.round(((heatMap.initialClipRect.height -\n            (cellSetting.border.width / 2)) / heatMap.yLength) * 100) / 100;\n        var tempVal = 0;\n        var themeStyle = heatMap.themeStyle;\n        var tempBorder;\n        var tempRectPosition = [];\n        var circleRadius;\n        tempBorder = cellSetting.border;\n        var borderColor;\n        var displayText;\n        this.rectPositionCollection = [];\n        this.color = '';\n        this.bubbleColorValue = [];\n        if (heatMap.yAxis.opposedPosition) {\n            tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n        }\n        circleRadius = this.getBubbleRadius(tempWidth, tempHeight);\n        for (var x = 0; x < (heatMap.xLength * heatMap.yLength); x++) {\n            if (heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataYIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataYIndex];\n            }\n            else if (heatMap.paletteSettings.colorGradientMode === 'Row' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataXIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataXIndex];\n            }\n            this.setTextAndColor(dataXIndex, dataYIndex);\n            var rectPosition = new CurrentRect(0, 0, 0, 0, 0, '', 0, 0, 0, 0, true, '', '', true);\n            borderColor = tempBorder.color;\n            if (this.heatMap.bubbleSizeWithColor) {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, extend('', this.bubbleColorValue, null, true), x, dataYIndex, dataXIndex);\n            }\n            else {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, this.text, x, dataYIndex, dataXIndex);\n            }\n            if (cellSetting.showLabel) {\n                displayText = this.getFormatedText(this.text, cellSetting.format);\n            }\n            else {\n                displayText = '';\n            }\n            rectPosition.displayText = displayText;\n            if (!isNullOrUndefined(this.heatMap.cellRender)) {\n                displayText = this.cellRendering(rectPosition, displayText);\n            }\n            if ((heatMap.renderingMode === 'Canvas' && parseFloat(tempBorder.width.toString()) === 0) || (!borderColor &&\n                cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                borderColor = this.color;\n            }\n            if (cellSetting.tileType === 'Rect') { // Rectangle/Tile Series\n                this.renderTileCell(rectPosition, tempBorder, x, this.color, borderColor);\n                this.updateLabelVisibleStatus(tempWidth, tempHeight, displayText);\n            }\n            else {\n                if (cellSetting.bubbleType === 'Color') { // Bubble by same size and different color Series\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, circleRadius);\n                    this.updateLabelVisibleStatus((circleRadius * 2) - 12, (circleRadius * 2) - 6, displayText); // 6, 12 - circle padding\n                }\n                else if (!isNullOrUndefined(this.text) && (cellSetting.bubbleType === 'Size' || cellSetting.bubbleType === 'SizeAndColor')\n                    && this.text.toString() !== '') { // Bubble by same color and different size Series\n                    if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                        this.heatMap.minColorValue = this.heatMap.dataSourceMinValue;\n                        this.heatMap.maxColorValue = this.heatMap.dataSourceMaxValue;\n                    }\n                    var tempCircleRadius = this.getRadiusBypercentage(parseFloat(this.text.toString()), heatMap.dataSourceMinValue, heatMap.dataSourceMaxValue, circleRadius);\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, tempCircleRadius);\n                    this.updateLabelVisibleStatus((tempCircleRadius * 2) - 12, (tempCircleRadius * 2) - 6, displayText);\n                }\n                else if (cellSetting.bubbleType === 'Sector' && !isNullOrUndefined(this.text) && this.text.toString() !== '') {\n                    this.renderSectorCell(rectPosition, tempBorder, x.toString(), this.color, borderColor, circleRadius, this.text);\n                    this.checkLabelXDisplay = false;\n                    this.checkLabelYDisplay = false;\n                }\n            }\n            tempRectPosition.push(rectPosition);\n            if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                isValueInRange = this.isCellValueInRange(dataXIndex, dataYIndex);\n                rectPosition.visible = isValueInRange;\n            }\n            if (cellSetting.showLabel && this.checkLabelYDisplay && this.checkLabelXDisplay) {\n                var themeCellTextStyle = cellSetting.textStyle;\n                var options = new TextOption(heatMap.element.id + '_HeatMapRectLabels_' + x, new TextBasic(Math.round((tempX + tempWidth / 2) * 100) / 100, Math.round((tempY + tempHeight / 2) * 100) / 100, 'middle', displayText, null, null, 'middle'), themeCellTextStyle, themeCellTextStyle.color || this.getSaturatedColor(this.color));\n                rectPosition.textId = options.id;\n                if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                    options.fill = isValueInRange ? options.fill : this.heatMap.themeStyle.toggledColor;\n                }\n                if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                    options.dy = this.heatMap.cellSettings.tileType === 'Bubble' ? '0.5ex' : '1ex';\n                }\n                this.drawSvgCanvas.createText(options, this.containerTextObject, displayText);\n            }\n            if (tempVal === heatMap.xLength - 1) {\n                tempY = Math.round((tempY + tempHeight) * 100) / 100;\n                tempVal = 0;\n                dataYIndex = 0;\n                if (heatMap.yAxis.opposedPosition) {\n                    tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n                }\n                else {\n                    tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n                }\n                this.rectPositionCollection.push(tempRectPosition);\n                tempRectPosition = [];\n                dataXIndex++;\n            }\n            else {\n                tempX = Math.round((tempX + tempWidth) * 100) / 100;\n                tempVal++;\n                dataYIndex++;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            heatMap.svgObject.appendChild(this.containerRectObject);\n            if (cellSetting.showLabel && !(cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                heatMap.svgObject.appendChild(this.containerTextObject);\n            }\n        }\n    };\n    /**\n     * To toggle the cell text color based on legend selection.\n     */\n    Series.prototype.isCellValueInRange = function (dataXIndex, dataYIndex) {\n        var isValueInRange = false;\n        for (var i = 0; i < this.heatMap.toggleValue.length; i++) {\n            var minValue = void 0;\n            var maxValue = void 0;\n            minValue = (i === 0) && !this.heatMap.isColorRange ? this.heatMap.dataSourceMinValue : this.heatMap.isColorRange ?\n                this.heatMap.toggleValue[i].startValue : this.heatMap.toggleValue[i].value;\n            if (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor') {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.maxColorValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            else {\n                maxValue = (i === this.heatMap.toggleValue.length - 1 && !this.heatMap.isColorRange) ?\n                    this.heatMap.dataSourceMaxValue : this.heatMap.isColorRange ?\n                    this.heatMap.toggleValue[i].endValue : this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            // tslint:disable-next-line:no-any\n            var clonedDataSource = this.heatMap.clonedDataSource;\n            var bubbleText = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '';\n            var text = parseFloat(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor' ?\n                bubbleText.toString() : this.text.toString());\n            if (isNaN(text)) {\n                isValueInRange = true;\n            }\n            else if (!isNaN(text) && text >= minValue && text <= maxValue) {\n                if (!this.heatMap.toggleValue[i].visible) {\n                    isValueInRange = false;\n                    break;\n                }\n                else {\n                    isValueInRange = true;\n                    break;\n                }\n            }\n            else if (this.heatMap.isColorRange &&\n                maxValue >= this.heatMap.toggleValue[i].endValue && i === this.heatMap.toggleValue.length - 1) {\n                isValueInRange = true;\n                break;\n            }\n        }\n        return isValueInRange;\n    };\n    /**\n     * To customize the cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.cellRendering = function (rectPosition, text) {\n        var xAxis = this.heatMap.axisCollections[0];\n        var yAxis = this.heatMap.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var yLabelValue = yAxis.labelValue.slice().reverse();\n        var argData = {\n            heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n            cancel: false,\n            name: 'cellRender',\n            value: rectPosition.value,\n            xLabel: xLabels[rectPosition.xIndex].toString(),\n            yLabel: yLabels[rectPosition.yIndex].toString(),\n            displayText: text,\n            xValue: xAxis.labelValue[rectPosition.xIndex],\n            yValue: yLabelValue[rectPosition.yIndex],\n            cellColor: this.color\n        };\n        this.heatMap.trigger('cellRender', argData);\n        this.color = argData.cellColor;\n        return argData.displayText;\n    };\n    /**\n     * To set color and text details.\n     * @private\n     */\n    Series.prototype.setTextAndColor = function (dataXIndex, dataYIndex) {\n        var cellSetting = this.heatMap.cellSettings;\n        this.bubbleColorValue = [];\n        var adaptData = this.heatMap.dataSourceSettings;\n        // tslint:disable-next-line:no-any\n        var clonedDataSource = this.heatMap.clonedDataSource;\n        if (this.heatMap.bubbleSizeWithColor) {\n            this.text = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][0]) &&\n                clonedDataSource[dataXIndex][dataYIndex][0].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][0] : '';\n            this.color = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ?\n                this.cellColor.getColorByValue(clonedDataSource[dataXIndex][dataYIndex][1])\n                : this.heatMap.isColorValueExist ? this.heatMap.emptyPointColor : this.cellColor.getColorByValue(this.text);\n            var tempBubbleCollection = new BubbleTooltipData(adaptData.isJsonData && adaptData.adaptorType === 'Cell' ? adaptData.bubbleDataMapping.size : null, this.text, 'Size');\n            this.bubbleColorValue.push(tempBubbleCollection);\n            this.bubbleColorValue.push({\n                mappingName: adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                    adaptData.bubbleDataMapping.color : null,\n                bubbleData: !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                    clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '',\n                valueType: 'Color'\n            });\n        }\n        else {\n            this.text = clonedDataSource[dataXIndex][dataYIndex];\n            this.color = this.cellColor.getColorByValue(this.text);\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.createSeriesGroup = function () {\n        if (!this.heatMap.enableCanvasRendering) {\n            this.containerRectObject = this.heatMap.renderer.createGroup({\n                id: this.heatMap.element.id + '_Container_RectGroup'\n            });\n            if (this.heatMap.cellSettings.showLabel &&\n                !(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                this.containerTextObject = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_Container_TextGroup', transform: 'translate( 0, 0)' });\n            }\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.updateRectDetails = function (rectPosition, tempX, tempY, tempWidth, tempHeight, text, x, dataXIndex, dataYIndex) {\n        rectPosition.x = tempX;\n        rectPosition.y = tempY;\n        rectPosition.width = tempWidth;\n        rectPosition.height = tempHeight;\n        rectPosition.value = text;\n        rectPosition.id = this.heatMap.element.id + '_HeatMapRect_' + x;\n        rectPosition.xIndex = dataXIndex;\n        rectPosition.yIndex = dataYIndex;\n    };\n    /**\n     * To Render Tile Cell.\n     * @private\n     */\n    Series.prototype.renderTileCell = function (rectPosition, tempBorder, x, color, borderColor) {\n        var rect = new RectOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, new Rect(rectPosition.x, rectPosition.y, rectPosition.width, rectPosition.height), borderColor || this.heatMap.themeStyle.cellBorder, tempBorder.radius, tempBorder.radius);\n        this.drawSvgCanvas.drawRectangle(rect, this.containerRectObject, true);\n    };\n    /**\n     * To get bubble radius.\n     * @private\n     */\n    Series.prototype.getBubbleRadius = function (width, height) {\n        var radius = (width / 2) - 2;\n        if (height / 2 < width / 2) {\n            radius = (height / 2) - 2;\n        }\n        return radius < 0 ? 0 : radius;\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderSectorCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius, text) {\n        var curve;\n        var startAngle;\n        var endAngle;\n        var cX;\n        var cY;\n        var X1;\n        var Y1;\n        var tempcX;\n        var tempcY;\n        var pathBorderWidth;\n        var centerX = Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100;\n        var centerY = Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100;\n        var tempColor = color;\n        var sectorContibution = this.getRadiusBypercentage(text, this.heatMap.dataSourceMinValue, this.heatMap.dataSourceMaxValue, 360); // Circle total angle.\n        for (var y = 0; y < 2; y++) {\n            pathBorderWidth = parseFloat(tempBorder.width.toString());\n            if (y === 0) {\n                curve = sectorContibution >= 180 ? 1 : 0;\n                startAngle = -90;\n                if (sectorContibution === 0) {\n                    endAngle = 270; // (360 - 90) for zero position adjustment.\n                }\n                else {\n                    endAngle = (sectorContibution - 90);\n                }\n                cX = Math.round((centerX + circleRadius * Math.cos((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                cY = Math.round((centerY + circleRadius * Math.sin((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                X1 = Math.round(centerX * 100) / 100;\n                Y1 = Math.round((centerY - circleRadius) * 100) / 100;\n                if (sectorContibution === 0) {\n                    tempColor = this.heatMap.emptyPointColor;\n                }\n            }\n            else {\n                curve = sectorContibution >= 180 ? 0 : 1;\n                startAngle = endAngle;\n                endAngle = 270; // (360 - 90) for zero position adjustment.\n                tempColor = this.heatMap.emptyPointColor;\n                x = x + '_Unfilled';\n                tempcX = cX;\n                tempcY = cY;\n                cX = X1;\n                cY = Y1;\n                X1 = tempcX;\n                Y1 = tempcY;\n                if (sectorContibution === 0) {\n                    pathBorderWidth = 1;\n                    borderColor = color;\n                }\n            }\n            var path = new Path('', false, centerX, centerY, X1, Y1, cX, cY, startAngle, endAngle, circleRadius, true);\n            var sector = new PathAttributes(this.heatMap.element.id + '_HeatMapRect_' + x, path, tempColor, tempBorder, pathBorderWidth, 1, borderColor);\n            this.calculateShapes(sector, path, sectorContibution, curve);\n            this.drawSvgCanvas.drawPath(sector, path, this.containerRectObject);\n            if (sectorContibution === 360) {\n                break;\n            }\n        }\n    };\n    /**\n     * To Render sector Cell.\n     * @private\n     */\n    Series.prototype.calculateShapes = function (options, path, sectorContibution, curve) {\n        var pathString;\n        var clockWise;\n        switch (sectorContibution) {\n            case 360:\n            case 0:\n                if (sectorContibution === 0 && path.start === path.end) {\n                    pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x + ' ' + (path.y - path.radius);\n                }\n                else {\n                    pathString = !this.heatMap.enableCanvasRendering ? 'M' + ' ' + options.x + ' ' + options.y + ' ' : '';\n                    pathString = pathString + 'm' + ' ' + (-path.radius) + ' ' + '0' + ' ' +\n                        'a' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (path.radius * 2) + ' ' + '0' + ' ' + 'a' + ' ' + path.radius +\n                        ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (-(path.radius * 2)) + ' ' + '0' + ' ';\n                }\n                merge(options, { 'd': pathString });\n                break;\n            default:\n                pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x1 + ' ' + path.y1 + ' ' +\n                    'A' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + curve + ' ' + '1' + ' ' +\n                    path.cx + ' ' + path.cy + ' ' + 'Z';\n                merge(options, { 'd': pathString });\n                break;\n        }\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderBubbleCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius) {\n        var circle = new CircleOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, borderColor || this.heatMap.themeStyle.cellBorder, Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100, Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100, circleRadius);\n        this.drawSvgCanvas.drawCircle(circle, this.containerRectObject);\n    };\n    /**\n     * To find whether the X,Y Label need to display or not.\n     * @private\n     */\n    Series.prototype.updateLabelVisibleStatus = function (tempWidth, tempHeight, displayText) {\n        if (this.heatMap.cellSettings.showLabel) {\n            this.checkLabelYDisplay = tempHeight > parseInt(this.heatMap.cellSettings.textStyle.size, 10) ? true : false;\n            this.checkLabelXDisplay = tempWidth > (displayText.length *\n                (parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2)) ? true : false;\n        }\n    };\n    /**\n     * To find percentage value.\n     * @private\n     */\n    Series.prototype.getRadiusBypercentage = function (text, min, max, radius) {\n        var minimum = parseInt(this.heatMap.cellSettings.bubbleSize.minimum, 10);\n        var maximum = parseInt(this.heatMap.cellSettings.bubbleSize.maximum, 10);\n        if (minimum < 0 || minimum > 100 || isNaN(minimum)) {\n            minimum = 0;\n        }\n        if (maximum < 0 || maximum > 100 || isNaN(maximum)) {\n            maximum = 100;\n        }\n        var valueInPrecentage = ((text - min) /\n            (max - min)) * 100;\n        valueInPrecentage = isNaN(valueInPrecentage) ? 100 : valueInPrecentage;\n        if ((this.heatMap.bubbleSizeWithColor ||\n            (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Size'))) {\n            if (this.heatMap.cellSettings.isInversedBubbleSize) {\n                valueInPrecentage = 100 - valueInPrecentage;\n            }\n            valueInPrecentage = ((valueInPrecentage * (maximum - minimum)) / 100) + minimum;\n        }\n        radius = radius * (valueInPrecentage / 100);\n        return (Math.round(radius * 100) / 100) < 0 ? 0 : (Math.round(radius * 100) / 100);\n    };\n    /**\n     * To find saturated color for datalabel.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.R * 299 + rgbValue.G * 587 + rgbValue.B * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    /**\n     * To highlight the mouse hovered rect cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.highlightSvgRect = function (tempID) {\n        if (tempID.indexOf('Celltooltip') === -1) {\n            if (tempID.indexOf('_HeatMapRect') !== -1) {\n                if (tempID.indexOf('_HeatMapRectLabels_') !== -1) {\n                    var tempIndex = tempID.indexOf('_HeatMapRectLabels_') + 19;\n                    tempID = this.heatMap.element.id + '_HeatMapRect_' + tempID.slice(tempIndex);\n                }\n                var element = document.getElementById(tempID);\n                if (this.heatMap.tempRectHoverClass !== tempID) {\n                    if (this.heatMap.cellSettings.enableCellHighlighting) {\n                        var oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                        if (oldElement && !this.heatMap.rectSelected) {\n                            oldElement.setAttribute('opacity', '1');\n                        }\n                        if (element && !this.heatMap.rectSelected) {\n                            element.setAttribute('opacity', '0.65');\n                        }\n                    }\n                    this.heatMap.tempRectHoverClass = tempID;\n                }\n            }\n            else {\n                if (this.heatMap.cellSettings.enableCellHighlighting) {\n                    var oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                    if (oldElement && !this.heatMap.rectSelected) {\n                        oldElement.setAttribute('opacity', '1');\n                        this.heatMap.tempRectHoverClass = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To get the value depends to format.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getFormatedText = function (val, getFormat) {\n        var format = getFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = this.heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        var value = '';\n        if (val.toString() !== '') {\n            value = formatValue(isCustom, format, val, this.format);\n        }\n        return value;\n    };\n    /**\n     * To get mouse hovered cell details.\n     * @return {CurrentRect}\n     * @private\n     */\n    Series.prototype.getCurrentRect = function (x, y) {\n        var currentRect;\n        var firstRectDetails = [];\n        firstRectDetails.push(this.heatMap.heatMapSeries.rectPositionCollection[0][0]);\n        var rectX = Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) <\n            this.heatMap.axisCollections[0].axisLabelSize ?\n            Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) :\n            this.heatMap.axisCollections[0].axisLabelSize;\n        var rectY = Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) <\n            this.heatMap.axisCollections[1].axisLabelSize ?\n            Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) :\n            this.heatMap.axisCollections[1].axisLabelSize - 1;\n        rectX = rectX === 0 ? 1 : rectX;\n        currentRect = this.heatMap.heatMapSeries.rectPositionCollection[rectY][rectX - 1];\n        this.hoverXAxisLabel = this.heatMap.axisCollections[0].tooltipLabels[rectX - 1];\n        this.hoverXAxisValue = this.heatMap.axisCollections[0].labelValue[rectX - 1];\n        this.hoverYAxisLabel = this.heatMap.axisCollections[1].tooltipLabels[(this.heatMap.axisCollections[1].tooltipLabels.length - 1) - rectY];\n        this.hoverYAxisValue = this.heatMap.axisCollections[1].labelValue[(this.heatMap.axisCollections[1].labelValue.length - 1) - rectY];\n        return currentRect;\n    };\n    return Series;\n}());\nexport { Series };\n","/**\n * HeatMap tool tip file\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { createElement, Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\nimport { TooltipBorder, Font, } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the color property in Heatmap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({}, TooltipBorder)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.tooltipFont, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n *\n * The `Tooltip` module is used to render the tooltip for heatmap series.\n */\nvar Tooltip = /** @class */ (function () {\n    function Tooltip(heatMap) {\n        /* private */\n        this.isFirst = true;\n        /* private */\n        this.isFadeout = false;\n        this.heatMap = heatMap;\n    }\n    /**\n     * Get module name\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'Tooltip';\n    };\n    /**\n     * To show/hide Tooltip.\n     * @private\n     */\n    Tooltip.prototype.showHideTooltip = function (isShow, isFadeout) {\n        var ele = document.getElementById(this.heatMap.element.id + 'Celltooltipcontainer');\n        if (!isShow) {\n            if (ele && ele.style.visibility !== 'hidden') {\n                if (this.tooltipObject && isFadeout) {\n                    this.tooltipObject.fadeOut();\n                }\n                else {\n                    if (this.tooltipObject && this.tooltipObject.element) {\n                        var tooltipElement = this.tooltipObject.element.firstChild;\n                        tooltipElement.setAttribute('opacity', '0');\n                    }\n                }\n                ele.style.visibility = 'hidden';\n            }\n            this.isFadeout = true;\n        }\n        else {\n            ele.style.visibility = 'visible';\n        }\n    };\n    /**\n     * To destroy the Tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.destroy = function (heatMap) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    ;\n    /**\n     * To add Tooltip to the rect cell.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltip = function (currentRect, x, y, tempTooltipText) {\n        var offset = null;\n        if (this.heatMap.cellSettings.showLabel && this.heatMap.heatMapSeries.checkLabelXDisplay &&\n            this.heatMap.heatMapSeries.checkLabelYDisplay) {\n            offset = parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2;\n        }\n        this.tooltipObject = new tool({\n            enableAnimation: false,\n            offset: offset,\n            location: { x: x, y: y },\n            availableSize: this.heatMap.availableSize,\n            data: {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                value: currentRect.value,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n            },\n            theme: this.heatMap.theme,\n            content: tempTooltipText,\n            fill: this.heatMap.tooltipSettings.fill,\n            template: this.heatMap.tooltipSettings.template === '' ? null : this.heatMap.tooltipSettings.template,\n            border: {\n                width: this.heatMap.tooltipSettings.border.width,\n                color: this.heatMap.tooltipSettings.border.color\n            },\n            textStyle: {\n                size: this.heatMap.tooltipSettings.textStyle.size,\n                fontWeight: this.heatMap.tooltipSettings.textStyle.fontWeight.toLowerCase(),\n                color: this.heatMap.tooltipSettings.textStyle.color,\n                fontStyle: this.heatMap.tooltipSettings.textStyle.fontStyle.toLowerCase(),\n                fontFamily: this.heatMap.tooltipSettings.textStyle.fontFamily\n            },\n            areaBounds: {\n                height: this.heatMap.initialClipRect.height + this.heatMap.initialClipRect.y,\n                width: this.heatMap.initialClipRect.width, x: this.heatMap.initialClipRect.x\n            },\n        }, '#' + this.heatMap.element.id + 'Celltooltipcontainer');\n    };\n    /**\n     * To create div container for tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltipDiv = function (heatMap) {\n        var position = 'absolute';\n        var top = heatMap.enableCanvasRendering && heatMap.allowSelection ? heatMap.availableSize.height : 0;\n        var element2 = createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipcontainer',\n            styles: 'position:' + position + '; z-index: 3;top:-' + top + 'px'\n        });\n        this.heatMap.element.appendChild(createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipparent',\n            styles: 'position:relative'\n        })\n            .appendChild(element2));\n    };\n    /**\n     * To get default tooltip content.\n     * @private\n     */\n    Tooltip.prototype.getTooltipContent = function (currentRect, hetmapSeries) {\n        var value;\n        var content;\n        var heatMap = this.heatMap;\n        var adaptData = this.heatMap.dataSourceSettings;\n        if (heatMap.bubbleSizeWithColor) {\n            var xAxis = heatMap.xAxis.title && heatMap.xAxis.title.text !== '' ? heatMap.xAxis.title.text : 'X-Axis';\n            var yAxis = heatMap.yAxis.title && heatMap.yAxis.title.text !== '' ? heatMap.yAxis.title.text : 'Y-Axis';\n            var value1 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.size : 'Value 1';\n            var value2 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.color : 'Value 2';\n            value = hetmapSeries.getFormatedText(currentRect.value[0].bubbleData, this.heatMap.cellSettings.format);\n            content = [xAxis + ' : ' + hetmapSeries.hoverXAxisLabel + '<br/>'\n                    + yAxis + ' : ' + hetmapSeries.hoverYAxisLabel + '<br/>'\n                    + value1 + ' : ' + value + '<br/>'\n                    + value2 + ' : '\n                    + hetmapSeries.getFormatedText(currentRect.value[1].bubbleData, this.heatMap.cellSettings.format)];\n        }\n        else {\n            value = currentRect.value;\n            content = [hetmapSeries.hoverXAxisLabel + ' | ' + hetmapSeries.hoverYAxisLabel + ' : ' +\n                    hetmapSeries.getFormatedText(value, this.heatMap.cellSettings.format)];\n        }\n        return content;\n    };\n    /**\n     * To render tooltip.\n     * @private\n     */\n    Tooltip.prototype.renderTooltip = function (currentRect) {\n        var _this = this;\n        var hetmapSeries = this.heatMap.heatMapSeries;\n        var tempTooltipText = [''];\n        var showTooltip = this.heatMap.bubbleSizeWithColor ?\n            !isNullOrUndefined(currentRect.value) && !isNullOrUndefined(currentRect.value[0].bubbleData)\n                && currentRect.value[0].bubbleData.toString() !== '' ? true : false\n            : isNullOrUndefined(currentRect.value) || (!isNullOrUndefined(currentRect.value) &&\n                currentRect.value.toString() === '') ? false : true;\n        if (!showTooltip) {\n            this.showHideTooltip(false, false);\n            if (!currentRect.visible) {\n                this.showHideTooltip(false, false);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.heatMap.tooltipRender)) {\n                // this.tooltipObject.header = '';\n                // this.tooltipObject.content = this.getTemplateText(\n                //     currentRect, this.heatMap.tooltipTemplate, hetmapSeries.hoverXAxisLabel,\n                //     hetmapSeries.hoverYAxisLabel);\n                var content = this.getTooltipContent(currentRect, hetmapSeries);\n                var argData = {\n                    heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n                    cancel: false,\n                    name: 'tooltipRender',\n                    value: currentRect.value,\n                    xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                    yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                    xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                    yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                    content: content\n                };\n                this.heatMap.trigger('tooltipRender', argData, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        tempTooltipText = observedArgs.content;\n                        _this.tooltipCallback(currentRect, tempTooltipText);\n                    }\n                    else {\n                        if (_this.tooltipObject) {\n                            _this.showHideTooltip(false);\n                        }\n                    }\n                });\n            }\n            else {\n                //  this.tooltipObject.header = hetmapSeries.hoverYAxisLabel.toString();\n                tempTooltipText = this.getTooltipContent(currentRect, hetmapSeries);\n                this.tooltipCallback(currentRect, tempTooltipText);\n            }\n        }\n    };\n    /**\n     * To render tooltip.\n     */\n    Tooltip.prototype.tooltipCallback = function (currentRect, tempTooltipText) {\n        if (!this.tooltipObject) {\n            this.createTooltip(currentRect, currentRect.x + (currentRect.width / 2), currentRect.y + (currentRect.height / 2), tempTooltipText);\n        }\n        else {\n            this.tooltipObject.content = tempTooltipText;\n            this.tooltipObject.data = {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                value: currentRect.value,\n            };\n        }\n        this.showHideTooltip(true);\n        this.tooltipObject.enableAnimation = (this.isFirst || this.isFadeout) ? false : true;\n        this.isFirst = (this.isFirst) ? false : this.isFirst;\n        this.isFadeout = (this.isFadeout) ? false : this.isFadeout;\n        this.tooltipObject.location.x = currentRect.x + (currentRect.width / 2);\n        this.tooltipObject.location.y = currentRect.y + (currentRect.height / 2);\n        if (!currentRect.visible) {\n            this.showHideTooltip(false, false);\n        }\n    };\n    return Tooltip;\n}());\nexport { Tooltip };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nvar TwoDimensional = /** @class */ (function () {\n    function TwoDimensional(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To reconstruct proper two dimensional dataSource depends on min and max values.\n     *  @private\n     */\n    TwoDimensional.prototype.processDataSource = function (dataSource) {\n        // tslint:disable-next-line:no-any\n        var tempCloneData = extend([], dataSource, null, true);\n        this.heatMap.clonedDataSource = [];\n        this.completeDataSource = [];\n        var axis = this.heatMap.axisCollections;\n        var dataLength = axis[0].maxLength + 1;\n        var labelLength = axis[0].axisLabelSize + (axis[0].min > 0 ? axis[0].min : 0);\n        var xLength = dataLength > labelLength ? dataLength : labelLength;\n        var minVal;\n        var maxVal;\n        dataLength = axis[1].maxLength + 1;\n        labelLength = axis[1].axisLabelSize + (axis[1].min > 0 ? axis[1].min : 0);\n        var yLength = dataLength > labelLength ? dataLength : labelLength;\n        // tslint:disable-next-line:no-any \n        var tempVariable;\n        var cloneDataIndex = 0;\n        var minMaxDatasource = [];\n        this.tempSizeArray = [];\n        this.tempColorArray = [];\n        this.heatMap.minColorValue = null;\n        this.heatMap.maxColorValue = null;\n        this.heatMap.dataMax = [];\n        this.heatMap.dataMin = [];\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && xLength < yLength) {\n            xLength = yLength;\n        }\n        for (var z = axis[1].valueType === 'Category' ? axis[1].min : 0; z < (this.heatMap.paletteSettings.colorGradientMode === 'Column' ? xLength : yLength); z++) {\n            var tempIndex = axis[0].valueType === 'Category' ? axis[0].min : 0;\n            this.completeDataSource.push([]);\n            while (tempIndex < xLength) {\n                if (tempIndex >= axis[0].min && tempIndex <= axis[0].max) {\n                    this.processDataArray(tempCloneData, tempIndex, z, cloneDataIndex);\n                }\n                tempIndex++;\n            }\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                tempVariable = extend([], tempCloneData[cloneDataIndex], null, true);\n                for (var i = 0; i < tempVariable.length; i++) {\n                    if (typeof (tempVariable[i]) === 'object' && (tempVariable[i]) !== null || undefined || '') {\n                        tempVariable[i] = tempVariable[i][0];\n                    }\n                }\n            }\n            else {\n                tempVariable = extend([], this.completeDataSource[cloneDataIndex], null, true);\n            }\n            var minMaxVal = this.getMinMaxValue(minVal, maxVal, tempVariable);\n            if ((this.heatMap.paletteSettings.colorGradientMode === 'Column' ||\n                this.heatMap.paletteSettings.colorGradientMode === 'Row') && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataMax[z] = minMaxVal[1];\n                this.heatMap.dataMin[z] = minMaxVal[0];\n            }\n            else {\n                minVal = minMaxVal[0];\n                maxVal = minMaxVal[1];\n            }\n            if (this.heatMap.xAxis.isInversed) {\n                this.completeDataSource[cloneDataIndex] = this.completeDataSource[cloneDataIndex].reverse();\n            }\n            if (z >= this.heatMap.axisCollections[1].min && z <= this.heatMap.axisCollections[1].max) {\n                minMaxDatasource.push(this.completeDataSource[cloneDataIndex]);\n            }\n            cloneDataIndex++;\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Row' && !this.heatMap.yAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.xAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (!this.heatMap.yAxis.isInversed) {\n            this.completeDataSource.reverse();\n            minMaxDatasource.reverse();\n        }\n        this.heatMap.clonedDataSource = minMaxDatasource;\n        this.heatMap.dataSourceMinValue = isNullOrUndefined(minVal) ? 0 : parseFloat(minVal.toString());\n        this.heatMap.dataSourceMaxValue = isNullOrUndefined(maxVal) ? 0 : parseFloat(maxVal.toString());\n        this.heatMap.isColorValueExist = isNullOrUndefined(this.heatMap.minColorValue) ? false : true;\n        this.heatMap.minColorValue = isNullOrUndefined(this.heatMap.minColorValue) ?\n            this.heatMap.dataSourceMinValue : parseFloat(this.heatMap.minColorValue.toString());\n        this.heatMap.maxColorValue = isNullOrUndefined(this.heatMap.maxColorValue) ?\n            this.heatMap.dataSourceMaxValue : parseFloat(this.heatMap.maxColorValue.toString());\n    };\n    /**\n     * To process and create a proper data array.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.processDataArray = function (tempCloneData, tempIndex, z, cloneDataIndex) {\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (tempCloneData[tempIndex] && !isNullOrUndefined(tempCloneData[tempIndex][z])\n                && typeof (tempCloneData[tempIndex][z]) === 'object') {\n                // tslint:disable-next-line:no-any \n                var internalArray = tempCloneData[tempIndex][z];\n                for (var tempx = 0; tempx < internalArray.length; tempx++) {\n                    if (isNullOrUndefined(internalArray[tempx]) || isNaN(internalArray[tempx])) {\n                        internalArray[tempx] = '';\n                    }\n                    if (tempx === 0) {\n                        this.tempSizeArray.push(internalArray[tempx]);\n                    }\n                    else if (tempx === 1) {\n                        this.tempColorArray.push(internalArray[tempx]);\n                        break;\n                    }\n                }\n                this.completeDataSource[cloneDataIndex].push(internalArray);\n            }\n            else {\n                if (!isNullOrUndefined(tempCloneData[tempIndex]) && (tempCloneData[tempIndex][z] ||\n                    (tempCloneData[tempIndex][z] === 0 &&\n                        tempCloneData[tempIndex][z].toString() !== ''))) {\n                    this.completeDataSource[cloneDataIndex].push([tempCloneData[tempIndex][z]]);\n                    this.tempSizeArray.push(tempCloneData[tempIndex][z]);\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push('');\n                }\n            }\n        }\n        else {\n            if (tempCloneData[tempIndex] && (tempCloneData[tempIndex][z] ||\n                (tempCloneData[tempIndex][z] === 0 &&\n                    tempCloneData[tempIndex][z].toString() !== ''))) {\n                if (typeof (tempCloneData[tempIndex][z]) === 'object') {\n                    if (tempCloneData[tempIndex][z].length > 0 && !isNullOrUndefined(tempCloneData[tempIndex][z][0])) {\n                        this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z][0]);\n                    }\n                    else {\n                        this.completeDataSource[cloneDataIndex].push('');\n                    }\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z]);\n                }\n            }\n            else {\n                this.completeDataSource[cloneDataIndex].push('');\n            }\n        }\n    };\n    /**\n     * To get minimum and maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinMaxValue = function (minVal, maxVal, tempVariable) {\n        var minMaxValue = [];\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.tempSizeArray = tempVariable;\n            }\n            minMaxValue.push(this.getMinValue(minVal, this.tempSizeArray));\n            minMaxValue.push(this.getMaxValue(maxVal, this.tempSizeArray));\n            this.heatMap.minColorValue = this.getMinValue(this.heatMap.minColorValue, this.tempColorArray);\n            this.heatMap.maxColorValue = this.getMaxValue(this.heatMap.maxColorValue, this.tempColorArray);\n        }\n        else {\n            minMaxValue.push(this.getMinValue(minVal, tempVariable));\n            minMaxValue.push(this.getMaxValue(maxVal, tempVariable));\n        }\n        return minMaxValue;\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinValue = function (minVal, tempVariable) {\n        if (isNullOrUndefined(minVal)) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if (this.performSort(tempVariable) < minVal) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            minVal = this.performSort(tempVariable);\n        }\n        return !isNullOrUndefined(minVal) ? parseFloat(minVal.toString()) : minVal;\n    };\n    /**\n     * To get maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMaxValue = function (maxVal, tempVariable) {\n        if (isNullOrUndefined(maxVal) && tempVariable.length > 0) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if (Math.max.apply(Math, tempVariable) > maxVal) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        return !isNullOrUndefined(maxVal) ? parseFloat(maxVal.toString()) : maxVal;\n    };\n    /**\n     * To perform sort operation.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.performSort = function (tempVariable) {\n        return tempVariable.sort(function (a, b) { return a - b; }).filter(this.checkmin)[0];\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.checkmin = function (val) {\n        return !isNullOrUndefined(val) && val.toString() !== '';\n    };\n    return TwoDimensional;\n}());\nexport { TwoDimensional };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DrawSvgCanvas, TextOption, TextBasic, PathOption, Line, LineOption, GradientPointer, textTrim } from '../utils/helper';\nimport { Size, measureText, getTitle, getElement, CanvasTooltip, formatValue, LegendRange, ToggleVisibility, sum } from '../utils/helper';\nimport { Font, Title } from '../model/base';\nimport { Rect, RectOption, Gradient, GradientColor, showTooltip, stringToNumber, CurrentLegendRect, removeElement } from '../utils/helper';\nimport { Theme } from '../model/theme';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\n/**\n * Configures the Legend\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.titleFont }, Title)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Property('Right')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showGradientPointer\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"enableSmartLegend\", void 0);\n    __decorate([\n        Property('All')\n    ], LegendSettings.prototype, \"labelDisplayType\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n *\n * The `Legend` module is used to render legend for the heatmap.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(heatMap) {\n        this.maxLegendLabelSize = new Size(0, 0);\n        this.gradientScaleSize = 10;\n        this.segmentCollections = [];\n        this.segmentCollectionsLabels = [];\n        this.textWrapCollections = [];\n        this.labelCollections = [];\n        this.labelCollection = [];\n        this.legendSize = 10;\n        this.previousOptions = new GradientPointer(0, 0, 0, 0, 0, 0);\n        this.listPerPage = 0;\n        this.numberOfPages = 1;\n        this.listWidth = 0;\n        this.fillRect = new Rect(0, 0, 0, 0);\n        this.legendRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 1;\n        this.lastList = [];\n        this.navigationCollections = [];\n        this.pagingRect = new Rect(0, 0, 0, 0);\n        this.listInterval = 10; // padding between two lists\n        this.legendLabelTooltip = [];\n        this.legendTitleTooltip = [];\n        this.labelXCollections = [];\n        this.labelYCollections = [];\n        this.legendXCollections = [];\n        this.legendYCollections = [];\n        /** @private */\n        this.legendRectPositionCollection = [];\n        /** @private */\n        this.legendRange = [];\n        /** @private */\n        this.legendTextRange = [];\n        /** @private */\n        this.visibilityCollections = [];\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    ;\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (heatMap) {\n        /**\n         * destory code\n         */\n    };\n    ;\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendItems = function () {\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var tempBorder = { color: 'transparent', width: 0, };\n        this.legend = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_Legend' });\n        var rectItems = new RectOption(heatMap.element.id + '_LegendBound', 'none', tempBorder, 1, this.legendGroup);\n        this.drawSvgCanvas.drawRectangle(rectItems, this.legend);\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n        var fill;\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            var colorCollection = (!heatMap.legendSettings.enableSmartLegend) ?\n                heatMap.colorCollection : heatMap.legendColorCollection;\n            this.legendRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendRange;\n            this.legendTextRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendTextRange;\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            for (var i = 0; i < colorCollection.length; i++) {\n                var visibility = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                heatMap.toggleValue.push(new ToggleVisibility(visibility, colorCollection[i].value, colorCollection[i].startValue, colorCollection[i].endValue));\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend === true)) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                if (heatMap.enableCanvasRendering) {\n                    var grd = void 0;\n                    var ctx_1 = heatMap.canvasRenderer.ctx;\n                    if (heatMap.horizontalGradient) {\n                        grd = ctx_1.createLinearGradient(legendBound.x, 0, legendBound.x + legendBound.width, 0);\n                    }\n                    else {\n                        grd = ctx_1.createLinearGradient(0, legendBound.y, 0, legendBound.y + legendBound.height);\n                    }\n                    if (heatMap.legendSettings.title.text) {\n                        ctx_1.clip();\n                    }\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var value = (((this.heatMap.isColorRange ? heatMap.legendColorCollection[i].startValue :\n                            heatMap.legendColorCollection[i].value) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue));\n                        value = isNaN(value) ? 0 : value;\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateCanvasColorRange(i, grd);\n                        }\n                        else {\n                            grd.addColorStop(value, heatMap.legendColorCollection[i].color);\n                        }\n                    }\n                    ctx_1.fillStyle = grd;\n                    fill = grd.toString();\n                }\n                else {\n                    var gradientOptions = void 0;\n                    var gradientColor = void 0;\n                    var gradientColor1 = void 0;\n                    var cgradientColors = [];\n                    var gradientColor2 = void 0;\n                    var gradientColor3 = void 0;\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateColorRange(i, cgradientColors);\n                        }\n                        else {\n                            var gradientPercentage = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue)) * 100;\n                            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n                            gradientColor = new GradientColor(heatMap.legendColorCollection[i].color, gradientPercentage + '%');\n                            cgradientColors.push(gradientColor);\n                        }\n                        if (this.legendMaxValue === this.legendMinValue) {\n                            break;\n                        }\n                    }\n                    if (heatMap.horizontalGradient) {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '100%', '0%', '0%');\n                    }\n                    else {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '0%', '0%', '100%');\n                    }\n                    var linearGradient = heatMap.renderer.drawGradient('linearGradient', gradientOptions, cgradientColors);\n                    this.legend.appendChild(linearGradient);\n                    fill = 'url(#' + heatMap.element.id + '_lineargradient)';\n                }\n                var rectItem = new RectOption(heatMap.element.id + '_Gradient_Legend', fill, tempBorder, 1, rectItemsSvg);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                this.renderElements(rectItemsSvg);\n            }\n            else {\n                this.renderSmartLegend();\n                this.renderTitle(rectItemsSvg);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                heatMap.svgObject.appendChild(this.legend);\n            }\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.legendScale = heatMap.renderer.createGroup({ id: heatMap.element.id + 'Heatmap_GradientScale' });\n            var listRect = new RectOption(heatMap.element.id + '_Gradient_Scale', 'none', tempBorder, 1, this.legendRectScale);\n            this.drawSvgCanvas.drawRectangle(listRect, this.legendScale);\n            this.renderTitle(rectItemsSvg);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(this.legendScale);\n            }\n            this.translategroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_translate' });\n            this.calculateListPerPage(rectItemsSvg);\n            if (this.numberOfPages > 1) {\n                this.paginggroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_navigation' });\n            }\n            this.renderListLegendMode(rectItemsSvg, true);\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n        }\n    };\n    Legend.prototype.renderElements = function (rectItemsSvg) {\n        this.renderTitle(rectItemsSvg);\n        this.renderColorAxisGrid(rectItemsSvg);\n    };\n    Legend.prototype.calculateCanvasColorRange = function (i, grd) {\n        var heatMap = this.heatMap;\n        var value = ((((heatMap.legendColorCollection[i].startValue < heatMap.dataSourceMinValue &&\n            heatMap.legendColorCollection[i].endValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : heatMap.legendColorCollection[i].startValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue));\n        value = isNaN(value) ? 0 : value;\n        var value1 = ((heatMap.legendColorCollection[i].endValue >= this.heatMap.dataSourceMaxValue ?\n            this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i].endValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue);\n        if (this.heatMap.legendColorCollection[0].startValue !== this.heatMap.dataSourceMinValue && i === 0 &&\n            this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n            value = (this.heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value / 2, this.heatMap.paletteSettings.fillColor.minColor);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n        grd.addColorStop(value, heatMap.legendColorCollection[i].minColor);\n        grd.addColorStop(value1, heatMap.legendColorCollection[i].maxColor);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue) &&\n            this.heatMap.legendColorCollection[i].endValue < this.heatMap.dataSourceMaxValue) {\n            value = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.minColor);\n            value = ((i === this.heatMap.legendColorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n    };\n    Legend.prototype.calculateColorRange = function (i, cgradientColors) {\n        if (cgradientColors === void 0) { cgradientColors = []; }\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var gradientPercentage;\n        var gradientOptions;\n        var gradientColor;\n        var gradientColor1;\n        var gradientColor2;\n        var gradientColor3;\n        if (this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue && i === 0) {\n            gradientPercentage = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.minColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n            gradientPercentage = (heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.maxColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n        }\n        gradientPercentage = ((heatMap.legendColorCollection[i].startValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue)) * 100;\n        gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n        gradientColor = new GradientColor(heatMap.legendColorCollection[i].minColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor);\n        gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue) * 100;\n        gradientColor1 = new GradientColor(heatMap.legendColorCollection[i].maxColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor1);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue)) {\n            gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor2 = new GradientColor(this.heatMap.paletteSettings.fillColor.minColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor2);\n            gradientPercentage = ((i === (this.heatMap.legendColorCollection.length - 1) ?\n                this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor3 = new GradientColor(this.heatMap.paletteSettings.fillColor.maxColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor3);\n        }\n    };\n    Legend.prototype.renderTitle = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.legendSettings.title.text) {\n            var title = heatMap.legendSettings.title;\n            var titleSize = measureText(title.text, title.textStyle);\n            var padding = !heatMap.legendSettings.showLabel ? heatMap.horizontalGradient ? 10 : 6 : this.labelPadding;\n            var y = void 0;\n            var anchor = 'start';\n            var maxWidth = void 0;\n            var dominantBaseline = void 0;\n            var text = title.text;\n            var options = void 0;\n            var yValue = void 0;\n            if (heatMap.legendSettings.title.textStyle.textOverflow === 'Trim') {\n                maxWidth = this.width - 10;\n                text = textTrim(maxWidth, text, title.textStyle);\n            }\n            if (!heatMap.horizontalGradient) {\n                padding = -(padding + titleSize.height / 4);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, rect.y - titleSize.height, maxWidth, titleSize.height)));\n                }\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x, rect.y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            else {\n                y = rect.y + (heatMap.legendSettings.position === 'Top' ? 0 :\n                    -(10 + titleSize.height + padding));\n                padding = heatMap.legendSettings.position === 'Top' ? -(padding + titleSize.height / 4) :\n                    (padding + (3 * titleSize.height / 4));\n                yValue = heatMap.legendSettings.position === 'Bottom' ? y : y - titleSize.height;\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, yValue, maxWidth, titleSize.height)));\n                }\n                titleSize.width = rect.width < titleSize.width ? rect.width : titleSize.width;\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x + (rect.width / 2) - (titleSize.width / 2), y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            this.drawSvgCanvas.createText(options, this.legend, text);\n        }\n    };\n    Legend.prototype.renderSmartLegend = function () {\n        var heatMap = this.heatMap;\n        var colorCollection = heatMap.colorCollection;\n        var smartLegendRect;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0,\n        };\n        var legendBound = this.legendRectScale;\n        var legendX;\n        var legendY;\n        var legendWidth;\n        var legendHeight;\n        var width = legendBound.width / colorCollection.length;\n        var height = legendBound.height / colorCollection.length;\n        this.legendRectPositionCollection = [];\n        this.legendRange = [];\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            var rectPosition = new CurrentLegendRect(0, 0, 0, 0, '', '');\n            if (heatMap.horizontalGradient) {\n                legendX = legendBound.x + (i * width);\n                legendY = legendBound.y;\n                legendWidth = width;\n                legendHeight = legendBound.height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendX + width : legendX);\n            }\n            else {\n                legendX = legendBound.x;\n                legendY = legendBound.y + (i * height);\n                legendWidth = legendBound.width;\n                legendHeight = height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendY + height : legendY);\n            }\n            smartLegendRect = new Rect(legendX, legendY, legendWidth, legendHeight);\n            var legendRange = new LegendRange(0, 0, 0, 0, 0, true, 0);\n            legendRange.x = legendX;\n            legendRange.y = legendY;\n            legendRange.width = legendWidth;\n            legendRange.height = legendHeight;\n            legendRange.value = this.heatMap.isColorRange ?\n                heatMap.legendColorCollection[i].endValue : heatMap.legendColorCollection[i].value;\n            legendRange.currentPage = this.currentPage;\n            if (colorCollection.length !== heatMap.legendColorCollection.length && i === heatMap.legendColorCollection.length - 1) {\n                heatMap.horizontalGradient ? legendRange.width = 0 : legendRange.height = 0;\n                this.visibilityCollections[i] = this.visibilityCollections[i - 1];\n            }\n            legendRange.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n            this.legendRange.push(legendRange);\n            if (!heatMap.legendColorCollection[i].isHidden) {\n                var color = heatMap.legendOnLoad ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : this.legendRange[i].visible ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : '#D3D3D3';\n                var rectItem = new RectOption(heatMap.element.id + '_Smart_Legend' + i, color, tempBorder, 1, smartLegendRect);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                rectPosition.x = legendX;\n                rectPosition.y = legendY;\n                rectPosition.width = legendWidth;\n                rectPosition.height = legendHeight;\n                rectPosition.label = this.labelCollections[i];\n                rectPosition.id = heatMap.element.id + '_Smart_Legend' + i;\n                this.legendRectPositionCollection.push(rectPosition);\n                var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, this.textWrapCollections[i]);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    var elementSize = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                    this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(rectPosition.x, rectPosition.y, elementSize.width, elementSize.height)));\n                }\n            }\n        }\n    };\n    Legend.prototype.colorRangeLegendPosition = function (i, labelX) {\n        if (this.segmentCollections.length !== this.segmentCollectionsLabels.length) {\n            for (var k = 0; k < this.segmentCollections.length; k++) {\n                if (this.segmentCollectionsLabels[i] === this.segmentCollections[k]) {\n                    labelX = this.segmentCollectionsLabels[i] + (((k === this.segmentCollections.length - 1 ?\n                        (this.heatMap.horizontalGradient ? this.width : this.height) :\n                        this.segmentCollections[k + 1]) - this.segmentCollections[k]) / 2);\n                    break;\n                }\n            }\n        }\n        else {\n            labelX = this.segmentCollectionsLabels[i] + (((i === this.segmentCollectionsLabels.length - 1 ?\n                (this.heatMap.horizontalGradient ? this.width : this.height) :\n                this.segmentCollectionsLabels[i + 1]) - this.segmentCollectionsLabels[i]) / 2);\n        }\n        this.labelPosition = labelX;\n    };\n    Legend.prototype.renderLegendLabel = function (rect) {\n        var heatMap = this.heatMap;\n        this.legendTextRange = [];\n        if (heatMap.legendSettings.showLabel && (heatMap.paletteSettings.type === 'Gradient' ||\n            (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType !== 'None'))) {\n            var anchor = 'start';\n            var dominantBaseline = void 0;\n            var legendLabel = void 0;\n            var textWrapWidth = 0;\n            var text = void 0;\n            this.legendLabelTooltip = [];\n            var elementSize = void 0;\n            var colorCollection = heatMap.legendColorCollection;\n            if (heatMap.enableCanvasRendering) {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.rect(this.legendGroup.x, this.legendGroup.y, this.legendGroup.width, this.legendGroup.height);\n                ctx.save();\n                ctx.clip();\n                ctx.restore();\n            }\n            else {\n                legendLabel = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_LegendLabel' });\n            }\n            var labelX = void 0;\n            var labelY = void 0;\n            for (var i = 0; i < colorCollection.length; i++) {\n                var value = ((colorCollection[i].value - (Math.round(this.legendMinValue * 100) / 100)) /\n                    ((Math.round(this.legendMaxValue * 100) / 100) - (Math.round(this.legendMinValue * 100) / 100))) * 100;\n                if (heatMap.horizontalGradient) {\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelX);\n                        labelX = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelX = this.segmentCollections[i] + ((rect.width / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelX = this.segmentCollections[i];\n                    }\n                    labelY = rect.y + rect.height + this.labelPadding;\n                    anchor = ((Math.round(value * 100) / 100) === 0 || (i === 0 && heatMap.paletteSettings.type === 'Fixed')) ? 'start' :\n                        (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient') ||\n                            (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                                heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                            heatMap.paletteSettings.type === 'Fixed' &&\n                            heatMap.legendSettings.labelDisplayType === 'Edge') ? 'end' : 'middle';\n                    dominantBaseline = 'hanging';\n                }\n                else {\n                    labelX = rect.x + rect.width + this.labelPadding;\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelY);\n                        labelY = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelY = this.segmentCollections[i] + ((rect.height / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelY = this.segmentCollections[i];\n                    }\n                    dominantBaseline = ((Math.round(value * 100) / 100) === 0 || (i === 0 && heatMap.paletteSettings.type === 'Fixed')) ?\n                        'hanging' : (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient') ||\n                        (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                            heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                        heatMap.paletteSettings.type === 'Fixed') ? 'auto' : 'middle';\n                }\n                textWrapWidth = heatMap.horizontalGradient ? this.textWrapCollections[i] : this.width - (this.legendRectScale.width +\n                    this.labelPadding + this.legendRectPadding);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                elementSize = measureText(text[0], heatMap.legendSettings.textStyle);\n                if (heatMap.paletteSettings.type === 'Fixed') {\n                    var rectY = dominantBaseline === 'hanging' ? labelY : dominantBaseline === 'middle' ?\n                        labelY - elementSize.height / 2 : labelY - elementSize.height;\n                    var rectX = anchor === 'end' ? labelX - elementSize.width : anchor === 'middle' ?\n                        labelX - elementSize.width / 2 : labelX;\n                    var textPosition = new LegendRange(rectX, rectY, elementSize.width, elementSize.height, colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n                if (this.labelCollections[i] !== '') {\n                    if (text.length !== 0 && text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, elementSize.width, elementSize.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, anchor, text, 0, 'translate(0,0)', dominantBaseline);\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill :\n                        (heatMap.paletteSettings.type === 'Fixed' && !this.legendRange[i].visible) ? '#D3D3D3' : options.fill;\n                    if (text.length > 1) {\n                        this.drawSvgCanvas.createWrapText(options, heatMap.legendSettings.textStyle, legendLabel);\n                    }\n                    else {\n                        this.drawSvgCanvas.createText(options, legendLabel, text[0]);\n                    }\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        if (dominantBaseline === 'middle') {\n                            legendLabel.lastChild.setAttribute('dy', '0.6ex');\n                        }\n                        else if (dominantBaseline === 'hanging') {\n                            legendLabel.lastChild.setAttribute('dy', '1.5ex');\n                        }\n                    }\n                }\n                if (this.legendMaxValue === this.legendMinValue && heatMap.paletteSettings.type === 'Gradient') {\n                    break;\n                }\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n                this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n                this.legend.appendChild(legendLabel);\n                var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_clipPath' });\n                var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n                clippath.appendChild(clipRect);\n                heatMap.svgObject.appendChild(clippath);\n                this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderGradientPointer = function (e, pageX, pageY) {\n        var heatMap = this.heatMap;\n        var currentRect = heatMap.heatMapSeries.getCurrentRect(pageX, pageY);\n        var cellValue = heatMap.bubbleSizeWithColor ? currentRect.value[0].bubbleData.toString() !== '' ?\n            !this.heatMap.isColorValueExist ? currentRect.value[0].bubbleData.toString() :\n                currentRect.value[1].bubbleData.toString() : '' : currentRect.value.toString();\n        var rect = this.legendRectScale;\n        var legendPart;\n        var direction;\n        var options;\n        var legendPath;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        var pathX3;\n        var pathY3;\n        if (cellValue.toString() !== '') {\n            if (!heatMap.horizontalGradient) {\n                legendPart = rect.height / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x - 1;\n                pathY1 = rect.y + legendPath;\n                pathX2 = pathX3 = rect.x - 8;\n                pathY2 = rect.y - 5 + legendPath;\n                pathY3 = rect.y + 5 + legendPath;\n            }\n            else {\n                legendPart = rect.width / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x + legendPath;\n                pathY1 = rect.y + rect.height;\n                pathX2 = rect.x - 5 + legendPath;\n                pathY2 = pathY3 = rect.y + rect.height + 8;\n                pathX3 = rect.x + 5 + legendPath;\n            }\n            direction = 'M' + ' ' + pathX1 + ' ' + pathY1 + ' ' +\n                'L' + ' ' + pathX2 + ' ' + pathY2 + ' ' + 'L' + ' ' + pathX3 + ' ' + pathY3 + ' ' + 'Z';\n            options = new PathOption(heatMap.element.id + '_Gradient_Pointer', 'gray', 0.01, '#A0A0A0', 1, '0,0', direction);\n            if (!heatMap.enableCanvasRendering) {\n                this.gradientPointer = heatMap.renderer.drawPath(options);\n                this.gradientPointer.style.visibility = 'visible';\n                this.legend.appendChild(this.gradientPointer);\n            }\n            else {\n                this.removeGradientPointer();\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(options, canvasTranslate);\n                this.previousOptions.pathX1 = pathX1;\n                this.previousOptions.pathY1 = pathY1;\n                this.previousOptions.pathX2 = pathX2;\n                this.previousOptions.pathY2 = pathY2;\n                this.previousOptions.pathX3 = pathX3;\n                this.previousOptions.pathY3 = pathY3;\n            }\n        }\n        else {\n            this.removeGradientPointer();\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.removeGradientPointer = function () {\n        var heatMap = this.heatMap;\n        if (this.gradientPointer && !heatMap.enableCanvasRendering) {\n            this.gradientPointer.style.visibility = 'hidden';\n        }\n        else if (heatMap.enableCanvasRendering) {\n            if (Object.keys(this.previousOptions).length !== 0) {\n                if (heatMap.horizontalGradient) {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY1;\n                    this.fillRect.width = this.previousOptions.pathX3 - this.previousOptions.pathX2 + 2;\n                    this.fillRect.height = this.previousOptions.pathY2 + 1 - this.previousOptions.pathY1;\n                }\n                else {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY2 - 1;\n                    this.fillRect.width = this.previousOptions.pathX1 - this.previousOptions.pathX2 + 1;\n                    this.fillRect.height = this.previousOptions.pathY3 - this.previousOptions.pathY2 + 2;\n                }\n            }\n            heatMap.canvasRenderer.ctx.fillStyle = heatMap.themeStyle.background;\n            heatMap.canvasRenderer.ctx.fillRect(this.fillRect.x, this.fillRect.y, this.fillRect.width, this.fillRect.height);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        this.labelCollection = [];\n        this.labelCollections = [];\n        var colorCollection = heatMap.legendColorCollection;\n        if (legendSettings.position !== 'Bottom' && legendSettings.position !== 'Top' &&\n            legendSettings.position !== 'Right' && legendSettings.position !== 'Left') {\n            legendSettings.position = 'Right';\n        }\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        heatMap.horizontalGradient = legendSettings.position === 'Bottom' || legendSettings.position === 'Top';\n        this.legendRectPadding = heatMap.horizontalGradient ? heatMap.legendSettings.title.text ?\n            titleSize.height + 16 : 16 : 10; // padding between rect and legend\n        this.labelPadding = legendSettings.showLabel ? this.heatMap.horizontalGradient ? 10 : 6 : 0; // padding between list and label\n        this.legendHeight = legendSettings.height;\n        this.legendWidth = legendSettings.width;\n        var format = heatMap.legendSettings.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatMap.intl.getNumberFormat({ format: isCustom ? '' : format });\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].label ? colorCollection[i].label : this.heatMap.isColorRange ?\n                    colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() : formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender' };\n                this.labelCollection.push(label);\n                this.heatMap.trigger('legendRender', legendEventArg);\n                if (heatMap.legendRender) {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        if (!legendEventArg.cancel) {\n                            this.labelCollections.push(legendEventArg.text);\n                        }\n                        else {\n                            this.labelCollections.push('');\n                        }\n                    }\n                }\n                else {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].isHidden ? '' : colorCollection[i].label ? colorCollection[i].label :\n                    this.heatMap.isColorRange ? colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() :\n                        formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender', };\n                if (!colorCollection[i].isHidden) {\n                    this.heatMap.trigger('legendRender', legendEventArg);\n                }\n                if (heatMap.legendRender) {\n                    if (!legendEventArg.cancel) {\n                        if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                            this.labelCollections.push('');\n                        }\n                        else {\n                            if (!legendEventArg.cancel) {\n                                this.labelCollections.push(legendEventArg.text);\n                            }\n                            else {\n                                this.labelCollections.push('');\n                            }\n                        }\n                    }\n                    else {\n                        this.labelCollections.push('');\n                    }\n                }\n                else {\n                    if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend)) {\n            this.maxLegendLabelSize = this.getMaxLabelSize();\n            if (heatMap.horizontalGradient && legendSettings.height === '') {\n                this.legendHeight = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            else if (!heatMap.horizontalGradient && legendSettings.width === '' && (legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.width).toString();\n            }\n            this.calculateTitleBounds();\n        }\n        else {\n            this.calculateListLegendBounds(rect);\n        }\n        this.legendHeight = this.legendHeight ? this.legendHeight : heatMap.horizontalGradient ? '50' : '100%';\n        this.legendWidth = this.legendWidth ? this.legendWidth : heatMap.horizontalGradient ?\n            '100%' : heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ? '70' : '50';\n        this.height = stringToNumber(this.legendHeight, rect.height);\n        this.width = stringToNumber(this.legendWidth, rect.width);\n        if (heatMap.horizontalGradient) {\n            this.height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.height < 50 ? 50 : this.height : this.height;\n            if (legendSettings.position === 'Top') {\n                rect.y += this.height;\n            }\n            rect.height -= this.height;\n        }\n        else {\n            this.width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.width < 50 ? 50 : this.width : this.width;\n            if (legendSettings.position === 'Left') {\n                rect.x += this.width;\n            }\n            rect.width -= this.width;\n        }\n    };\n    Legend.prototype.calculateTitleBounds = function () {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.legendSettings.title.text) {\n            if ((heatMap.legendSettings.position === 'Top' || heatMap.legendSettings.position === 'Bottom') &&\n                heatMap.legendSettings.height === '') {\n                this.legendHeight = (((2 * this.legendRectPadding) - titleSize.height) +\n                    this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            if (heatMap.legendSettings.width === '' && (heatMap.legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                if (heatMap.legendSettings.position === 'Right') {\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) +\n                        this.legendSize + this.maxLegendLabelSize.width).toString();\n                }\n                else if (heatMap.legendSettings.position === 'Left') {\n                    titleSize.width = titleSize.width > this.maxLegendLabelSize.width ? titleSize.width : this.maxLegendLabelSize.width;\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) + this.legendSize).toString();\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateListLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        this.listWidth = 0;\n        this.listHeight = 0;\n        this.currentPage = 1;\n        var padding = 10; // padding of paging elements\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var height = (titleSize.height + 50).toString();\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < heatMap.colorCollection.length; i++) {\n                var size = 0;\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                var perListWidth = this.legendSize + this.labelPadding + size + this.listInterval;\n                this.listWidth += perListWidth;\n            }\n            this.listWidth += this.listInterval + padding;\n            if (this.legendWidth === '') {\n                this.legendWidth = this.listWidth > rect.width ? rect.width.toString() : this.listWidth.toString();\n            }\n            if (this.legendHeight === '') {\n                this.numberOfRows = Math.ceil(this.listWidth / stringToNumber(this.legendWidth, rect.width));\n                this.numberOfRows = this.numberOfRows > 3 ? 3 : this.numberOfRows;\n                this.legendHeight = (this.listWidth > rect.width || this.listWidth > stringToNumber(this.legendWidth, rect.width)) &&\n                    this.numberOfRows > 3 ? (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding +\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) + padding).toString() :\n                    (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding).toString();\n            }\n        }\n        else {\n            this.listHeight = ((this.legendSize + this.listInterval) * heatMap.colorCollection.length)\n                + this.listInterval + (heatMap.legendSettings.title.text ? titleSize.height : 0);\n            if (this.legendHeight === '') {\n                this.legendHeight = this.listHeight > rect.height ? rect.height.toString() : this.listHeight.toString();\n            }\n            if (this.legendWidth === '' && heatMap.legendSettings.textStyle.textOverflow !== 'Trim') {\n                this.maxLegendLabelSize = this.getMaxLabelSize();\n                this.maxLegendLabelSize.width = titleSize.width > this.maxLegendLabelSize.width ?\n                    titleSize.width : this.maxLegendLabelSize.width;\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.labelPadding +\n                    this.maxLegendLabelSize.width).toString();\n            }\n        }\n        if (stringToNumber(this.legendHeight, rect.height) < 50) {\n            this.legendHeight = height;\n        }\n        if (stringToNumber(this.legendWidth, rect.width) < 70) {\n            this.legendWidth = '70';\n        }\n    };\n    Legend.prototype.getMaxLabelSize = function () {\n        var heatMap = this.heatMap;\n        this.maxLegendLabelSize = new Size(0, 0);\n        if (!heatMap.legendSettings.showLabel || (heatMap.horizontalGradient && heatMap.paletteSettings.type === 'Fixed' &&\n            !heatMap.legendSettings.enableSmartLegend) || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.labelDisplayType === 'None')) {\n            return this.maxLegendLabelSize;\n        }\n        else {\n            var labelSize = this.maxLegendLabelSize;\n            for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                var size = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n            return labelSize;\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendSize = function (rect, legendTop) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var left;\n        var top;\n        var padding = 10; // inner padding for axis title and axil labels\n        var alignment = legendSettings.alignment;\n        var width;\n        var height = stringToNumber(this.legendHeight, rect.height);\n        if (!heatMap.legendSettings.title.text) {\n            width = stringToNumber(this.legendWidth, rect.width);\n        }\n        else {\n            width = this.width;\n        }\n        var axis = heatMap.axisCollections;\n        var axisTitlePadding = 0;\n        if (heatMap.horizontalGradient) {\n            width = width > rect.width ? rect.width : width;\n            height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                height > 50 ? height : 50 : this.height;\n            left = alignment === 'Near' ? rect.x : alignment === 'Far' ? rect.x + rect.width - width :\n                rect.x + (rect.width / 2) - (width / 2);\n            if (heatMap.xAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.xAxis.title.text, heatMap.xAxis.textStyle).height + padding;\n            }\n            var axisHeight = axis[0].opposedPosition ? 0 : sum(axis[0].xAxisMultiLabelHeight) + axis[0].maxLabelSize.height +\n                axisTitlePadding + padding;\n            top = legendSettings.position === 'Top' ? heatMap.titleSettings.text ? legendTop :\n                heatMap.margin.top : rect.y + rect.height + axisHeight;\n        }\n        else {\n            height = height > rect.height ? rect.height : height;\n            width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                width > 50 ? width : 50 : width;\n            top = alignment === 'Near' ? rect.y : alignment === 'Far' ? rect.y + rect.height - height :\n                rect.y + (rect.height / 2) - (height / 2);\n            if (heatMap.yAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.yAxis.title.text, heatMap.yAxis.textStyle).height + padding;\n            }\n            var axisWidth = axis[1].opposedPosition ? sum(axis[1].yAxisMultiLabelHeight) +\n                axis[1].maxLabelSize.width + axisTitlePadding + 2 * padding : 0;\n            left = legendSettings.position === 'Right' ? rect.x + rect.width + axisWidth : heatMap.margin.left;\n        }\n        this.legendGroup = new Rect(left, top, width, height);\n        this.calculateGradientScale(this.legendGroup);\n    };\n    // calculating number of lists per page\n    Legend.prototype.measureListLegendBound = function (rect) {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var padding = 15; // padding of paging element\n        this.numberOfPages = 1;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.horizontalGradient) {\n            if (this.listWidth > this.width) {\n                this.numberOfRows = Math.ceil(this.listWidth / this.width);\n                this.listHeight = ((this.legendSize + this.listInterval) * this.numberOfRows);\n                this.listPerPage = this.numberOfRows <= 3 ? this.numberOfRows : Math.ceil((this.height - padding -\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) -\n                    this.legendRectPadding) / (this.legendSize + this.listInterval));\n                this.numberOfPages = Math.ceil(this.numberOfRows / this.listPerPage);\n            }\n            else {\n                this.listPerPage = 1;\n            }\n        }\n        else {\n            if (this.listHeight > rect.height || this.listHeight > this.height) {\n                var maxHeight = stringToNumber(this.legendHeight, rect.height);\n                maxHeight = maxHeight > rect.height ? rect.height : maxHeight;\n                maxHeight = heatMap.legendSettings.title.text ? maxHeight - titleSize.height : maxHeight;\n                this.listPerPage = Math.floor(maxHeight / (this.legendSize + this.listInterval) - 1);\n                this.numberOfPages = Math.max(1, Math.ceil(heatMap.colorCollection.length / this.listPerPage));\n            }\n            else {\n                this.listPerPage = heatMap.colorCollection.length;\n                this.legendHeight = this.listHeight.toString();\n            }\n        }\n    };\n    Legend.prototype.renderPagingElements = function () {\n        var heatMap = this.heatMap;\n        if (this.numberOfPages > 1) {\n            this.navigationCollections = [];\n            this.legend.appendChild(this.paginggroup);\n            var iconSize = 10;\n            var rightArrowX = this.legendGroup.x + this.legendGroup.width - iconSize;\n            var rightArrowY = this.legendGroup.y + this.legendGroup.height - iconSize;\n            var text = this.currentPage + '/' + this.numberOfPages;\n            var textSize = measureText(text, heatMap.legendSettings.textStyle);\n            var textX = rightArrowX - textSize.width - 15;\n            var textBasic = new TextBasic(textX, rightArrowY, 'start', text, 0, 'translate(0,0)', 'middle');\n            var options = new TextOption(heatMap.element.id + '_paging', textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n            this.drawSvgCanvas.createText(options, this.paginggroup, text);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                this.paginggroup.lastChild.setAttribute('dy', '0.6ex');\n            }\n            this.pagingRect = new Rect(textX, rightArrowY - textSize.height / 2, textSize.width, textSize.height);\n            var pagingTextRect = new RectOption(heatMap.element.id + '_pagingText', 'none', { color: 'transparent', width: 0 }, 1, this.pagingRect);\n            this.drawSvgCanvas.drawRectangle(pagingTextRect, this.paginggroup);\n            var rightArrowRect = new RectOption(heatMap.element.id + '_rightArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(rightArrowX - iconSize, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(rightArrowRect, this.paginggroup);\n            var rightArrow = 'M' + ' ' + (rightArrowX) + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (rightArrowX - iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (rightArrowX - iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftX = textX - 15;\n            var leftArrow = 'M' + ' ' + leftX + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (leftX + iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (leftX + iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftArrowRect = new RectOption(heatMap.element.id + '_leftArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(leftX, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(leftArrowRect, this.paginggroup);\n            var leftOption = new PathOption(heatMap.element.id + '_Legend_leftarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', leftArrow);\n            var rightOption = new PathOption(heatMap.element.id + '_Legend_rightarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', rightArrow);\n            this.navigationCollections.push(rightArrowRect);\n            this.navigationCollections.push(leftArrowRect);\n            if (!heatMap.enableCanvasRendering) {\n                var arrow = heatMap.renderer.drawPath(leftOption);\n                var rightarrow = heatMap.renderer.drawPath(rightOption);\n                this.paginggroup.appendChild(arrow);\n                this.paginggroup.appendChild(rightarrow);\n            }\n            else {\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(leftOption, canvasTranslate);\n                heatMap.canvasRenderer.drawPath(rightOption, canvasTranslate);\n            }\n        }\n    };\n    Legend.prototype.calculateGradientScale = function (scale) {\n        var heatMap = this.heatMap;\n        var padding = 10; // padding between legend bounds and gradient scale\n        var left;\n        var top;\n        var height;\n        var width;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var titleHeight = heatMap.legendSettings.title.text ? titleSize.height : 0;\n        if (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) {\n            this.measureListLegendBound(heatMap.initialClipRect);\n        }\n        if (heatMap.horizontalGradient) {\n            left = scale.x + padding;\n            top = scale.y + this.legendRectPadding;\n            width = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                scale.width - (2 * this.listInterval) : scale.width - 2 * padding;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : this.gradientScaleSize;\n        }\n        else {\n            left = scale.x + this.legendRectPadding;\n            top = scale.y + padding + titleHeight;\n            width = (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) ?\n                scale.width - padding : this.gradientScaleSize;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval :\n                scale.height - 2 * padding - titleHeight;\n        }\n        this.legendRectScale = new Rect(left, top, width, height);\n        if (heatMap.paletteSettings.type === 'Gradient' || heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend) {\n            this.calculateColorAxisGrid(this.legendRectScale);\n        }\n    };\n    Legend.prototype.calculateColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var rect = this.legendRectScale;\n        var legendPart;\n        var text;\n        var maxTextWrapLength = 0;\n        this.segmentCollectionsLabels = [];\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        var pathX1;\n        var pathY1;\n        var colorCollection = heatMap.paletteSettings.type === 'Gradient' ?\n            heatMap.legendColorCollection : heatMap.colorCollection;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        this.legendMinValue = this.heatMap.isColorRange ? (colorCollection[0].startValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : colorCollection[0].startValue : ((colorCollection[0].value > minValue) ? minValue :\n            colorCollection[0].value);\n        this.legendMaxValue = this.heatMap.isColorRange ? (colorCollection[colorCollection.length - 1].endValue <\n            heatMap.dataSourceMaxValue) ? heatMap.dataSourceMaxValue : colorCollection[colorCollection.length - 1].endValue :\n            (colorCollection[colorCollection.length - 1].value < maxValue ? maxValue : colorCollection[colorCollection.length - 1].value);\n        if (heatMap.paletteSettings.type === 'Gradient') {\n            for (var index = 0; index < colorCollection.length; index++) {\n                var value = void 0;\n                legendPart = (this.heatMap.isColorRange && heatMap.horizontalGradient ? rect.width : rect.height) / 100;\n                if (this.heatMap.isColorRange) {\n                    if (colorCollection[0].startValue !== this.heatMap.dataSourceMinValue && index === 0 &&\n                        colorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n                        value = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    value = ((((colorCollection[index].startValue < heatMap.dataSourceMinValue && colorCollection[index].endValue >\n                        heatMap.dataSourceMaxValue) ? heatMap.dataSourceMinValue : colorCollection[index].startValue) -\n                        this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                    this.segmentCollections.push(pathY1);\n                    this.segmentCollectionsLabels.push(pathY1);\n                    if (colorCollection[index].endValue !== ((index === colorCollection.length - 1) ?\n                        this.heatMap.dataSourceMaxValue : colorCollection[index + 1].startValue) &&\n                        this.heatMap.legendColorCollection[index].endValue < this.heatMap.dataSourceMaxValue) {\n                        if (index === colorCollection.length - 1) {\n                            value = (colorCollection[index].endValue - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue) * 100;\n                            pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                            this.segmentCollections.push(pathY1);\n                        }\n                        value = ((index === colorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                            colorCollection[index].endValue) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                }\n                else {\n                    value = ((colorCollection[index].value - this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    if (!heatMap.horizontalGradient) {\n                        legendPart = rect.height / 100;\n                        pathY1 = legendRect.y + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    else {\n                        legendPart = rect.width / 100;\n                        pathX1 = legendRect.x + (legendPart * value);\n                        this.segmentCollections.push(pathX1);\n                    }\n                }\n            }\n        }\n        var textWrapWidth;\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < colorCollection.length; i++) {\n                if (heatMap.paletteSettings.type === 'Gradient') {\n                    var previousSegmentWidth = (this.segmentCollections[i] - this.segmentCollections[i - 1]) / 2;\n                    var nextSegmentWidth = (this.segmentCollections[i + 1] - this.segmentCollections[i]) / 2;\n                    if (i === colorCollection.length - 1) {\n                        textWrapWidth = previousSegmentWidth;\n                    }\n                    else if (i === 0) {\n                        textWrapWidth = nextSegmentWidth;\n                    }\n                    else {\n                        textWrapWidth = previousSegmentWidth < nextSegmentWidth ? previousSegmentWidth : nextSegmentWidth;\n                    }\n                }\n                else {\n                    var width = this.legendRectScale.width / heatMap.colorCollection.length;\n                    textWrapWidth = heatMap.legendSettings.labelDisplayType === 'Edge' ? width : width / 2;\n                }\n                this.textWrapCollections.push(textWrapWidth);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                maxTextWrapLength = text.length > maxTextWrapLength ? text.length : maxTextWrapLength;\n            }\n            if (heatMap.legendSettings.position === 'Bottom') {\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendGroup.y -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n            else {\n                heatMap.initialClipRect.y += (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n        }\n    };\n    Legend.prototype.renderColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var legendElement;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        if (!heatMap.enableCanvasRendering) {\n            legendElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + '_ColorAxis_Grid' });\n        }\n        for (var i = 0; i < (heatMap.isColorRange ? this.segmentCollections.length : heatMap.legendColorCollection.length); i++) {\n            if (!heatMap.horizontalGradient) {\n                pathX1 = legendRect.x;\n                pathY1 = pathY2 = this.segmentCollections[i];\n                pathX2 = legendRect.x + legendRect.width;\n            }\n            else {\n                pathX1 = pathX2 = this.segmentCollections[i];\n                pathY1 = legendRect.y;\n                pathY2 = legendRect.y + legendRect.height;\n            }\n            var direction = new Line(pathX1, pathY1, pathX2, pathY2);\n            var line = new LineOption(this.heatMap.element.id + '_ColorAxis_Grid' + i, direction, '#EEEEEE', 1);\n            this.drawSvgCanvas.drawLine(line, legendElement);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(legendElement);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendTitleTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_legendTitle') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            showTooltip(this.heatMap.legendSettings.title.text, pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_legendTitle_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n            document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip').style.visibility = 'visible';\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendLabelTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_Legend_Label') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            var targetId = e.target.id.split(this.heatMap.element.id + '_Legend_Label');\n            if (targetId.length === 2) {\n                var index = void 0;\n                if (targetId[1].length === 1 || this.heatMap.legendSettings.textStyle.textOverflow === 'Trim') {\n                    index = parseInt(targetId[1], 10);\n                }\n                else {\n                    index = parseInt(targetId[1].substring(0, targetId[1].length - 1), 10);\n                }\n                showTooltip(this.labelCollections[index], pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_LegendLabel_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n                document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip').style.visibility = 'visible';\n            }\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    Legend.prototype.calculateListPerPage = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.horizontalGradient) {\n            this.lastList = [];\n            var legendX = rect.x;\n            var legendY = rect.y;\n            var size = 0;\n            var division = 0;\n            var labelX = 0;\n            var labelY = 0;\n            var interval = 20;\n            var i = void 0;\n            var legendSize = 10;\n            var padding = 5;\n            this.labelXCollections = [];\n            this.labelYCollections = [];\n            this.legendXCollections = [];\n            this.legendYCollections = [];\n            for (i = 0; i < heatMap.colorCollection.length; i++) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                labelX = legendX + legendSize + padding;\n                labelY = legendY + padding;\n                var maxWidth = heatMap.legendSettings.showLabel ? labelX + size : legendX + this.legendSize + this.listInterval;\n                if (i !== 0 && maxWidth > this.legendGroup.width + this.legendGroup.x - this.listInterval) {\n                    division += 1;\n                    legendX = rect.x;\n                    legendY = rect.y + (division * interval);\n                    labelX = legendX + legendSize + padding;\n                    labelY = legendY + padding;\n                    if (division % (this.listPerPage) === 0) {\n                        this.lastList.push(i);\n                        legendY = rect.y;\n                        labelY = legendY + padding;\n                        division = 0;\n                    }\n                }\n                this.labelXCollections.push(labelX);\n                this.labelYCollections.push(labelY);\n                this.legendXCollections.push(legendX);\n                this.legendYCollections.push(legendY);\n                legendX = legendX + this.legendSize + this.labelPadding + size + this.listInterval;\n            }\n            this.lastList.push(i);\n            this.numberOfPages = this.lastList.length;\n        }\n    };\n    Legend.prototype.renderListLegendMode = function (rect, translate) {\n        var heatMap = this.heatMap;\n        var legendSize = 10;\n        var tempBorder = {\n            color: 'transparent', width: 0,\n        };\n        var padding = 5; // padding for legend label from top\n        this.legendLabelTooltip = [];\n        var listRect;\n        var size = new Size(0, 0);\n        var labelX = 0;\n        var labelY = 0;\n        var legendX = rect.x;\n        var legendY = rect.y;\n        if (translate) {\n            this.renderPagingElements();\n        }\n        var x;\n        var y;\n        var textWrapWidth = heatMap.legendSettings.title.text ? this.width - (2 * (this.legendSize + this.labelPadding)) :\n            this.legendGroup.width - (this.legendSize + this.legendRectPadding + this.labelPadding);\n        if (!heatMap.horizontalGradient) {\n            x = (this.currentPage * (this.listPerPage)) - (this.listPerPage);\n            y = x + this.listPerPage;\n            y = y < heatMap.colorCollection.length ? y : heatMap.colorCollection.length;\n        }\n        else {\n            x = this.currentPage === 1 ? 0 : this.lastList[this.currentPage - 2];\n            y = this.lastList[this.currentPage - 1];\n        }\n        for (var i = x; i < y; i++) {\n            if (heatMap.legendSettings.showLabel) {\n                var text = this.labelCollections[i];\n                size = measureText(text, heatMap.legendSettings.textStyle);\n            }\n            var legendEventArgs = {\n                cancel: false, text: this.labelCollection[i], name: 'legendRender',\n            };\n            if (heatMap.horizontalGradient) {\n                legendX = this.legendXCollections[i];\n                legendY = this.legendYCollections[i];\n                labelX = this.labelXCollections[i];\n                labelY = this.labelYCollections[i];\n            }\n            labelX = legendX + this.legendSize + this.labelPadding;\n            labelY = legendY + padding;\n            this.heatMap.trigger('legendRender', legendEventArgs);\n            if (translate && heatMap.rendering && this.legendRange.length <= heatMap.colorCollection.length) {\n                var rectPosition = new LegendRange(legendX, legendY, legendSize, legendSize, heatMap.colorCollection[i].value, true, this.currentPage);\n                rectPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                if (!legendEventArgs.cancel) {\n                    this.legendRange.push(rectPosition);\n                }\n                else {\n                    var rectPosition_1 = new LegendRange(legendX, legendY, 0, 0, heatMap.colorCollection[i].value, true, this.currentPage);\n                    this.legendRange.push(rectPosition_1);\n                }\n                if (heatMap.legendSettings.showLabel) {\n                    var textPosition = new LegendRange(labelX, (labelY - size.height / 2), size.width, size.height, heatMap.colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n            }\n            if (!legendEventArgs.cancel) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                    if (text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, size.width, size.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, 'start', text, 0, 'translate(0,0)', 'middle');\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill : this.legendRange[i].visible ? options.fill : '#D3D3D3';\n                    this.drawSvgCanvas.createText(options, this.translategroup, text[0]);\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        this.translategroup.lastChild.setAttribute('dy', '0.6ex');\n                    }\n                }\n                listRect = new Rect(legendX, legendY, legendSize, legendSize);\n                var listColor = heatMap.legendOnLoad ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                    heatMap.colorCollection[i].color :\n                    this.legendRange[i].visible ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                        heatMap.colorCollection[i].color : '#D3D3D3';\n                var rectItems = new RectOption(heatMap.element.id + '_legend_list' + i, listColor, tempBorder, 1, listRect);\n                this.drawSvgCanvas.drawRectangle(rectItems, this.translategroup);\n                heatMap.horizontalGradient ? legendX = legendX + this.legendSize + this.labelPadding + size.width + this.listInterval :\n                    legendY += this.legendSize + this.listInterval;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n            this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n            var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_LegendScale_ClipPath' });\n            var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n            clippath.appendChild(clipRect);\n            this.translategroup.appendChild(clippath);\n            this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            this.legendScale.appendChild(this.translategroup);\n            heatMap.svgObject.appendChild(this.legend);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.translatePage = function (heatMap, page, isNext) {\n        var padding = 5;\n        if ((isNext && page >= 1 && page < this.numberOfPages) || (!isNext && page > 1 && page <= this.numberOfPages)) {\n            if (isNext) {\n                this.currentPage += 1;\n                this.legendRect.y += this.legendRect.height;\n            }\n            else {\n                this.currentPage -= 1;\n                this.legendRect.y -= this.legendRect.height;\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.paginggroup.removeChild(this.paginggroup.firstChild);\n                while (this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            else {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.fillRect(this.legendRectScale.x - padding, this.legendRectScale.y - padding, this.legendRectScale.width +\n                    padding, this.legendRectScale.height + (2 * padding));\n                ctx.fillRect(this.pagingRect.x, this.pagingRect.y, this.pagingRect.width, this.pagingRect.height);\n            }\n            this.renderListLegendMode(this.legendRectScale, true);\n        }\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection && heatMap.rectSelected) {\n            var ctx = heatMap.secondaryCanvasRenderer.ctx;\n            var position = heatMap.legendSettings.position;\n            var initialRect = heatMap.initialClipRect;\n            var rectX = position === 'Right' ? initialRect.x + initialRect.width : 0;\n            var rectY = position === 'Bottom' ? initialRect.y + initialRect.height : 0;\n            var rectWidth = position === 'Right' ? heatMap.availableSize.width - (initialRect.x +\n                initialRect.width) : position === 'Left' ? initialRect.x : heatMap.availableSize.width;\n            var rectHeight = position === 'Top' ? initialRect.y : position === 'Bottom' ?\n                heatMap.availableSize.height - (initialRect.y + initialRect.height) : heatMap.availableSize.height;\n            ctx.save();\n            ctx.clearRect(rectX, rectY, rectWidth, rectHeight);\n            ctx.restore();\n            var oldCanvas = document.getElementById(heatMap.element.id + '_canvas');\n            var newCanvas = document.getElementById(heatMap.element.id + '_secondary_canvas');\n            var rectImage = oldCanvas.getContext('2d').getImageData(rectX, rectY, rectWidth, rectHeight);\n            newCanvas.getContext('2d').putImageData(rectImage, rectX, rectY);\n            oldCanvas.style.opacity = '0.3';\n        }\n    };\n    /**\n     * To create div container for tooltip which appears on hovering the smart legend.\n     * @param heatmap\n     * @private\n     */\n    Legend.prototype.createTooltipDiv = function (heatMap) {\n        var element = createElement('div', {\n            id: this.heatMap.element.id + 'legendLabelTooltipContainer',\n            styles: 'position:absolute'\n        });\n        this.heatMap.element.appendChild(element);\n    };\n    /**\n     * To render tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.renderTooltip = function (currentLegendRect) {\n        var heatMap = this.heatMap;\n        var tempTooltipText = [currentLegendRect.label];\n        var offset = null;\n        offset = parseInt(heatMap.legendSettings.textStyle.size, 10) / 2;\n        this.tooltipObject = new tool({\n            offset: offset,\n            theme: heatMap.theme,\n            content: tempTooltipText,\n            location: {\n                x: currentLegendRect.x + (currentLegendRect.width / 2),\n                y: currentLegendRect.y + (currentLegendRect.height / 2)\n            },\n            inverted: heatMap.horizontalGradient ? false : true,\n            areaBounds: {\n                height: this.legendGroup.height + this.legendGroup.y,\n                width: this.legendGroup.width + this.legendGroup.x,\n                x: heatMap.legendSettings.position === 'Right' ? 0 : this.legendGroup.x,\n                y: heatMap.legendSettings.position === 'Top' ? heatMap.titleSettings.text === '' ? this.legendGroup.height -\n                    this.legendGroup.y : this.legendGroup.y : 0\n            }\n        }, '#' + this.heatMap.element.id + 'legendLabelTooltipContainer');\n        this.tooltipObject.element.style.visibility = 'visible';\n    };\n    /**\n     * To create tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.createTooltip = function (pageX, pageY) {\n        var currentLegendRect;\n        for (var i = 0; i < this.heatMap.colorCollection.length; i++) {\n            var position = this.legendRectPositionCollection[i];\n            if (position && pageX > position.x && pageX < position.width + position.x &&\n                pageY > position.y && pageY < position.height + position.y) {\n                currentLegendRect = this.legendRectPositionCollection[i];\n                break;\n            }\n        }\n        var ele = document.getElementById(this.heatMap.element.id + 'legendLabelTooltipContainer');\n        if (ele && ele.style.visibility === 'visible' && this.tooltipObject && !this.heatMap.isTouch) {\n            this.tooltipObject.fadeOut();\n            ele.style.visibility = 'hidden';\n        }\n        if (currentLegendRect) {\n            this.renderTooltip(currentLegendRect);\n        }\n    };\n    /**\n     * Toggle the visibility of cells based on legend selection\n     * @private\n     */\n    Legend.prototype.legendRangeSelection = function (index) {\n        var heatMap = this.heatMap;\n        var legendRange = this.legendRange;\n        var padding = 5;\n        var legendPadding = heatMap.horizontalGradient ? 10 : 0;\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        heatMap.rangeSelection = true;\n        if (heatMap.enableCanvasRendering) {\n            var ctx_2 = heatMap.canvasRenderer.ctx;\n            if (heatMap.legendSettings.enableSmartLegend) {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, (legendBound.width + this.labelPadding +\n                    this.maxLegendLabelSize.width) + padding, legendBound.height + 2 * (padding + legendPadding));\n            }\n            else {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, legendBound.width +\n                    padding, legendBound.height + (2 * padding));\n            }\n        }\n        else {\n            if (heatMap.legendSettings.enableSmartLegend) {\n                while (this.legend && this.legend.childNodes.length) {\n                    this.legend.removeChild(this.legend.firstChild);\n                }\n            }\n            else {\n                while (this.translategroup && this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            removeElement(heatMap.heatMapSeries.containerRectObject.id);\n            if (heatMap.cellSettings.showLabel) {\n                removeElement(heatMap.heatMapSeries.containerTextObject.id);\n            }\n        }\n        if (heatMap.legendSettings.enableSmartLegend) {\n            if (heatMap.colorCollection.length !== heatMap.legendColorCollection.length) {\n                if (index === heatMap.legendColorCollection.length - 1) {\n                    heatMap.toggleValue[index - 1].visible = this.visibilityCollections[index - 1] =\n                        legendRange[index - 1].visible = !legendRange[index].visible;\n                }\n                else {\n                    if (index === heatMap.colorCollection.length - 1) {\n                        heatMap.toggleValue[index + 1].visible = this.visibilityCollections[index + 1] =\n                            legendRange[index + 1].visible = !legendRange[index].visible;\n                    }\n                }\n            }\n        }\n        heatMap.toggleValue[index].visible = this.visibilityCollections[index] = legendRange[index].visible = !legendRange[index].visible;\n        heatMap.legendOnLoad = false;\n        if (heatMap.legendSettings.enableSmartLegend) {\n            this.renderSmartLegend();\n            var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n            this.renderLegendLabel(rectItemsSvg);\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            if (heatMap.renderingMode === 'SVG') {\n                this.renderTitle(rectItemsSvg);\n            }\n        }\n        else {\n            this.renderListLegendMode(this.legendRectScale, false);\n        }\n        if (heatMap.enableCanvasRendering) {\n            ctx.restore();\n        }\n        heatMap.heatMapSeries.renderRectSeries();\n        heatMap.clearSelection();\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection) {\n            // heatMap.createSvg();\n            // heatMap.refreshBound();\n            // heatMap.createMultiCellDiv(false);\n        }\n    };\n    /**\n     * update visibility collections of legend and series\n     * @private\n     */\n    Legend.prototype.updateLegendRangeCollections = function () {\n        var heatMap = this.heatMap;\n        heatMap.rangeSelection = !heatMap.legendOnLoad ? true : false;\n        this.visibilityCollections = !heatMap.legendOnLoad ? this.visibilityCollections : [];\n        heatMap.toggleValue = !heatMap.legendOnLoad ? heatMap.toggleValue : [];\n        this.legendRange = !heatMap.legendOnLoad ? this.legendRange : [];\n        this.legendTextRange = !heatMap.legendOnLoad ? this.legendTextRange : [];\n    };\n    return Legend;\n}());\nexport { Legend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { increaseDateTimeInterval } from '../utils/helper';\nimport { BubbleData } from '../model/base';\n/**\n * Configures the Adaptor Property in the Heatmap.\n */\nvar Data = /** @class */ (function (_super) {\n    __extends(Data, _super);\n    function Data() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Data.prototype, \"isJsonData\", void 0);\n    __decorate([\n        Property('None')\n    ], Data.prototype, \"adaptorType\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"xDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"yDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"valueMapping\", void 0);\n    __decorate([\n        Complex({}, BubbleData)\n    ], Data.prototype, \"bubbleDataMapping\", void 0);\n    return Data;\n}(ChildProperty));\nexport { Data };\nvar AdaptiveMinMax = /** @class */ (function () {\n    function AdaptiveMinMax() {\n    }\n    return AdaptiveMinMax;\n}());\nexport { AdaptiveMinMax };\n/**\n *\n * The `Adaptor` module is used to handle JSON and Table data.\n */\nvar Adaptor = /** @class */ (function () {\n    function Adaptor(heatMap) {\n        this.reconstructedXAxis = [];\n        this.reconstructedYAxis = [];\n        this.adaptiveXMinMax = new AdaptiveMinMax();\n        this.adaptiveYMinMax = new AdaptiveMinMax();\n        this.heatMap = heatMap;\n    }\n    /**\n     * Method to construct Two Dimentional Datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructDatasource = function (dataSource, dataSourceSettings) {\n        if (dataSourceSettings.adaptorType === 'Cell') {\n            var xAxis = this.heatMap.xAxis;\n            var yAxis = this.heatMap.yAxis;\n            this.adaptiveXMinMax.min = xAxis.minimum;\n            this.adaptiveXMinMax.max = xAxis.maximum;\n            this.adaptiveYMinMax.min = yAxis.minimum;\n            this.adaptiveYMinMax.max = yAxis.maximum;\n            if (((xAxis.valueType === 'Numeric' || xAxis.valueType === 'DateTime') &&\n                (isNullOrUndefined(xAxis.minimum) || isNullOrUndefined(xAxis.maximum))) ||\n                ((yAxis.valueType === 'Numeric' || yAxis.valueType === 'DateTime') &&\n                    (isNullOrUndefined(yAxis.minimum) || isNullOrUndefined(yAxis.maximum)))) {\n                this.getMinMaxValue(dataSource, dataSourceSettings, xAxis, yAxis);\n            }\n            this.heatMap.isCellData = true;\n        }\n        if (dataSourceSettings.adaptorType === 'None') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = this.processJsonTableData(dataSource, dataSourceSettings);\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.heatMap.completeAdaptDataSource = this.processJsonCellData(dataSource, dataSourceSettings);\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.constructAdaptiveAxis();\n            this.heatMap.completeAdaptDataSource = this.processCellData(dataSource);\n            this.heatMap.isCellData = true;\n        }\n    };\n    /**\n     * Method to construct Axis Collection.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructAdaptiveAxis = function () {\n        var xAxis = this.heatMap.xAxis;\n        var yAxis = this.heatMap.yAxis;\n        var intervalType;\n        if (xAxis.valueType === 'Numeric') {\n            this.reconstructedXAxis = this.getNumericAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.increment);\n        }\n        if (yAxis.valueType === 'Numeric') {\n            this.reconstructedYAxis = this.getNumericAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.increment);\n        }\n        if (xAxis.valueType === 'DateTime') {\n            this.reconstructedXAxis = this.getDateAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.intervalType, xAxis.increment);\n        }\n        if (yAxis.valueType === 'DateTime') {\n            this.reconstructedYAxis = this.getDateAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.intervalType, yAxis.increment);\n        }\n    };\n    /**\n     * Method to calculate Numeric Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getNumericAxisCollection = function (min, max, increment) {\n        var loopIndex = min;\n        var tempAxisColl = [];\n        while (loopIndex <= max) {\n            tempAxisColl.push(loopIndex.toString());\n            loopIndex = loopIndex + increment;\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate DateTime Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getDateAxisCollection = function (min, max, intervalType, increment) {\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.heatMap.intl.getDateParser(option);\n        var dateFormatter = this.heatMap.intl.getDateFormat(option);\n        min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: min }).val))));\n        var tempInterval = min;\n        var tempAxisColl = [];\n        while (tempInterval <= max) {\n            tempAxisColl.push(new Date(tempInterval).toString());\n            tempInterval = increaseDateTimeInterval(tempInterval, 1, intervalType, increment).getTime();\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate Maximum and Minimum Value from datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.getMinMaxValue = function (dataSource, adapData, xAxis, yAxis) {\n        var data = dataSource;\n        var label = Object.keys(data[0]);\n        if (data.length > 0) {\n            this.adaptiveXMinMax.min = !isNullOrUndefined(xAxis.minimum) ? xAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.min = !isNullOrUndefined(yAxis.minimum) ? yAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n            this.adaptiveXMinMax.max = !isNullOrUndefined(xAxis.maximum) ? xAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.max = !isNullOrUndefined(yAxis.maximum) ? yAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n        }\n        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n            // tslint:disable-next-line:no-any\n            var xDataIndex = adapData.isJsonData ? data[dataIndex][label[0]] : data[dataIndex][0];\n            // tslint:disable-next-line:no-any\n            var yDataIndex = adapData.isJsonData ? data[dataIndex][label[1]] : data[dataIndex][1];\n            if (xDataIndex < this.adaptiveXMinMax.min && isNullOrUndefined(xAxis.minimum)) {\n                this.adaptiveXMinMax.min = xDataIndex;\n            }\n            if (xDataIndex > this.adaptiveXMinMax.max && isNullOrUndefined(xAxis.maximum)) {\n                this.adaptiveXMinMax.max = xDataIndex;\n            }\n            if (yDataIndex < this.adaptiveYMinMax.min && isNullOrUndefined(yAxis.minimum)) {\n                this.adaptiveYMinMax.min = yDataIndex;\n            }\n            if (yDataIndex > this.adaptiveYMinMax.max && isNullOrUndefined(yAxis.maximum)) {\n                this.adaptiveYMinMax.max = yDataIndex;\n            }\n        }\n    };\n    /**\n     * Method to process Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processCellData = function (dataSource) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.reconstructedXAxis;\n        var yLabels = this.reconstructedYAxis;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        this.reconstructData = [];\n        if (tempDataCollection && tempDataCollection.length) {\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                if (this.heatMap.xAxis.valueType === 'Category') {\n                    currentDataXIndex = tempDataCollection[xindex][0];\n                }\n                else {\n                    currentDataXIndex = xLabels.indexOf(tempDataCollection[xindex][0].toString());\n                }\n                if (currentDataXIndex > -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    if (this.heatMap.yAxis.valueType === 'Category') {\n                        currentDataYIndex = tempDataCollection[xindex][1];\n                    }\n                    else {\n                        currentDataYIndex = yLabels.indexOf(tempDataCollection[xindex][1].toString());\n                    }\n                    if (currentDataYIndex !== -1) {\n                        while (this.reconstructData[currentDataXIndex][currentDataYIndex] !== '') {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        this.reconstructData[currentDataXIndex][currentDataYIndex] = isNullOrUndefined(tempDataCollection[xindex][2]) ?\n                            '' : tempDataCollection[xindex][2];\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to process JSON Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonCellData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xAxisLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yAxisLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var axisCollections = this.heatMap.axisCollections;\n        if (xAxisLabels.length === 0 || yAxisLabels.length === 0) {\n            this.generateAxisLabels(dataSource, adaptordata);\n        }\n        var xLabels = (this.heatMap.xAxis.valueType === 'Category') ? (xAxisLabels.length > 0 ?\n            this.heatMap.xAxis.labels : axisCollections[0].jsonCellLabel) : axisCollections[0].labelValue;\n        var yLabels = (this.heatMap.yAxis.valueType === 'Category') ? (yAxisLabels.length > 0 ?\n            this.heatMap.yAxis.labels : axisCollections[1].jsonCellLabel) : axisCollections[1].labelValue;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var index = 0; index < tempDataCollection.length; index++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    currentDataYIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, yLabels, adaptordata.yDataMapping.split('.'), this.heatMap.yAxis.valueType);\n                    if (currentDataYIndex !== -1) {\n                        while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        if (this.heatMap.bubbleSizeWithColor) {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = [\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.size.split('.'), ''),\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.color.split('.'), '')\n                            ];\n                        }\n                        else {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.valueMapping.split('.'), '');\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to generate axis labels when labels are not given.\n     * @return {string}\n     * @private\n     */\n    Adaptor.prototype.generateAxisLabels = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var hasXLabels = xLabels.length > 0 ? true : false;\n        var hasYLabels = yLabels.length > 0 ? true : false;\n        var axisCollection = this.heatMap.axisCollections;\n        for (var index = 0; index < axisCollection.length; index++) {\n            var valueType = axisCollection[index].valueType;\n            var axis = axisCollection[index];\n            if (valueType === 'Category') {\n                var hasLabels = void 0;\n                var dataMapping = void 0;\n                var labels = void 0;\n                if (axis.orientation === 'Horizontal') {\n                    hasLabels = hasXLabels;\n                    dataMapping = adaptordata.xDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                else {\n                    hasLabels = hasYLabels;\n                    dataMapping = adaptordata.yDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                if (!hasLabels) {\n                    for (var i = 0; i < tempDataCollection.length; i++) {\n                        if (dataMapping in tempDataCollection[i]) {\n                            var xValue = tempDataCollection[i][dataMapping].toString();\n                            if (labels.indexOf(xValue.toString()) === -1) {\n                                labels.push(xValue);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (valueType === 'DateTime') {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n        }\n    };\n    /**\n     * Method to get data from complex mapping.\n     * @return {number|string}\n     * @private\n     */\n    Adaptor.prototype.getSplitDataValue = function (\n    // tslint:disable-next-line:no-any \n    tempSplitDataCollection, adaptordata, labels, tempSplitData, valueType) {\n        var value = -1;\n        this.tempSplitDataCollection = tempSplitDataCollection;\n        for (var splitIndex = 0; splitIndex < tempSplitData.length; splitIndex++) {\n            value = !isNullOrUndefined(labels) ? (!(valueType === 'DateTime') ?\n                labels.indexOf(this.tempSplitDataCollection[tempSplitData[splitIndex]]) :\n                labels.map(Number).indexOf(+this.tempSplitDataCollection[tempSplitData[splitIndex]])) : null;\n            if (!isNullOrUndefined(this.tempSplitDataCollection)) {\n                this.tempSplitDataCollection = value !== -1 && !isNullOrUndefined(labels) ?\n                    this.tempSplitDataCollection : this.tempSplitDataCollection[tempSplitData[splitIndex]];\n            }\n            if (isNullOrUndefined(this.tempSplitDataCollection)) {\n                break;\n            }\n        }\n        value = !isNullOrUndefined(labels) ? value : isNullOrUndefined(this.tempSplitDataCollection) ||\n            this.tempSplitDataCollection.toString() === '' ? '' : parseFloat(this.tempSplitDataCollection.toString());\n        return value;\n    };\n    /**\n     * Method to process JSON Table datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonTableData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var key;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[xindex], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    for (var index = 0; index < Object.keys(this.tempSplitDataCollection).length; index++) {\n                        key = Object.keys(this.tempSplitDataCollection)[index];\n                        currentDataYIndex = key !== adaptordata.xDataMapping ? yLabels.indexOf(key) : -1;\n                        if (currentDataYIndex !== -1) {\n                            while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                                this.reconstructData[currentDataXIndex].push('');\n                            }\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] =\n                                isNullOrUndefined(this.tempSplitDataCollection[key]) ?\n                                    '' : this.tempSplitDataCollection[key];\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * To destroy the Adaptor.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.destroy = function (heatMap) {\n        /**\n         * No Lines\n         */\n    };\n    ;\n    /**\n     * To get Module name\n     */\n    Adaptor.prototype.getModuleName = function () {\n        return 'Adaptor';\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n","/**\n * Heat Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Internationalization, Complex, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { remove, Event, EventHandler, Touch } from '@syncfusion/ej2-base';\nimport { Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\nimport { Size, stringToNumber, RectOption, Rect, TextBasic, measureText } from './utils/helper';\nimport { DrawSvgCanvas, TextOption, titlePositionX, getTitle, showTooltip, getElement, SelectedCellDetails } from './utils/helper';\nimport { removeElement, CanvasTooltip, getTooltipText } from './utils/helper';\nimport { Margin, Title } from './model/base';\nimport { Theme, getThemeColor } from './model/theme';\nimport { Axis } from './axis/axis';\nimport { AxisHelper } from './axis/axis-helpers';\nimport { Series, CellSettings } from './series/series';\nimport { PaletteSettings, CellColor } from './utils/colorMapping';\nimport { TooltipSettings } from './utils/tooltip';\nimport { TwoDimensional } from './datasource/twodimensional';\nimport { LegendSettings } from '../heatmap/legend/legend';\nimport { Data } from './datasource/adaptor';\nvar HeatMap = /** @class */ (function (_super) {\n    __extends(HeatMap, _super);\n    function HeatMap() {\n        /**\n         * The width of the heatmap as a string accepts input as both like '100px' or '100%'.\n         * If specified as '100%, heatmap renders to the full width of its parent element.\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.enableCanvasRendering = false;\n        /** @private */\n        _this.isColorRange = false;\n        /** @private */\n        _this.isCellTapHold = false;\n        /** @private */\n        _this.selectedCellCount = 0;\n        /** @private */\n        _this.toggleValue = [];\n        /** @private */\n        _this.legendOnLoad = true;\n        /** @private */\n        _this.resizing = false;\n        /** @private */\n        _this.rendering = true;\n        /** @private */\n        _this.horizontalGradient = _this.legendSettings.position === 'Bottom' || _this.legendSettings.position === 'Top';\n        /** @private */\n        _this.multiSelection = false;\n        /** @private */\n        _this.rectSelected = false;\n        /** @private */\n        _this.previousSelectedCellsRect = [];\n        /** @private */\n        _this.multiCellCollection = [];\n        /** @private */\n        _this.selectedMultiCellCollection = [];\n        /** @private */\n        _this.tempMultiCellCollection = [];\n        /**\n         * @private\n         */\n        _this.tooltipCollection = [];\n        /**\n         * @private\n         */\n        _this.isCellData = false;\n        /** @private */\n        _this.isBlazor = false;\n        return _this;\n    }\n    HeatMap.prototype.preRender = function () {\n        this.initPrivateVariable();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    HeatMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.canvasRenderer = new CanvasRenderer(this.element.id);\n        this.secondaryCanvasRenderer = new CanvasRenderer(this.element.id + '_secondary');\n        this.heatMapAxis = new AxisHelper(this);\n        this.heatMapSeries = new Series(this);\n        this.drawSvgCanvas = new DrawSvgCanvas(this);\n        this.twoDimensional = new TwoDimensional(this);\n        this.cellColor = new CellColor(this);\n        this.tempRectHoverClass = '';\n        this.tempTooltipRectId = '';\n        this.setCulture();\n        this.isBlazor = isBlazor();\n    };\n    /**\n     * Method to set culture for heatmap\n     */\n    HeatMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    HeatMap.prototype.render = function () {\n        this.updateBubbleHelperProperty();\n        this.trigger('load', { heatmap: (this.isBlazor ? null : this) });\n        this.initAxis();\n        this.processInitData();\n        this.setTheme();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.createSvg();\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n        this.renderElements();\n        this.appendSvgObject();\n        if (this.tooltipModule) {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.renderComplete();\n    };\n    /**\n     * To re-calculate the datasource while changing datasource property dynamically.\n     * @private\n     */\n    HeatMap.prototype.reRenderDatasource = function () {\n        this.dataSourceMinValue = null;\n        this.dataSourceMaxValue = null;\n        this.processInitData();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n    };\n    /**\n     * To process datasource property.\n     * @private\n     */\n    HeatMap.prototype.processInitData = function () {\n        if (this.adaptorModule) {\n            this.adaptorModule.constructDatasource(this.dataSource, this.dataSourceSettings);\n        }\n        else {\n            this.completeAdaptDataSource = this.dataSource;\n        }\n    };\n    /**\n     * To set render mode of heatmap as SVG or Canvas.\n     * @private\n     */\n    HeatMap.prototype.setRenderMode = function () {\n        if (this.renderingMode === 'Canvas') {\n            this.enableCanvasRendering = true;\n        }\n        else if (this.renderingMode === 'Auto' &&\n            (this.axisCollections[0].axisLabelSize * this.axisCollections[1].axisLabelSize) >= 10000) {\n            this.enableCanvasRendering = true;\n        }\n        else {\n            this.enableCanvasRendering = false;\n        }\n    };\n    /**\n     * To set bubble helper private property.\n     * @private\n     */\n    HeatMap.prototype.updateBubbleHelperProperty = function () {\n        if (this.cellSettings.tileType === 'Bubble' &&\n            (this.cellSettings.bubbleType === 'Size' || this.cellSettings.bubbleType === 'Sector')) {\n            this.legendVisibilityByCellType = false;\n        }\n        else if (this.legendModule && this.legendSettings.visible) {\n            this.legendVisibilityByCellType = true;\n        }\n        if (this.cellSettings.tileType === 'Bubble' && this.cellSettings.bubbleType === 'SizeAndColor') {\n            this.bubbleSizeWithColor = true;\n        }\n        else {\n            this.bubbleSizeWithColor = false;\n        }\n    };\n    HeatMap.prototype.renderElements = function () {\n        this.tooltipCollection = [];\n        this.renderSecondaryElement();\n        this.renderBorder();\n        this.renderTitle();\n        this.heatMapAxis.renderAxes();\n        if (this.tooltipModule && this.showTooltip) {\n            this.tooltipModule.tooltipObject = null;\n            this.tooltipModule.createTooltipDiv(this);\n        }\n        this.heatMapSeries.renderRectSeries();\n        if (this.legendModule && this.legendSettings.visible\n            && this.legendVisibilityByCellType) {\n            this.legendModule.renderLegendItems();\n            if (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltipDiv(this);\n            }\n        }\n    };\n    /**\n     * Get component name\n     */\n    HeatMap.prototype.getModuleName = function () {\n        return 'heatmap';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    HeatMap.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    HeatMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        var refreshBounds = false;\n        var isUpdateSelection = true;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'renderingMode':\n                    this.rendering = false;\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'cellSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendModule && ((newProp.cellSettings.tileType !==\n                        oldProp.cellSettings.tileType) || (newProp.cellSettings.bubbleType !== oldProp.cellSettings.bubbleType))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    if (this.cellSettings.tileType === 'Bubble') {\n                        isUpdateSelection = false;\n                    }\n                    this.reRenderDatasource();\n                    refreshBounds = true;\n                    break;\n                case 'showTooltip':\n                    refreshBounds = true;\n                    break;\n                case 'dataSource':\n                case 'dataSourceSettings':\n                    this.isCellData = false;\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'titleSettings':\n                case 'width':\n                case 'height':\n                case 'margin':\n                    refreshBounds = true;\n                    break;\n                case 'legendSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType && (((newProp.legendSettings.visible !== oldProp.legendSettings.visible) ||\n                        (newProp.legendSettings.enableSmartLegend !== oldProp.legendSettings.enableSmartLegend)))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    else {\n                        this.legendOnLoad = false;\n                    }\n                    refreshBounds = true;\n                    break;\n                case 'yAxis':\n                case 'xAxis':\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    refreshBounds = true;\n                    break;\n                case 'paletteSettings':\n                    this.paletteCellSelectionUpdation();\n                    this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n                    this.cellColor.getColorCollection();\n                    this.calculateBounds();\n                    renderer = true;\n                    break;\n                case 'theme':\n                    this.setTheme();\n                    renderer = true;\n                    break;\n                case 'tooltipSettings':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.tooltipObject.fill = this.tooltipSettings.fill;\n                        this.tooltipModule.tooltipObject.border = this.tooltipSettings.border;\n                        this.tooltipModule.tooltipObject.textStyle = this.tooltipSettings.textStyle;\n                        this.tooltipModule.tooltipObject.template = this.tooltipSettings.template;\n                        this.tooltipModule.tooltipObject.refresh();\n                    }\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.createSvg();\n            this.renderElements();\n            this.appendSvgObject();\n            this.trigger('created');\n            if (!isUpdateSelection) {\n                this.clearSelection();\n            }\n        }\n        else if (refreshBounds) {\n            this.createSvg();\n            this.refreshBound();\n            this.appendSvgObject();\n            this.trigger('created');\n        }\n        if (this.allowSelection && this.rectSelected) {\n            if (isUpdateSelection) {\n                this.updateCellSelection();\n            }\n            else {\n                this.clearSelection();\n            }\n        }\n        this.rendering = true;\n    };\n    HeatMap.prototype.paletteCellSelectionUpdation = function () {\n        this.updateBubbleHelperProperty();\n        if (this.legendVisibilityByCellType) {\n            this.legendOnLoad = true;\n            this.legendModule.updateLegendRangeCollections();\n        }\n    };\n    /**\n     * create svg or canvas element\n     * @private\n     */\n    HeatMap.prototype.createSvg = function () {\n        this.removeSvg();\n        this.setRenderMode();\n        this.calculateSize();\n        if (!this.enableCanvasRendering) {\n            this.svgObject = this.renderer.createSvg({\n                id: this.element.id + '_svg',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.cellSettings.border.width.toString() === '0' && this.cellSettings.tileType === 'Rect') {\n                this.svgObject.setAttribute('shape-rendering', 'crispEdges');\n            }\n        }\n        else {\n            this.svgObject = this.canvasRenderer.createCanvas({\n                id: this.element.id + '_canvas',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.allowSelection) {\n                this.createMultiCellDiv(true);\n            }\n        }\n    };\n    /**\n     *  To Remove the SVG.\n     * @private\n     */\n    HeatMap.prototype.removeSvg = function () {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        if (document.getElementById(this.element.id + 'Celltooltipcontainer')) {\n            remove(document.getElementById(this.element.id + 'Celltooltipcontainer'));\n        }\n        if (document.getElementById(this.element.id + 'legendLabelTooltipContainer')) {\n            remove(document.getElementById(this.element.id + 'legendLabelTooltipContainer'));\n        }\n        if (document.getElementById(this.element.id + '_Multi_CellSelection_Canvas')) {\n            remove(document.getElementById(this.element.id + '_Multi_CellSelection_Canvas'));\n        }\n        if (document.getElementById(this.element.id + '_CellSelection_Container')) {\n            remove(document.getElementById(this.element.id + '_CellSelection_Container'));\n        }\n        if (this.svgObject) {\n            var svgElement = document.getElementById(this.svgObject.id);\n            if (svgElement) {\n                while (this.svgObject.childNodes.length) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                remove(this.svgObject);\n            }\n        }\n    };\n    HeatMap.prototype.renderSecondaryElement = function () {\n        var tooltipDiv = this.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        this.element.appendChild(tooltipDiv);\n        var divElement = this.createElement('div', {\n            id: this.element.id + '_CellSelection_Container',\n            styles: 'position:absolute; z-index: 2 ; top:' + this.initialClipRect.y + 'px' + '; left:' + this.initialClipRect.x + 'px',\n        });\n        this.element.appendChild(divElement);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return{ModuleDeclaration[]}\n     * @private\n     */\n    HeatMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.showTooltip) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        if (this.legendSettings) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.dataSource) {\n            modules.push({\n                member: 'Adaptor',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of Heatmap\n     */\n    HeatMap.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        this.element.classList.remove('e-heatmap');\n    };\n    /**\n     * Applies all the pending property changes and render the component again.\n     * @method destroy\n     * @return {void}.\n     */\n    HeatMap.prototype.refresh = function () {\n        _super.prototype.refresh.call(this);\n        this.element.classList.add('e-heatmap');\n    };\n    /**\n     * Appending svg object to the element\n     * @private\n     */\n    HeatMap.prototype.appendSvgObject = function () {\n        if (this.enableCanvasRendering && this.allowSelection) {\n            this.createMultiCellDiv(false);\n        }\n        else {\n            this.element.appendChild(this.svgObject);\n        }\n    };\n    HeatMap.prototype.renderBorder = function () {\n        this.border = {\n            width: 0\n        };\n        var width = 0;\n        var rect = new RectOption(this.element.id + '_HeatmapBorder', this.themeStyle.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.drawSvgCanvas.drawRectangle(rect, this.svgObject);\n    };\n    HeatMap.prototype.calculateSize = function () {\n        var width = stringToNumber(this.width, this.element.offsetWidth) || this.element.offsetWidth || 600;\n        var height = stringToNumber(this.height, this.element.offsetHeight) || this.element.offsetHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    HeatMap.prototype.renderTitle = function () {\n        if (this.titleSettings.text) {\n            var titleStyle = this.titleSettings.textStyle;\n            var anchor = titleStyle.textAlignment === 'Near' ? 'start' :\n                titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.titleCollection[0], titleStyle);\n            var options = new TextOption(this.element.id + '_HeatmapTitle', new TextBasic(titlePositionX(this.availableSize.width - this.margin.left - this.margin.right, this.margin.left, this.margin.right, titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection), titleStyle, titleStyle.color || this.themeStyle.heatMapTitle);\n            if (this.titleCollection.length > 1) {\n                this.drawSvgCanvas.createWrapText(options, titleStyle, this.svgObject);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, this.svgObject, this.titleCollection[0]);\n                if (this.titleCollection[0].indexOf('...') !== -1 && this.enableCanvasRendering) {\n                    this.tooltipCollection.push(new CanvasTooltip(this.titleSettings.text, new Rect(this.margin.left, this.margin.top, this.elementSize.width, this.elementSize.height)));\n                }\n            }\n        }\n    };\n    HeatMap.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId === (this.element.id + '_HeatmapTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.titleSettings.text, x, y, this.element.offsetWidth, this.element.id + '_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch, this);\n        }\n        else {\n            removeElement(this.element.id + '_Title_Tooltip');\n        }\n    };\n    HeatMap.prototype.axisTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId.indexOf(this.element.id + '_XAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_XAxis_MultiLevel') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_MultiLevel') !== -1)) {\n            var tooltipText = getTooltipText(this.tooltipCollection, x, y);\n            if (tooltipText) {\n                showTooltip(tooltipText, x, y, this.element.offsetWidth, this.element.id + '_axis_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n            }\n            else {\n                removeElement(this.element.id + '_axis_Tooltip');\n            }\n        }\n        else {\n            removeElement(this.element.id + '_axis_Tooltip');\n        }\n    };\n    HeatMap.prototype.isHeatmapRect = function (x, y) {\n        var firstRectDetails = [];\n        var lastRectDetails = [];\n        var isRect;\n        firstRectDetails.push(this.heatMapSeries.rectPositionCollection[0][0]);\n        lastRectDetails.push(this.heatMapSeries.rectPositionCollection[this.yLength - 1][this.xLength - 1]);\n        isRect = (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n            x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n            y <= (lastRectDetails[0].y + lastRectDetails[0].height)) ? true : false;\n        return isRect;\n    };\n    HeatMap.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    };\n    HeatMap.prototype.calculateBounds = function () {\n        var margin = this.margin;\n        // Title Height;\n        var titleHeight = 0;\n        var padding = (this.legendModule && this.legendSettings.position === 'Top'\n            && this.legendVisibilityByCellType) || this.titleSettings.textStyle.size === '0px' ? 0 : 16; // title padding\n        var left = margin.left;\n        var width = this.availableSize.width - left - margin.right;\n        if ((this.paletteSettings.colorGradientMode === 'Column' || this.paletteSettings.colorGradientMode === 'Row') &&\n            this.paletteSettings.type === 'Gradient') {\n            if (this.paletteSettings.palette.length === 0) {\n                this.legendVisibilityByCellType = false;\n            }\n            else {\n                for (var i = 0; i < this.paletteSettings.palette.length; i++) {\n                    if (this.paletteSettings.palette[i].value !== null || '') {\n                        this.legendVisibilityByCellType = true;\n                    }\n                    else if (this.paletteSettings.palette[i].value === null || '') {\n                        this.legendVisibilityByCellType = false;\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.titleSettings.text) {\n            this.titleCollection = getTitle(this.titleSettings.text, this.titleSettings.textStyle, width);\n            titleHeight = (measureText(this.titleSettings.text, this.titleSettings.textStyle).height * this.titleCollection.length) +\n                padding;\n        }\n        var top = margin.top + titleHeight;\n        this.titleRect = new Rect(margin.left, margin.top, this.availableSize.width - margin.left - margin.right, titleHeight);\n        var height = this.availableSize.height - top - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        var legendTop = this.initialClipRect.y;\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect);\n        }\n        this.heatMapAxis.measureAxis(this.initialClipRect);\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendSize(this.initialClipRect, legendTop);\n        }\n        this.heatMapAxis.calculateAxisSize(this.initialClipRect);\n    };\n    HeatMap.prototype.refreshBound = function () {\n        this.updateBubbleHelperProperty();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    HeatMap.prototype.initAxis = function () {\n        var axis;\n        var axes = [this.xAxis, this.yAxis];\n        this.axisCollections = [];\n        for (var i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.orientation = (i === 0) ? 'Horizontal' : 'Vertical';\n            axis.jsonCellLabel = [];\n            this.axisCollections.push(axis);\n        }\n    };\n    /**\n     * Method to bind events for HeatMap\n     */\n    HeatMap.prototype.wireEvents = function () {\n        var _this = this;\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.add(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick, this);\n        EventHandler.add(this.element, start, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, stop, this.heatMapMouseLeave, this);\n        EventHandler.add(this.element, move, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, cancel, this.heatMapMouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize.bind(this));\n        var heatmap = this;\n        /**\n         * Support for touch tapHold and tap for HeatMap\n         */\n        var touchObj = new Touch(this.element, {\n            tapHold: function () {\n                heatmap.isCellTapHold = true;\n                heatmap.getDataCollection();\n                heatmap.currentRect.allowCollection = false;\n                heatmap.setCellOpacity();\n                var argData = {\n                    heatmap: (_this.isBlazor ? null : heatmap),\n                    cancel: false,\n                    name: 'cellSelected',\n                    data: heatmap.multiCellCollection\n                };\n                heatmap.trigger('cellSelected', argData);\n            },\n            tap: function () {\n                var isCellTap = false;\n                if (!heatmap.isCellTapHold) {\n                    isCellTap = true;\n                }\n                heatmap.tooltipOnMouseMove(null, heatmap.currentRect, isCellTap);\n            }\n        });\n        this.setStyle(this.element);\n    };\n    /**\n     * Applying styles for heatmap element\n     */\n    HeatMap.prototype.setStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    };\n    /**\n     * Method to unbind events for HeatMap\n     */\n    HeatMap.prototype.unWireEvents = function () {\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.remove(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick);\n        EventHandler.remove(this.element, start, this.heatMapMouseMove);\n        EventHandler.remove(this.element, move, this.heatMapMouseLeave);\n        EventHandler.remove(this.element, move, this.heatMapMouseMove);\n        EventHandler.remove(this.element, cancel, this.heatMapMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize);\n    };\n    /**\n     * Handles the heatmap resize.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapResize = function (e) {\n        var _this = this;\n        this.resizing = true;\n        var argData = {\n            heatmap: (this.isBlazor ? null : this),\n            cancel: false,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n        };\n        if (this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.resizeTimer = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTimer);\n                return;\n            }\n            _this.createSvg();\n            argData.currentSize = _this.availableSize;\n            _this.trigger('resized', argData);\n            _this.refreshBound();\n            _this.appendSvgObject();\n            if (_this.allowSelection) {\n                _this.updateCellSelection();\n            }\n            _this.trigger('loaded', (_this.isBlazor ? null : { heatmap: _this }));\n            _this.resizing = false;\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to bind selection after window resize for HeatMap\n     */\n    HeatMap.prototype.updateCellSelection = function () {\n        var wSize = this.initialClipRect.width / this.axisCollections[0].axisLabelSize;\n        var hSize = this.initialClipRect.height / this.axisCollections[1].axisLabelSize;\n        var x = this.initialClipRect.x;\n        var y = this.initialClipRect.y;\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                for (var i = 0; i < containersRect.childNodes.length; i++) {\n                    containersRect.childNodes[i].setAttribute('opacity', '0.3');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    }\n                }\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClass = this.multiCellCollection[i].cellElement;\n                    var cellIndex = collectionClass.id.replace(this.element.id + '_HeatMapRect_', '');\n                    var index = parseInt(cellIndex, 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                        this.addSvgClass(containersRect.childNodes[index]);\n                    }\n                }\n            }\n        }\n        else if (this.enableCanvasRendering) {\n            var rect = this.multiCellCollection;\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectHeight = initialRect.y + initialRect.height;\n            var rectWidth = initialRect.x + initialRect.width;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                this.multiCellCollection[i].width = rect[i].width = wSize;\n                this.multiCellCollection[i].height = rect[i].height = hSize;\n                this.multiCellCollection[i].x = rect[i].x = x + wSize * this.multiCellCollection[i].xPosition;\n                this.multiCellCollection[i].y = rect[i].y = y + hSize * this.multiCellCollection[i].yPosition;\n                var rectImage = oldCanvas.getContext('2d').getImageData(rect[i].x, rect[i].y, rect[i].width, rect[i].height);\n                newCanvas.getContext('2d').putImageData(rectImage, rect[i].x, rect[i].y);\n                oldCanvas.style.opacity = '0.3';\n            }\n            var topPositions = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPositions, 0, 0);\n            var bottomPositions = oldCanvas.getContext('2d').getImageData(0, rectHeight, this.availableSize.width, this.availableSize.height - rectHeight);\n            newCanvas.getContext('2d').putImageData(bottomPositions, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').\n                getImageData(rectWidth, 0, this.availableSize.width - rectWidth, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, rectWidth, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n            removeElement(this.element.id + '_selectedCells');\n        }\n    };\n    HeatMap.prototype.clearSVGSelection = function () {\n        var rect = document.getElementById(this.element.id + '_Container_RectGroup');\n        var text = document.getElementById(this.element.id + '_Container_TextGroup');\n        for (var i = 0; i < rect.childNodes.length; i++) {\n            var elementClassName = rect.childNodes[i].getAttribute('class');\n            if (elementClassName === this.element.id + '_selected') {\n                this.removeSvgClass(rect.childNodes[i], elementClassName);\n            }\n            rect.childNodes[i].setAttribute('opacity', '1');\n            if (this.cellSettings.showLabel && text.childNodes[i]) {\n                text.childNodes[i].setAttribute('opacity', '1');\n            }\n        }\n    };\n    /**\n     * Get the maximum length of data source for both horizontal and vertical\n     * @private\n     */\n    HeatMap.prototype.calculateMaxLength = function () {\n        var dataSource = this.completeAdaptDataSource;\n        if (dataSource && dataSource.length > 0) {\n            var xAxisMax = dataSource.length - 1;\n            var yAxisMax = 0;\n            for (var i = 0; i <= xAxisMax; i++) {\n                var length_1 = dataSource[i].length;\n                yAxisMax = yAxisMax > length_1 ? yAxisMax : length_1;\n            }\n            this.axisCollections[0].maxLength = xAxisMax;\n            this.axisCollections[1].maxLength = yAxisMax - 1;\n        }\n        else {\n            this.axisCollections[0].maxLength = 0;\n            this.axisCollections[1].maxLength = 0;\n        }\n    };\n    /**\n     * To find mouse x, y for aligned heatmap element svg position\n     */\n    HeatMap.prototype.setMouseXY = function (pageX, pageY) {\n        var rect = this.element.getBoundingClientRect();\n        var svgCanvasRect;\n        if (this.enableCanvasRendering) {\n            svgCanvasRect = document.getElementById(this.element.id + '_canvas').getBoundingClientRect();\n        }\n        else {\n            svgCanvasRect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n        }\n        this.mouseX = (pageX - rect.left) - Math.max(svgCanvasRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgCanvasRect.top - rect.top, 0);\n    };\n    HeatMap.prototype.heatMapMouseClick = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = false;\n            pageY = e.clientY;\n            pageX = e.clientX;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n        if (isheatmapRect) {\n            var currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n            this.trigger('cellClick', {\n                heatmap: (this.isBlazor ? null : this),\n                value: currentRect.value,\n                x: currentRect.x,\n                y: currentRect.y,\n                xLabel: this.heatMapSeries.hoverXAxisLabel,\n                yLabel: this.heatMapSeries.hoverYAxisLabel,\n                xValue: this.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMapSeries.hoverYAxisValue,\n                cellElement: this.enableCanvasRendering ? null : document.getElementById(currentRect.id)\n            });\n        }\n        this.notify('click', e);\n        if (this.paletteSettings.type !== 'Gradient' && this.legendModule\n            && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            var page = this.legendModule.navigationCollections;\n            if (page.length && pageX > page[0].x && pageX < page[0].x + page[0].width &&\n                pageY > page[0].y && pageY < page[0].y + page[0].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, true);\n            }\n            else if (page.length && pageX > page[1].x && pageX < page[1].x + page[1].width &&\n                pageY > page[1].y && pageY < page[1].y + page[1].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, false);\n            }\n            var legendRange = this.legendModule.legendRange;\n            var legendTextRange = this.legendModule.legendTextRange;\n            var loop = true;\n            for (var i = 0; i < legendRange.length; i++) {\n                if (this.legendModule && this.legendSettings.toggleVisibility &&\n                    this.legendModule.currentPage === legendRange[i].currentPage) {\n                    if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                        (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                        ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                            pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                            (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                        this.legendModule.legendRangeSelection(i);\n                        loop = false;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse Move.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseMove = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchmove' || e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = false;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        this.setMouseXY(pageX, pageY);\n        if (e.target && e.target.id) {\n            var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n            if (this.legendModule) {\n                if (isheatmapRect) {\n                    if (this.paletteSettings.type === 'Gradient' &&\n                        this.legendSettings.showGradientPointer && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                        this.legendModule.renderGradientPointer(e, pageX, pageY);\n                    }\n                }\n                else {\n                    this.legendModule.removeGradientPointer();\n                }\n                this.renderMousePointer(pageX, pageY);\n            }\n            var isshowTooltip = void 0;\n            var currentRect = void 0;\n            isshowTooltip = this.showTooltip && this.tooltipModule ? isheatmapRect : false;\n            if (isheatmapRect) {\n                currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n                if (e.which !== 2 && e.which !== 3) {\n                    isshowTooltip = this.cellSelectionOnMouseMove(e, currentRect, pageX, pageY, isshowTooltip);\n                }\n            }\n            this.tooltipOnMouseMove(e, currentRect, isshowTooltip, isheatmapRect);\n            if (this.legendModule && this.legendSettings.visible && this.paletteSettings.type === 'Fixed' &&\n                this.legendSettings.enableSmartLegend && this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltip(pageX, pageY);\n            }\n            if (!this.enableCanvasRendering) {\n                if (this.titleSettings.text && this.titleSettings.textStyle.textOverflow === 'Trim') {\n                    this.titleTooltip(e, pageX, pageY, this.isTouch);\n                }\n                this.axisTooltip(e, pageX, pageY, this.isTouch);\n                if (this.legendModule && this.legendSettings.visible && this.legendSettings.showLabel && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendLabelTooltip(e, pageX, pageY);\n                }\n                if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendTitleTooltip(e, pageX, pageY);\n                }\n            }\n            else {\n                elementRect = this.element.getBoundingClientRect();\n                var tooltipRect = (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                    this.legendSettings.labelDisplayType === 'None') ? false : true;\n                tooltipText = getTooltipText(this.tooltipCollection, pageX, pageY) ||\n                    (this.legendModule && tooltipRect && (getTooltipText(this.legendModule.legendLabelTooltip, pageX, pageY)\n                        || getTooltipText(this.legendModule.legendTitleTooltip, pageX, pageY)));\n                if (tooltipText) {\n                    showTooltip(tooltipText, pageX, pageY, this.element.offsetWidth, this.element.id + '_canvas_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n                }\n                else {\n                    removeElement(this.element.id + '_canvas_Tooltip');\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Triggering cell selection\n     */\n    HeatMap.prototype.cellSelectionOnMouseMove = function (e, currentRect, pageX, pageY, isshowTooltip) {\n        if ((this.cellSettings.tileType === 'Rect' && e.type === 'mousedown' || e.type === 'touchstart'\n            || e.type === 'pointerdown') && this.allowSelection) {\n            this.previousRect = currentRect;\n            this.multiSelection = true;\n            this.rectSelected = true;\n            this.initialCellX = pageX;\n            this.initialCellY = pageY;\n            e.preventDefault();\n        }\n        if (this.cellSettings.tileType === 'Rect' && this.multiSelection && currentRect) {\n            isshowTooltip = false;\n            this.highlightSelectedCells(this.previousRect, currentRect, pageX, pageY, e);\n        }\n        return isshowTooltip;\n    };\n    /**\n     * Rendering tooltip on mouse move\n     */\n    HeatMap.prototype.tooltipOnMouseMove = function (e, currentRect, isshowTooltip, isheatmapRect) {\n        var _this = this;\n        if (isshowTooltip && currentRect) {\n            if (this.tempTooltipRectId !== currentRect.id) {\n                if (this.showTooltip) {\n                    if ((this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n                        && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(currentRect.id);\n                    }\n                    this.tooltipModule.renderTooltip(currentRect);\n                    if (this.isTouch) {\n                        if (this.tooltipTimer) {\n                            window.clearTimeout(this.tooltipTimer);\n                        }\n                        this.tooltipTimer = setTimeout(function () {\n                            _this.tooltipModule.tooltipObject.fadeOut();\n                            _this.tooltipModule.isFadeout = true;\n                        }, 1500);\n                        if (e) {\n                            if (e.type === 'touchmove') {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }\n                this.tempTooltipRectId = currentRect.id;\n            }\n        }\n        else {\n            if (e !== null) {\n                if (!isheatmapRect) {\n                    if ((this.cellSettings.enableCellHighlighting || this.showTooltip) && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(e.target.id);\n                    }\n                    if (this.tooltipModule && this.showTooltip) {\n                        this.tooltipModule.showHideTooltip(false, true);\n                    }\n                }\n            }\n            this.tempTooltipRectId = '';\n        }\n    };\n    /**\n     * To select the multiple cells on mouse move action\n     */\n    HeatMap.prototype.highlightSelectedCells = function (previousRect, currentRect, pageX, pageY, e) {\n        var pXIndex = previousRect.xIndex;\n        var pYIndex = previousRect.yIndex;\n        var cXIndex = currentRect.xIndex;\n        var cYIndex = currentRect.yIndex;\n        this.currentRect = currentRect;\n        this.selectedCellsRect = new Rect(0, 0, 0, 0);\n        this.selectedCellsRect.x = previousRect.x > currentRect.x ? currentRect.x : previousRect.x;\n        this.selectedCellsRect.y = previousRect.y > currentRect.y ? currentRect.y : previousRect.y;\n        this.selectedCellsRect.width = ((previousRect.x > currentRect.x ? (pXIndex - cXIndex) :\n            (cXIndex - pXIndex)) + 1) * currentRect.width;\n        this.selectedCellsRect.height = ((previousRect.y > currentRect.y ? (pYIndex - cYIndex) :\n            (cYIndex - pYIndex)) + 1) * currentRect.height;\n        if (e.type === 'touchstart') {\n            this.isCellTapHold = true;\n        }\n        else {\n            this.isCellTapHold = false;\n        }\n        e.preventDefault();\n        if (e.ctrlKey === false && e.type !== 'touchstart' && e.type !== 'touchmove') {\n            this.removeSelectedCellsBorder();\n        }\n        var x = this.initialCellX > pageX ? pageX : this.initialCellX;\n        var y = this.initialCellY > pageY ? pageY : this.initialCellY;\n        var parentDiv = document.getElementById(this.element.id + '_CellSelection_Container');\n        var svgObject = this.renderer.createSvg({\n            id: this.element.id + '_CellSelection_Container_svg',\n            width: this.initialClipRect.width,\n            height: this.initialClipRect.height,\n        });\n        parentDiv.appendChild(svgObject);\n        var parent = document.getElementById(this.element.id + '_CellSelection_Container_svg');\n        var rect = new Rect(x - this.initialClipRect.x, y - this.initialClipRect.y, Math.abs(pageX - this.initialCellX), Math.abs(pageY - this.initialCellY));\n        var rectItems = new RectOption(this.element.id + '_selectedCells', '#87ceeb', { color: 'transparent', width: 1 }, 1, rect, '#0000ff');\n        parent.appendChild(this.renderer.drawRectangle(rectItems));\n        document.getElementById(this.element.id + '_selectedCells').style.opacity = '0.5';\n    };\n    /**\n     * Method to get selected cell data collection for HeatMap\n     */\n    HeatMap.prototype.getDataCollection = function () {\n        var pXIndex = this.previousRect.xIndex;\n        var pYIndex = this.previousRect.yIndex;\n        var cXIndex = this.currentRect.xIndex;\n        var cYIndex = this.currentRect.yIndex;\n        var minX = cXIndex > pXIndex ? pXIndex : cXIndex;\n        var maxX = cXIndex > pXIndex ? cXIndex : pXIndex;\n        var minY = cYIndex > pYIndex ? pYIndex : cYIndex;\n        var maxY = cYIndex > pYIndex ? cYIndex : pYIndex;\n        var tempX = minX;\n        var tempY = minY;\n        var cellX = this.previousRect.x;\n        var cellY = this.previousRect.y;\n        this.getCellCollection(this.currentRect, this.previousRect, true, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        tempX = minX;\n        tempY = minY;\n        cellX = this.previousRect.x;\n        cellY = this.previousRect.y;\n        this.checkSelectedCells();\n        this.getCellCollection(this.currentRect, this.previousRect, false, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        this.selectedMultiCellCollection = [];\n        this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n        this.selectedCellCount = 0;\n    };\n    /**\n     * To get the selected datas.\n     */\n    HeatMap.prototype.getCellCollection = function (currentRect, previousRect, singleCellData, tempX, tempY, maxX, maxY, minX, cellX, cellY) {\n        var xIndex = Math.abs((currentRect.xIndex === previousRect.xIndex ?\n            0 : currentRect.xIndex - previousRect.xIndex)) + 1;\n        var yIndex = Math.abs((currentRect.yIndex === previousRect.yIndex ?\n            0 : currentRect.yIndex - previousRect.yIndex)) + 1;\n        for (var i = 0; i < (xIndex * yIndex); i++) {\n            if (singleCellData) {\n                this.getSelectedCellData(cellX, cellY, true);\n            }\n            else {\n                this.getSelectedCellData(cellX, cellY, false);\n            }\n            if (tempX < maxX) {\n                cellX += currentRect.xIndex > previousRect.xIndex ? currentRect.width : -currentRect.width;\n                tempX++;\n            }\n            else if (tempY < maxY) {\n                cellY += currentRect.yIndex > previousRect.yIndex ? currentRect.height : -currentRect.height;\n                cellX = previousRect.x;\n                tempX = minX;\n            }\n        }\n    };\n    /**\n     * To remove the selection on mouse click without ctrl key.\n     */\n    HeatMap.prototype.removeSelectedCellsBorder = function () {\n        if (!this.enableCanvasRendering) {\n            var containerRect = document.getElementById(this.element.id + '_Container_RectGroup');\n            var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n            for (var i = 0; i < containerRect.childNodes.length; i++) {\n                var elementClassName = containerRect.childNodes[i].getAttribute('class');\n                containerRect.childNodes[i].setAttribute('opacity', '0.3');\n                if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                    containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    this.removeSvgClass(containerRect.childNodes[i], elementClassName);\n                }\n            }\n        }\n        else {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                var rect = this.previousSelectedCellsRect[i];\n                ctx.save();\n                ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n        }\n        this.multiCellCollection = [];\n    };\n    /**\n     * To highlight the selected multiple cells on mouse move action in canvas mode.\n     */\n    HeatMap.prototype.highlightSelectedAreaInCanvas = function (rect) {\n        if (rect.x) {\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectImage = oldCanvas.getContext('2d').getImageData(rect.x, rect.y, rect.width, rect.height);\n            newCanvas.getContext('2d').putImageData(rectImage, rect.x, rect.y);\n            oldCanvas.style.opacity = '0.3';\n            var topPosition = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPosition, 0, 0);\n            var bottomPosition = oldCanvas.getContext('2d').getImageData(0, initialRect.y + initialRect.height, this.availableSize.width, this.availableSize.height - (initialRect.y + initialRect.height));\n            newCanvas.getContext('2d').putImageData(bottomPosition, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').getImageData(initialRect.x + initialRect.width, 0, this.availableSize.width - (initialRect.x + initialRect.width), this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, initialRect.x + initialRect.width, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n        }\n    };\n    /**\n     * To get the collection of selected cells.\n     */\n    HeatMap.prototype.getSelectedCellData = function (cellX, cellY, cellCollection) {\n        var xAxis = this.axisCollections[0];\n        var yAxis = this.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var rectPosition = this.heatMapSeries.getCurrentRect(cellX + 1, cellY + 1);\n        var currentRect = document.getElementById(rectPosition.id);\n        var cellDetails = new SelectedCellDetails(null, '', '', 0, 0, null, 0, 0, 0, 0, 0, 0);\n        cellDetails.value = rectPosition.value;\n        cellDetails.xLabel = xLabels[rectPosition.xIndex].toString();\n        cellDetails.yLabel = yLabels[rectPosition.yIndex].toString();\n        cellDetails.xValue = xAxis.labelValue[rectPosition.xIndex];\n        cellDetails.yValue = yAxis.labelValue.slice().reverse()[rectPosition.yIndex];\n        cellDetails.cellElement = this.enableCanvasRendering ? null : currentRect;\n        cellDetails.xPosition = rectPosition.xIndex;\n        cellDetails.yPosition = rectPosition.yIndex;\n        cellDetails.width = this.currentRect.width;\n        cellDetails.height = this.currentRect.height;\n        cellDetails.x = this.currentRect.x;\n        cellDetails.y = this.currentRect.y;\n        this.currentRect.allowCollection = true;\n        this.addSvgClass(currentRect);\n        if (cellCollection) {\n            this.selectedMultiCellCollection.push(cellDetails);\n            this.currentRect.allowCollection = false;\n        }\n        else {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                if (this.multiCellCollection[i].xPosition === cellDetails.xPosition &&\n                    this.multiCellCollection[i].yPosition === cellDetails.yPosition) {\n                    this.currentRect.allowCollection = false;\n                    if (this.selectedCellCount === this.selectedMultiCellCollection.length) {\n                        this.currentRect.allowCollection = false;\n                        if (!this.enableCanvasRendering) {\n                            for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                                var rectElement = this.selectedMultiCellCollection[j].cellElement;\n                                if (rectElement) {\n                                    var index = rectElement.id.replace(this.element.id + '_HeatMapRect_', '');\n                                    var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                                    var elementClassName = rectElement.getAttribute('class');\n                                    rectElement.setAttribute('opacity', '0.3');\n                                    var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                                    if (getText) {\n                                        getText.setAttribute('opacity', '0.3');\n                                    }\n                                    this.removeSvgClass(rectElement, elementClassName);\n                                }\n                            }\n                        }\n                        else {\n                            var ctx = this.secondaryCanvasRenderer.ctx;\n                            var rect = this.canvasSelectedCells;\n                            ctx.save();\n                            ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                            ctx.restore();\n                            this.selectedCellsRect = new Rect(0, 0, 0, 0);\n                        }\n                        this.multiCellCollection.splice(i, 1);\n                    }\n                }\n            }\n        }\n        if (rectPosition.visible && !isNullOrUndefined(rectPosition.value) && this.currentRect.allowCollection === true) {\n            this.multiCellCollection.push(cellDetails);\n        }\n    };\n    /**\n     * To add class for selected cells\n     * @private\n     */\n    HeatMap.prototype.addSvgClass = function (element) {\n        if (!this.enableCanvasRendering) {\n            var className = this.element.id + '_selected';\n            element.setAttribute('class', className);\n        }\n    };\n    /**\n     * To remove class for unselected cells\n     * @private\n     */\n    HeatMap.prototype.removeSvgClass = function (rectElement, className) {\n        if (className) {\n            rectElement.setAttribute('class', className.replace(className, ''));\n        }\n    };\n    /**\n     * To clear the multi cell selection\n     */\n    HeatMap.prototype.clearSelection = function () {\n        if (!this.enableCanvasRendering && this.allowSelection) {\n            this.clearSVGSelection();\n        }\n        if (this.enableCanvasRendering) {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                ctx.save();\n                ctx.clearRect(this.previousSelectedCellsRect[i].x - 1, this.previousSelectedCellsRect[i].y - 1, this.previousSelectedCellsRect[i].width + 2, this.previousSelectedCellsRect[i].height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n            var canvas = document.getElementById(this.element.id + '_canvas');\n            canvas.style.opacity = '1';\n        }\n        this.tempMultiCellCollection = [];\n        this.multiCellCollection = [];\n        this.rectSelected = false;\n    };\n    HeatMap.prototype.renderMousePointer = function (pageX, pageY) {\n        var legendRange = this.legendModule.legendRange;\n        var legendTextRange = this.legendModule.legendTextRange;\n        var loop = true;\n        for (var i = 0; i < legendRange.length; i++) {\n            if (this.legendSettings.toggleVisibility && this.legendModule.currentPage === legendRange[i].currentPage) {\n                if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                    (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                    ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                        pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                        (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = 'Pointer';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = 'Pointer';\n                    }\n                    loop = false;\n                }\n                else if (loop) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = '';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseLeave = function (e) {\n        var _this = this;\n        if (e.target && e.target.id &&\n            (this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n            && !this.enableCanvasRendering) {\n            this.heatMapSeries.highlightSvgRect(this.tempTooltipRectId);\n        }\n        if (this.allowSelection && this.multiSelection) {\n            this.multiSelection = false;\n            if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'pointerup') {\n                if (e.which !== 2 && e.which !== 3) {\n                    if (this.isCellTapHold === false) {\n                        this.getDataCollection();\n                        this.currentRect.allowCollection = false;\n                        this.setCellOpacity();\n                        var argData = {\n                            heatmap: (this.isBlazor ? null : this),\n                            cancel: false,\n                            name: 'cellSelected',\n                            data: this.multiCellCollection\n                        };\n                        this.trigger('cellSelected', argData);\n                    }\n                    else {\n                        this.isCellTapHold = false;\n                    }\n                }\n            }\n            else if (e.type === 'mouseleave' && (this.element.id + '_selectedCells')) {\n                removeElement(this.element.id + '_selectedCells');\n            }\n        }\n        if (this.tooltipModule && this.showTooltip && e.type === 'mouseleave') {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.tempTooltipRectId = '';\n        if (this.legendModule && this.legendSettings.visible && this.legendModule.tooltipObject &&\n            this.legendModule.tooltipObject.element) {\n            var tooltipElement_1 = this.legendModule.tooltipObject.element.firstChild;\n            if (e.type === 'mouseleave') {\n                tooltipElement_1.setAttribute('opacity', '0');\n            }\n            else {\n                if (this.legendTooltipTimer) {\n                    window.clearTimeout(this.legendTooltipTimer);\n                }\n                this.legendTooltipTimer = setTimeout(function () {\n                    tooltipElement_1.setAttribute('opacity', '0');\n                }, 1500);\n            }\n        }\n        if (this.paletteSettings.type === 'Gradient' && this.legendModule && this.legendSettings.showGradientPointer &&\n            this.legendSettings.visible && this.legendVisibilityByCellType) {\n            if (e.type === 'mouseleave') {\n                this.legendModule.removeGradientPointer();\n            }\n            else {\n                if (this.gradientTimer) {\n                    window.clearTimeout(this.gradientTimer);\n                }\n                this.gradientTimer = setTimeout(function () { _this.legendModule.removeGradientPointer(); }, 1500);\n            }\n        }\n        if (this.enableCanvasRendering) {\n            var main = document.getElementById(this.element.id + '_hoverRect_canvas');\n            if (main) {\n                main.style.visibility = 'hidden';\n                this.tempRectHoverClass = '';\n            }\n        }\n        if (this.titleSettings.text && this.titleCollection[0].indexOf('...') !== -1) {\n            if (!this.enableCanvasRendering) {\n                removeElement(this.element.id + '_Title_Tooltip');\n            }\n            else {\n                removeElement(this.element.id + '_canvas_Tooltip');\n            }\n        }\n        return true;\n    };\n    /**\n     * Method to Check for deselection of cell.\n     */\n    HeatMap.prototype.checkSelectedCells = function () {\n        if (!this.enableCanvasRendering) {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].cellElement.getAttribute('id')\n                        === this.multiCellCollection[i].cellElement.getAttribute('id')) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n        else {\n            this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n            this.canvasSelectedCells.x = this.selectedCellsRect.x;\n            this.canvasSelectedCells.y = this.selectedCellsRect.y;\n            this.canvasSelectedCells.width = this.selectedCellsRect.width;\n            this.canvasSelectedCells.height = this.selectedCellsRect.height;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].xPosition === this.multiCellCollection[i].xPosition &&\n                        this.selectedMultiCellCollection[j].yPosition === this.multiCellCollection[i].yPosition) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n            if (this.rectSelected && this.paletteSettings.type === 'Gradient') {\n                this.legendModule.removeGradientPointer();\n            }\n        }\n    };\n    /**\n     * Method to remove opacity for text of selected cell for HeatMap\n     */\n    HeatMap.prototype.removeOpacity = function (containersRect, containerText) {\n        for (var i = 0; i < containersRect.childNodes.length; i++) {\n            containersRect.childNodes[i].setAttribute('opacity', '0.3');\n            if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                containerText.childNodes[i].setAttribute('opacity', '0.3');\n            }\n        }\n    };\n    /**\n     * Method to set opacity for selected cell for HeatMap\n     */\n    HeatMap.prototype.setCellOpacity = function () {\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                this.tempMultiCellCollection.push(this.multiCellCollection);\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                this.removeOpacity(containersRect, containerText);\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClasss = this.multiCellCollection[i].cellElement;\n                    var index = parseInt(collectionClasss.id.replace(this.element.id + '_HeatMapRect_', ''), 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.previousSelectedCellsRect.push(this.selectedCellsRect);\n            this.highlightSelectedAreaInCanvas(this.selectedCellsRect);\n        }\n        removeElement(this.element.id + '_selectedCells');\n    };\n    /**\n     * To create div container for rendering two layers of canvas.\n     * @return {void}\n     * @private\n     */\n    HeatMap.prototype.createMultiCellDiv = function (onLoad) {\n        if (onLoad) {\n            var divElement = this.createElement('div', {\n                id: this.element.id + '_Multi_CellSelection_Canvas',\n                styles: 'position:relative'\n            });\n            this.element.appendChild(divElement);\n            divElement.appendChild(this.svgObject);\n            this.svgObject.style.position = 'absolute';\n            this.svgObject.style.left = '0px';\n            this.svgObject.style.top = '0px';\n            this.svgObject.style.zIndex = '0';\n        }\n        else {\n            var element = document.getElementById(this.element.id + '_Multi_CellSelection_Canvas');\n            var secondaryCanvas = this.secondaryCanvasRenderer.createCanvas({\n                width: this.availableSize.width,\n                height: this.availableSize.height, x: 0, y: 0,\n                style: 'position: absolute; z-index: 1'\n            });\n            element.appendChild(secondaryCanvas);\n        }\n    };\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], HeatMap.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Property('SVG')\n    ], HeatMap.prototype, \"renderingMode\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Complex({}, Data)\n    ], HeatMap.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Material')\n    ], HeatMap.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], HeatMap.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], HeatMap.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.heatMapTitleFont }, Title)\n    ], HeatMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"xAxis\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], HeatMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, PaletteSettings)\n    ], HeatMap.prototype, \"paletteSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], HeatMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"yAxis\", void 0);\n    __decorate([\n        Complex({}, CellSettings)\n    ], HeatMap.prototype, \"cellSettings\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"legendRender\", void 0);\n    HeatMap = __decorate([\n        NotifyPropertyChanges\n    ], HeatMap);\n    return HeatMap;\n}(Component));\nexport { HeatMap };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","innerText","style","position","visibility","fontSize","size","fontWeight","fontStyle","fontFamily","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","titlePositionX","width","leftPadding","rightPadding","titleStyle","textAlignment","sum","values","_i","values_1","length","titlePositionY","heatmapSize","topPadding","bottomPadding","height","rotateTextSize","angle","box","options","renderer","SvgRenderer","svgObject","createSvg","font-size","font-style","toLowerCase","font-family","font-weight","transform","text-anchor","createText","getBoundingClientRect","remove","right","bottom","getTitle","title","titleCollection","textOverflow","textWrap","push","textTrim","textNone","currentLabel","maximumWidth","textCollection","split","label","labelCollection","i","len","concat","maxWidth","index","substring","showTooltip","x","y","areaWidth","element","isTouch","heatmap","tooltip","initialClipRect","toString","styles","titleSettings","availableSize","setTimeout","removeElement","getElement","increaseDateTimeInterval","interval","intervalType","increment","result","Date","Math","ceil","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","getTooltipText","tooltipCollection","xPosition","yPosition","region","colorNameToHex","color","window","getComputedStyle","isRGBValue","exec","convertToHexCode","RgbColor","componentToHex","R","G","B","hex","convertHexToColor","formatValue","isCustom","format","tempInterval","formatFun","replace","Theme","heatMapTitleFont","titleFont","axisTitleFont","axisLabelFont","legendLabelFont","rectLabelFont","tooltipFont","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Font","_super","apply","Property","ChildProperty","Margin","Border","TooltipBorder","BubbleData","Title","Complex","FillColor","PaletteCollection","AxisLabelBorder","BubbleSize","MultiLevelCategories","MultiLevelLabels","type","Collection","ColorCollection","startValue","endValue","minColor","maxColor","BubbleTooltipData","mappingName","bubbleData","valueType","LegendColorCollection","isHidden","PaletteSettings","g","CellColor","heatMap","convertToRGB","colorMapping","previousColor","nextColor","previousOffset","isColorRange","nextOffset","paletteSettings","offset","Number","colorCollection","dataSourceMinValue","fillColor","dataSourceMaxValue","getEqualColor","percent","isNaN","getPercentageColor","rgbToHex","list","convertToHex","itemColor","substr","colorSplit","previous","next","prevColor","getPercentage","full","round","getColorCollection","legendColorCollection","range","j","palette","minValue","bubbleSizeWithColor","minColorValue","maxValue","maxColorValue","emptyPointColor","themeStyle","emptyCellColor","tempcolorMapping","orderbyOffset","isCompact","offsets","extend","updateLegendColorCollection","isLabel","unshift","returnCollection","PaletterColor","sort","a","isNullOrUndefined","getColorByValue","rbg","compareValue","cellSettings","tileType","bubbleType","singleValue","legendRange","legendVisibilityByCellType","legendModule","visible","toggledColor","colorGradientMode","TextElement","fontModel","fontColor","fill","CustomizeOption","PathOption","opacity","dashArray","_this","call","stroke","parseFloat","CurrentRect","xIndex","yIndex","xValue","yValue","displayText","textId","allowCollection","SelectedCellDetails","xLabel","yLabel","cellElement","RectOption","border","rect","borderColor","rx","ry","CircleOption","cx","cy","Rect","TextOption","basic","labelRotation","baseline","dy","TextBasic","anchor","baseLine","Line","x1","y1","x2","y2","LineOption","line","strokewidth","dasharray","PathAttributes","path","borderWidth","Path","innerR","start","end","radius","counterClockWise","DrawSvgCanvas","drawRectangle","properties","parentElement","isFromSeries","enableCanvasRendering","drawCanvasRectangle","canvasRenderer","drawCircle","drawCanvasCircle","drawPath","drawCanvasPath","canvasDrawText","createWrapText","tspanElement","renderOptions","dominant-baseline","createTSpan","drawLine","translateX","translateY","ctx","getOptionValue","save","fillStyle","textAlign","textBaseline","translate","rotate","PI","fillText","restore","setAttributes","canvas","lineWidth","dashArrayString","setLineDash","strokeStyle","canvasCtx","beginPath","globalAlpha","drawCornerRadius","cornerRadius","moveTo","arcTo","closePath","arc","dataSplit","lineTo","Gradient","GradientColor","colorStop","CanvasTooltip","GradientPointer","pathX1","pathY1","pathX2","pathY2","pathX3","pathY3","CurrentLegendRect","LegendRange","currentPage","ToggleVisibility","MultiLevelPosition","Axis","nearSizes","farSizes","maxLabelSize","titleSize","axisLabels","tooltipLabels","labelValue","axisLabelSize","axisLabelInterval","dateTimeAxisLabelInterval","maxLength","min","max","isIntersect","jsonCellLabel","multiLevelSize","xAxisMultiLabelHeight","yAxisMultiLabelHeight","multiLevelPosition","computeSize","axis","getTitleSize","getMaxLabelSize","getMultilevelLabelsHeight","multiLevelLabels","multiLevelLabelSize","multiPosition","innerPadding","orientation","level0","level1","isInversed","opposedPosition","labelSize","multiLevel","categoryLabel","categories","size_1","textStyle","gap","startPosition","endPosition","multiLevelLabelsHeight","isVertical","padding","map","heatMapAxis","calculateLeftPosition","calculateWidth","maximumTextWidth","abs","overflow","labels","labelIntersectAction","showLabelOn","startX","previousEnd","previousStart","elementSize","axisInterval","startPoint","endPoint","calculateNumericAxisLabels","adaptorMin","adaptorMax","adaptorModule","isCellData","adaptiveXMinMax","adaptiveYMinMax","minimum","maximum","temp","labelFormat","match","intl","getNumberFormat","floor","reverse","calculateCategoryAxisLabels","calculateDateTimeAxisLabel","option","skeleton","dateParser","getDateParser","dateFormatter","getDateFormat","parse","DataUtil","parseJson","val","getTime","getSkeleton","calculateLabelInterval","getTotalLabelLength","numberOfDays","year","month","day","minutes","difference","days","years","months","hours","clearAxisLabel","AxisHelper","drawSvgCanvas","renderAxes","axisElement","createGroup","axes","axisCollections","drawXAxisLine","drawXAxisTitle","drawXAxisLabels","drawYAxisLine","drawYAxisTitle","drawYAxisLabels","drawMultiLevels","parent","titlepadding","axisTitle","calculateVisibleLabels","axisCollection","data","dataSourceSettings","processLabels","isJsonData","adaptorType","measureAxis","calculateAxisSize","axis_1","i_1","compactInterval","tempintervel","labelPadding","lableStrtX","labelElement","borderElement","lableRect","drawXAxisBorder","rotateSize","diffHeight","axisLabel","labelInterval","lableStartY","labelRect","Browser","isIE","drawYAxisBorder","lableX","endX","endY","startY","createAxisBorderElement","lableY","labelBorder","pathOptions","canvasTranslate","renderXAxisMultiLevelLabels","renderYAxisMultiLevelLabels","textLength","pathRect","level","alignment","textBasic","i_2","renderXAxisLabelBorder","createBorderElement","labelIndex","renderYAxisLabelBorder","borderIndex","calculateNumberOfDays","date","firstDate","secondDate","givenDate","CellSettings","Series","cellColor","renderRectSeries","createSeriesGroup","isValueInRange","xLength","yLength","tempBorder","circleRadius","tempX","tempY","dataXIndex","dataYIndex","cellSetting","tempWidth","tempHeight","tempVal","tempRectPosition","rectPositionCollection","bubbleColorValue","yAxis","getBubbleRadius","dataMin","dataMax","setTextAndColor","rectPosition","updateRectDetails","showLabel","getFormatedText","cellRender","cellRendering","renderingMode","renderTileCell","updateLabelVisibleStatus","renderBubbleCell","renderSectorCell","checkLabelXDisplay","checkLabelYDisplay","tempCircleRadius","getRadiusBypercentage","rangeSelection","isCellValueInRange","themeCellTextStyle","getSaturatedColor","containerTextObject","containerRectObject","toggleValue","clonedDataSource","bubbleText","xAxis","xLabels","yLabels","slice","yLabelValue","argData","isBlazor","cancel","name","trigger","adaptData","isColorValueExist","tempBubbleCollection","bubbleDataMapping","cellBorder","bubblePosition","curve","startAngle","endAngle","cX","cY","X1","Y1","tempcX","tempcY","pathBorderWidth","centerX","centerY","tempColor","sectorContibution","cos","sin","sector","calculateShapes","pathString","merge","circle","bubbleSize","valueInPrecentage","isInversedBubbleSize","saturatedColor","rgbValue","backgroundColor","highlightSvgRect","tempID","tempIndex","tempRectHoverClass","enableCellHighlighting","oldElement","rectSelected","setAttribute","getFormat","getCurrentRect","currentRect","firstRectDetails","heatMapSeries","rectX","rectY","hoverXAxisLabel","hoverXAxisValue","hoverYAxisLabel","hoverYAxisValue","TooltipSettings","Tooltip","isFirst","isFadeout","getModuleName","showHideTooltip","isShow","ele","tooltipObject","fadeOut","firstChild","destroy","createTooltip","tempTooltipText","tool","enableAnimation","location","theme","content","tooltipSettings","template","areaBounds","createTooltipDiv","allowSelection","element2","getTooltipContent","hetmapSeries","value1","value2","renderTooltip","tooltipRender","tooltipCallback","observedArgs","TwoDimensional","processDataSource","dataSource","tempCloneData","completeDataSource","minVal","maxVal","tempVariable","dataLength","labelLength","cloneDataIndex","minMaxDatasource","tempSizeArray","tempColorArray","z","processDataArray","minMaxVal","getMinMaxValue","internalArray","tempx","minMaxValue","getMinValue","getMaxValue","performSort","filter","checkmin","LegendSettings","Legend","maxLegendLabelSize","gradientScaleSize","segmentCollections","segmentCollectionsLabels","textWrapCollections","labelCollections","legendSize","previousOptions","listPerPage","numberOfPages","listWidth","fillRect","legendRect","lastList","navigationCollections","pagingRect","listInterval","legendLabelTooltip","legendTitleTooltip","labelXCollections","labelYCollections","legendXCollections","legendYCollections","legendRectPositionCollection","legendTextRange","visibilityCollections","renderLegendItems","legend","rectItems","legendGroup","legendBound","legendRectScale","rectItemsSvg","legendSettings","enableSmartLegend","resizing","legendOnLoad","rendering","clip","grd","ctx_1","horizontalGradient","createLinearGradient","legendMinValue","legendMaxValue","calculateCanvasColorRange","addColorStop","gradientOptions","gradientColor","cgradientColors","calculateColorRange","gradientPercentage","linearGradient","drawGradient","rectItem","renderElements","renderSmartLegend","renderTitle","renderLegendLabel","legendScale","listRect","translategroup","calculateListPerPage","paginggroup","renderListLegendMode","renderColorAxisGrid","gradientColor1","gradientColor2","gradientColor3","heatMapTitle","smartLegendRect","legendX","legendY","legendWidth","legendHeight","labelDisplayType","colorRangeLegendPosition","labelX","k","labelPosition","dominantBaseline","legendLabel","textWrapWidth","labelY","legendRectPadding","textPosition","lastChild","clippath","createClipPath","clipRect","renderGradientPointer","e","pageX","pageY","direction","legendPath","cellValue","removeGradientPointer","gradientPointer","keys","background","calculateLegendBounds","legendEventArg","legendRender","calculateTitleBounds","calculateListLegendBounds","listHeight","perListWidth","numberOfRows","calculateLegendSize","legendTop","axisTitlePadding","axisHeight","margin","axisWidth","calculateGradientScale","measureListLegendBound","maxHeight","renderPagingElements","rightArrowX","rightArrowY","textSize","textX","pagingTextRect","rightArrowRect","iconSize","rightArrow","leftX","leftArrow","leftArrowRect","leftOption","rightOption","arrow","rightarrow","scale","titleHeight","calculateColorAxisGrid","legendPart","maxTextWrapLength","previousSegmentWidth","nextSegmentWidth","legendElement","renderLegendTitleTooltip","textContent","offsetWidth","renderLegendLabelTooltip","targetId","division","legendEventArgs","rectPosition_1","listColor","translatePage","page","isNext","removeChild","childNodes","secondaryCanvasRenderer","initialRect","rectWidth","rectHeight","clearRect","oldCanvas","newCanvas","rectImage","getContext","getImageData","putImageData","currentLegendRect","inverted","legendRangeSelection","legendPadding","ctx_2","clearSelection","updateLegendRangeCollections","Data","AdaptiveMinMax","Adaptor","reconstructedXAxis","reconstructedYAxis","constructDatasource","completeAdaptDataSource","processJsonTableData","processJsonCellData","constructAdaptiveAxis","processCellData","getNumericAxisCollection","getDateAxisCollection","loopIndex","tempAxisColl","adapData","dataIndex","xDataIndex","yDataIndex","tempDataCollection","currentDataXIndex","currentDataYIndex","reconstructData","xindex","adaptordata","xAxisLabels","yAxisLabels","generateAxisLabels","getSplitDataValue","xDataMapping","yDataMapping","valueMapping","hasXLabels","hasYLabels","hasLabels","dataMapping","tempSplitDataCollection","tempSplitData","splitIndex","HeatMap","isCellTapHold","selectedCellCount","multiSelection","previousSelectedCellsRect","multiCellCollection","selectedMultiCellCollection","tempMultiCellCollection","preRender","initPrivateVariable","unWireEvents","wireEvents","CanvasRenderer","twoDimensional","tempTooltipRectId","setCulture","Internationalization","render","updateBubbleHelperProperty","initAxis","processInitData","setTheme","calculateMaxLength","calculateBounds","appendSvgObject","tooltipModule","renderComplete","reRenderDatasource","setRenderMode","renderSecondaryElement","renderBorder","getPersistData","onPropertyChanged","newProp","oldProp","refreshBounds","isUpdateSelection","_a","paletteCellSelectionUpdation","refresh","refreshBound","updateCellSelection","removeSvg","calculateSize","createCanvas","createMultiCellDiv","tooltipDiv","divElement","requiredModules","modules","member","args","innerHTML","classList","add","offsetHeight","titleTooltip","event","axisTooltip","tooltipText","isHeatmapRect","lastRectDetails","cellTextColor","getThemeColor","titleRect","isIE11Pointer","isPointer","touchStartEvent","stop","touchEndEvent","move","touchMoveEvent","EventHandler","isDevice","heatMapMouseClick","heatMapMouseMove","heatMapMouseLeave","addEventListener","heatMapResize","bind","Touch","tapHold","getDataCollection","setCellOpacity","tap","isCellTap","tooltipOnMouseMove","setStyle","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","display","removeEventListener","currentSize","previousSize","resizeTimer","clearTimeout","isDestroyed","wSize","hSize","topPositions","bottomPositions","rightPosition","leftPosition","containersRect","containerText","cellIndex","getText","addSvgClass","clearSVGSelection","elementClassName","getAttribute","removeSvgClass","xAxisMax","yAxisMax","length_1","setMouseXY","svgCanvasRect","mouseX","mouseY","touchArg","elementRect","changedTouches","clientY","clientX","notify","loop","toggleVisibility","isheatmapRect","showGradientPointer","renderMousePointer","isshowTooltip","which","cellSelectionOnMouseMove","tooltipRect","previousRect","initialCellX","initialCellY","preventDefault","highlightSelectedCells","tooltipTimer","pXIndex","pYIndex","cXIndex","cYIndex","selectedCellsRect","ctrlKey","removeSelectedCellsBorder","parentDiv","minX","maxX","minY","maxY","cellX","cellY","getCellCollection","checkSelectedCells","canvasSelectedCells","singleCellData","getSelectedCellData","rects","containerRect","highlightSelectedAreaInCanvas","topPosition","bottomPosition","cellCollection","cellDetails","rectElement","splice","className","cursor","tooltipElement_1","legendTooltipTimer","gradientTimer","main","removeOpacity","collectionClasss","onLoad","zIndex","secondaryCanvas","Event","NotifyPropertyChanges","Component"],"mappings":"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"}