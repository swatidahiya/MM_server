{"version":3,"file":"ej2-heatmap.min.js","sources":["../../src/heatmap/model/theme.js","../../src/heatmap/utils/helper.js","../../src/heatmap/model/base.js","../../src/heatmap/utils/colorMapping.js","../../src/heatmap/axis/axis.js","../../src/heatmap/axis/axis-helpers.js","../../src/heatmap/series/series.js","../../src/heatmap/utils/tooltip.js","../../src/heatmap/datasource/twodimensional.js","../../src/heatmap/legend/legend.js","../../src/heatmap/datasource/adaptor.js","../../src/heatmap/heatmap.js","../../src/global.js"],"sourcesContent":["/**\n * Specifies HeatMaps Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.heatMapTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.titleFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.rectLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.tooltipFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getThemeColor(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'highcontrastlight':\n        case 'highcontrast':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#ffffff',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#DADADA',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                heatMapTitle: '#212529',\n                axisTitle: '#212529',\n                axisLabel: '#212529',\n                cellBorder: '#E9ECEF',\n                background: '#FFFFFF',\n                cellTextColor: '#212529',\n                toggledColor: '#ffffff',\n                emptyCellColor: '#E9ECEF',\n                legendLabel: '#212529',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        default:\n            style = {\n                heatMapTitle: '#424242',\n                axisTitle: '#424242',\n                axisLabel: '#686868',\n                cellBorder: '#EEEEEE',\n                cellTextColor: '#000000',\n                toggledColor: '#ffffff',\n                background: '#FFFFFF',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#353535',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { remove, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { RgbColor } from '../utils/colorMapping';\n/**\n * Helper method for heatmap\n */\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to measure the height and width of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('heatmapmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'heatmapmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerText = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.fontSize = (font.size).indexOf('px') !== -1 ? font.size : font.size + 'px';\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/** @private */\nvar TextElement = /** @class */ (function () {\n    function TextElement(fontModel, fontColor) {\n        this['font-size'] = fontModel.size;\n        this['font-style'] = fontModel.fontStyle.toLowerCase();\n        this['font-family'] = fontModel.fontFamily;\n        this['font-weight'] = fontModel.fontWeight.toLowerCase();\n        this.fill = fontColor ? fontColor : '';\n    }\n    return TextElement;\n}());\nexport { TextElement };\nexport function titlePositionX(width, leftPadding, rightPadding, titleStyle) {\n    var positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = leftPadding + width / 2;\n    }\n    else {\n        positionX = width + leftPadding;\n    }\n    return positionX;\n}\n/**\n * Internal class size for height and width\n * @private\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color ? color : '';\n        _this['stroke-width'] = parseFloat(width.toString());\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentRect = /** @class */ (function () {\n    function CurrentRect(x, y, width, height, value, id, xIndex, yIndex, xValue, yValue, visible, displayText, textId, allowCollection) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.id = id;\n        this.xIndex = xIndex;\n        this.yIndex = yIndex;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.visible = visible;\n        this.displayText = displayText;\n        this.textId = textId;\n        /** @private */\n        this.allowCollection = allowCollection;\n    }\n    return CurrentRect;\n}());\nexport { CurrentRect };\n/**\n * Class to define the details of selected cell.\n * @private\n */\nvar SelectedCellDetails = /** @class */ (function () {\n    function SelectedCellDetails(value, xLabel, yLabel, xValue, yValue, cellElement, xPosition, yPosition, width, height, x, y) {\n        this.value = value;\n        this.xLabel = xLabel;\n        this.yLabel = yLabel;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.cellElement = cellElement;\n        this.xPosition = xPosition;\n        this.yPosition = yPosition;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n    }\n    return SelectedCellDetails;\n}());\nexport { SelectedCellDetails };\n/**\n * Class to define property to draw rectangle.\n * @private\n */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, borderColor, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height > 0 ? rect.height : 0;\n        _this.width = rect.width > 0 ? rect.width : 0;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/**\n * Class to define property to draw circle.\n * @private\n */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, borderColor, cx, cy, r) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity) || this;\n        _this.cx = cx ? cx : 0;\n        _this.cy = cy ? cy : 0;\n        _this.r = r ? r : 0;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\nexport { CircleOption };\n/**\n * Helper Class to define property to draw rectangle.\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Class to define property to draw text.\n * @private\n */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, basic, element, fontColor) {\n        var _this = _super.call(this, element, fontColor) || this;\n        _this.transform = '';\n        _this['dominant-baseline'] = 'auto';\n        _this.labelRotation = 0;\n        _this.baseline = 'auto';\n        _this.id = id;\n        _this.x = basic.x;\n        _this.y = basic.y;\n        _this['text-anchor'] = basic['text-anchor'];\n        _this.text = basic.text;\n        _this.transform = basic.transform;\n        _this.labelRotation = basic.labelRotation;\n        _this['dominant-baseline'] = basic['dominant-baseline'];\n        _this.baseline = basic.baseline;\n        _this.dy = basic.dy;\n        return _this;\n    }\n    return TextOption;\n}(TextElement));\nexport { TextOption };\n/**\n * Helper Class to define property to draw text.\n * @private\n */\nvar TextBasic = /** @class */ (function () {\n    function TextBasic(x, y, anchor, text, labelRotation, transform, baseLine, dy) {\n        this.transform = '';\n        this['dominant-baseline'] = 'auto';\n        this.labelRotation = 0;\n        this.baseline = 'auto';\n        this.x = x ? x : 0;\n        this.y = y ? y : 0;\n        this['text-anchor'] = anchor ? anchor : 'start';\n        this.text = text ? text : '';\n        this.transform = transform ? transform : '';\n        this.labelRotation = labelRotation;\n        this['dominant-baseline'] = baseLine ? baseLine : 'auto';\n        this.baseline = baseLine ? baseLine : '';\n        this.dy = dy ? dy : '';\n    }\n    return TextBasic;\n}());\nexport { TextBasic };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar Line = /** @class */ (function () {\n    function Line(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    return Line;\n}());\nexport { Line };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar LineOption = /** @class */ (function (_super) {\n    __extends(LineOption, _super);\n    function LineOption(id, line, stroke, strokewidth, opacity, dasharray) {\n        var _this = _super.call(this, id, null, strokewidth, stroke, opacity, dasharray, null) || this;\n        _this.x1 = line.x1;\n        _this.y1 = line.y1;\n        _this.x2 = line.x2;\n        _this.y2 = line.y2;\n        return _this;\n    }\n    return LineOption;\n}(PathOption));\nexport { LineOption };\n/**\n * Properties required to render path.\n * @private\n */\nvar PathAttributes = /** @class */ (function (_super) {\n    __extends(PathAttributes, _super);\n    function PathAttributes(id, path, fill, border, borderWidth, opacity, borderColor) {\n        var _this = _super.call(this, id, fill, borderWidth, borderColor, opacity, null) || this;\n        _this.d = path.d;\n        _this.x = path.x;\n        _this.y = path.y;\n        return _this;\n    }\n    return PathAttributes;\n}(PathOption));\nexport { PathAttributes };\n/**\n * Helper Class to define property to path.\n * @private\n */\nvar Path = /** @class */ (function () {\n    function Path(d, innerR, x, y, x1, y1, cx, cy, start, end, radius, counterClockWise) {\n        this.d = d;\n        this.innerR = innerR;\n        this.cx = cx;\n        this.cy = cy;\n        this.x = x;\n        this.y = y;\n        this.x1 = x1;\n        this.y1 = y1;\n        this.start = start;\n        this.end = end;\n        this.radius = radius;\n        this.counterClockWise = counterClockWise;\n    }\n    return Path;\n}());\nexport { Path };\n/** @private */\nexport function sum(values) {\n    var sum = 0;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        sum += value;\n    }\n    return sum;\n}\n/** @private */\nexport function titlePositionY(heatmapSize, topPadding, bottomPadding, titleStyle) {\n    var positionY;\n    if (titleStyle.textAlignment === 'Near') {\n        positionY = heatmapSize.height - bottomPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionY = heatmapSize.height / 2;\n    }\n    else {\n        positionY = topPadding;\n    }\n    return positionY;\n}\n/** @private */\nexport function rotateTextSize(font, text, angle) {\n    var renderer = new SvgRenderer('heatmapMeasureRotateText');\n    var svgObject = renderer.createSvg({ id: 'heatmapMeasureRotateText_svg', width: 100, height: 100 });\n    var box;\n    var options;\n    var htmlObject;\n    options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle.toLowerCase(),\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight.toLowerCase(),\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    htmlObject = renderer.createText(options, text);\n    svgObject.appendChild(htmlObject);\n    document.body.appendChild(svgObject);\n    box = htmlObject.getBoundingClientRect();\n    remove(svgObject);\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/**\n * Class to draw SVG and Canvas Rectangle & Text.\n * @private\n */\nvar DrawSvgCanvas = /** @class */ (function () {\n    function DrawSvgCanvas(heatmap) {\n        this.heatMap = heatmap;\n    }\n    //Svg & Canvas Rectangle Part\n    DrawSvgCanvas.prototype.drawRectangle = function (properties, parentElement, isFromSeries) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawRectangle(properties));\n        }\n        else {\n            this.drawCanvasRectangle(this.heatMap.canvasRenderer, properties, isFromSeries);\n        }\n    };\n    //Svg & Canvas Bubble Part\n    DrawSvgCanvas.prototype.drawCircle = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawCircle(properties));\n        }\n        else {\n            this.drawCanvasCircle(this.heatMap.canvasRenderer, properties);\n        }\n    };\n    //Svg & Canvas Pie Part\n    DrawSvgCanvas.prototype.drawPath = function (properties, options, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.x;\n            delete properties.y;\n            parentElement.appendChild(this.heatMap.renderer.drawPath(properties));\n        }\n        else {\n            this.drawCanvasPath(this.heatMap.canvasRenderer, properties, options);\n        }\n    };\n    //Svg & Canvas Text Part\n    DrawSvgCanvas.prototype.createText = function (properties, parentElement, text) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.labelRotation;\n            delete properties.baseline;\n            delete properties.text;\n            parentElement.appendChild(this.heatMap.renderer.createText(properties, text));\n            properties.text = text;\n        }\n        else {\n            this.canvasDrawText(properties, text);\n        }\n    };\n    //Draw the wrapped text for both SVG & canvas\n    DrawSvgCanvas.prototype.createWrapText = function (options, font, parentElement) {\n        var renderOptions = {};\n        var htmlObject;\n        var tspanElement;\n        var text;\n        var height;\n        renderOptions = {\n            'id': options.id,\n            'x': options.x,\n            'y': options.y,\n            'fill': options.fill,\n            'font-size': font.size,\n            'font-style': font.fontStyle,\n            'font-family': font.fontFamily,\n            'font-weight': font.fontWeight.toLowerCase(),\n            'text-anchor': options['text-anchor'],\n            'transform': options.transform,\n            'dominant-baseline': options['dominant-baseline']\n        };\n        text = options.text[0];\n        if (!this.heatMap.enableCanvasRendering) {\n            htmlObject = this.heatMap.renderer.createText(renderOptions, text);\n        }\n        else {\n            this.heatMap.canvasRenderer.createText(options, text);\n        }\n        if (typeof options.text !== 'string' && options.text.length > 1) {\n            for (var i = 1, len = options.text.length; i < len; i++) {\n                height = (measureText(options.text[i], font).height);\n                if (!this.heatMap.enableCanvasRendering) {\n                    tspanElement = this.heatMap.renderer.createTSpan({\n                        'x': options.x, 'id': options.id + i,\n                        'y': (options.y) + (i * height)\n                    }, options.text[i]);\n                    htmlObject.appendChild(tspanElement);\n                }\n                else {\n                    options.id = options.id + i;\n                    options.y += height;\n                    this.heatMap.canvasRenderer.createText(options, options.text[i]);\n                }\n            }\n        }\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(htmlObject);\n        }\n    };\n    DrawSvgCanvas.prototype.drawLine = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawLine(properties));\n        }\n        else {\n            this.heatMap.canvasRenderer.drawLine(properties);\n        }\n    };\n    //Canvas Text Part\n    DrawSvgCanvas.prototype.canvasDrawText = function (options, label, translateX, translateY) {\n        var ctx = this.heatMap.canvasRenderer.ctx;\n        if (!translateX) {\n            translateX = options.x;\n        }\n        if (!translateY) {\n            translateY = options.y;\n        }\n        var fontWeight = this.getOptionValue(options, 'font-weight');\n        if (!isNullOrUndefined(fontWeight) && fontWeight.toLowerCase() === 'regular') {\n            fontWeight = 'normal';\n        }\n        var fontFamily = this.getOptionValue(options, 'font-family');\n        var fontSize = (options['font-size'].toString()).indexOf('px') === -1 ? options['font-size'] + 'px' : options['font-size'];\n        var anchor = this.getOptionValue(options, 'text-anchor');\n        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();\n        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);\n        if (anchor === 'middle') {\n            anchor = 'center';\n        }\n        ctx.save();\n        ctx.fillStyle = options.fill;\n        ctx.font = font;\n        ctx.textAlign = anchor;\n        if (options.baseline) {\n            ctx.textBaseline = options.baseline;\n        }\n        ctx.translate(translateX, translateY);\n        ctx.rotate(options.labelRotation * Math.PI / 180);\n        ctx.fillText(label, options.x - translateX, options.y - translateY);\n        ctx.restore();\n    };\n    // method to get the attributes value\n    /* tslint:disable */\n    DrawSvgCanvas.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    };\n    DrawSvgCanvas.prototype.setAttributes = function (canvas, options) {\n        canvas.ctx.lineWidth = options['stroke-width'];\n        var dashArray = options['stroke-dasharray'];\n        if (!isNullOrUndefined(dashArray)) {\n            var dashArrayString = dashArray.split(',');\n            canvas.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);\n        }\n        canvas.ctx.strokeStyle = options['stroke'];\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasRectangle = function (canvas, options, isFromSeries) {\n        var canvasCtx = canvas.ctx;\n        var cornerRadius = options.rx;\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = options['opacity'];\n        this.setAttributes(canvas, options);\n        this.drawCornerRadius(canvas, options);\n        if ((options['stroke-width'] && options['stroke-width'] != 0) || isFromSeries) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n        canvas.ctx = canvasCtx;\n    };\n    ;\n    // To draw the corner of a rectangle\n    DrawSvgCanvas.prototype.drawCornerRadius = function (canvas, options) {\n        var cornerRadius = options.rx;\n        var x = options.x;\n        var y = options.y;\n        var width = options.width;\n        var height = options.height;\n        if (options.fill === 'none') {\n            options.fill = 'transparent';\n        }\n        canvas.ctx.fillStyle = options.fill;\n        if (width < 2 * cornerRadius) {\n            cornerRadius = width / 2;\n        }\n        if (height < 2 * cornerRadius) {\n            cornerRadius = height / 2;\n        }\n        canvas.ctx.beginPath();\n        canvas.ctx.moveTo(x + width - cornerRadius, y);\n        canvas.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n        canvas.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n        canvas.ctx.arcTo(x, y + height, x, y, cornerRadius);\n        canvas.ctx.arcTo(x, y, x + width, y, cornerRadius);\n        canvas.ctx.closePath();\n        canvas.ctx.fill();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasCircle = function (canvas, options) {\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);\n        canvas.ctx.fillStyle = options.fill;\n        canvas.ctx.globalAlpha = options.opacity;\n        canvas.ctx.fill();\n        this.setAttributes(canvas, options);\n        if (options['stroke-width'] && options['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasPath = function (canvas, properties, options) {\n        var path = properties.d;\n        var dataSplit = path.split(' ');\n        var borderWidth = this.getOptionValue(options, 'stroke-width');\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = properties.opacity;\n        canvas.ctx.fillStyle = properties.fill;\n        this.setAttributes(canvas, properties);\n        for (var i = 0; i < dataSplit.length; i = i + 3) {\n            var x1 = parseFloat(dataSplit[i + 1]);\n            var y1 = parseFloat(dataSplit[i + 2]);\n            switch (dataSplit[i]) {\n                case 'M':\n                    canvas.ctx.moveTo(x1, y1);\n                    break;\n                case 'L':\n                    canvas.ctx.lineTo(x1, y1);\n                    break;\n                case 'A':\n                case 'a':\n                    canvas.ctx.arc(options.x, options.y, options.radius, (options.start * 0.0174533), (options.end * 0.0174533), false);\n                    i = dataSplit[i] === 'a' ? i + 13 : i + 5;\n                    break;\n                case 'Z':\n                    canvas.ctx.closePath();\n                    break;\n            }\n        }\n        canvas.ctx.fill();\n        if (properties['stroke-width'] && properties['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    return DrawSvgCanvas;\n}());\nexport { DrawSvgCanvas };\nexport function getTitle(title, style, width) {\n    var titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(textNone(width, title, style));\n            break;\n    }\n    return titleCollection;\n}\nexport function textWrap(currentLabel, maximumWidth, font) {\n    var textCollection = currentLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var index = textLength - 1; index >= 0; --index) {\n            label = text.substring(0, index) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function textNone(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i);\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nvar Gradient = /** @class */ (function () {\n    function Gradient(x, x1, x2, y1, y2) {\n        this.id = x;\n        this.x1 = x1;\n        this.x2 = x2;\n        this.y1 = y1;\n        this.y2 = y2;\n    }\n    return Gradient;\n}());\nexport { Gradient };\nvar GradientColor = /** @class */ (function () {\n    function GradientColor(color, colorStop) {\n        this.color = color;\n        this.colorStop = colorStop;\n    }\n    return GradientColor;\n}());\nexport { GradientColor };\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, heatmap) {\n    var tooltip = document.getElementById(id);\n    var initialClip = heatmap.initialClipRect;\n    var size = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    });\n    var width = size.width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    x = x < 0 ? 5 : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: Segoe UI'\n        });\n        tooltip.innerText = text;\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (text === heatmap.titleSettings.text) {\n        tooltip.style.width = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (x + 15)).toString() + 'px' : '';\n    }\n    else {\n        tooltip.style.left = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (size.width + 7)).toString() + 'px' : x.toString() + 'px';\n        tooltip.style.top = (y + 15) + size.height + 6 > heatmap.availableSize.height ?\n            (y - (size.height + 6) - 10).toString() + 'px' : tooltip.style.top; // 6 and 7 are padding and border width\n    }\n    if (isTouch) {\n        setTimeout(function () { removeElement(id); }, 1500);\n    }\n}\n/** @private */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/** @private */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nexport function increaseDateTimeInterval(value, interval, intervalType, increment) {\n    var result = new Date(value);\n    interval = Math.ceil(interval * increment);\n    switch (intervalType) {\n        case 'Years':\n            result.setFullYear(result.getFullYear() + interval);\n            break;\n        case 'Months':\n            result.setMonth(result.getMonth() + interval);\n            break;\n        case 'Days':\n            result.setDate(result.getDate() + interval);\n            break;\n        case 'Hours':\n            result.setHours(result.getHours() + interval);\n            break;\n        case 'Minutes':\n            result.setMinutes(result.getMinutes() + interval);\n            break;\n    }\n    return result;\n}\n/* private */\nvar CanvasTooltip = /** @class */ (function () {\n    function CanvasTooltip(text, rect) {\n        this.region = new Rect(0, 0, 0, 0);\n        this.text = text;\n        this.region = rect;\n    }\n    return CanvasTooltip;\n}());\nexport { CanvasTooltip };\n/* private*/\n/* Method to get the tool tip text in canvas based on region. */\nexport function getTooltipText(tooltipCollection, xPosition, yPosition) {\n    var length = tooltipCollection.length;\n    var tooltip;\n    var region;\n    var text;\n    for (var i = 0; i < length; i++) {\n        tooltip = tooltipCollection[i];\n        region = tooltip.region;\n        if (xPosition >= region.x && xPosition <= (region.x + region.width) && yPosition >= region.y && yPosition <= (region.y + region.height)) {\n            text = tooltip.text;\n            break;\n        }\n    }\n    return text;\n}\n/**\n * @private\n */\nvar PaletterColor = /** @class */ (function () {\n    function PaletterColor() {\n    }\n    return PaletterColor;\n}());\nexport { PaletterColor };\n/**\n * @private\n */\nvar GradientPointer = /** @class */ (function () {\n    function GradientPointer(pathX1, pathY1, pathX2, pathY2, pathX3, pathY3) {\n        this.pathX1 = pathX1;\n        this.pathY1 = pathY1;\n        this.pathX2 = pathX2;\n        this.pathY2 = pathY2;\n        this.pathX3 = pathX3;\n        this.pathY3 = pathY3;\n    }\n    return GradientPointer;\n}());\nexport { GradientPointer };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentLegendRect = /** @class */ (function () {\n    function CurrentLegendRect(x, y, width, height, label, id) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.label = label;\n        this.id = id;\n    }\n    return CurrentLegendRect;\n}());\nexport { CurrentLegendRect };\n/** @private */\nvar LegendRange = /** @class */ (function () {\n    function LegendRange(x, y, width, height, value, visible, currentPage) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.visible = visible;\n        this.currentPage = currentPage;\n    }\n    return LegendRange;\n}());\nexport { LegendRange };\n/** @private */\nvar ToggleVisibility = /** @class */ (function () {\n    function ToggleVisibility(visible, value, startValue, endValue) {\n        this.visible = visible;\n        this.value = value;\n        this.startValue = startValue;\n        this.endValue = endValue;\n    }\n    return ToggleVisibility;\n}());\nexport { ToggleVisibility };\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('heatmapmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new RgbColor(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.R) + componentToHex(value.G) + componentToHex(value.B);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new RgbColor(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new RgbColor(255, 255, 255);\n}\n/** @private */\nexport function formatValue(isCustom, format, tempInterval, formatFun) {\n    return isCustom ? format.replace('{value}', formatFun(tempInterval))\n        : formatFun(tempInterval);\n}\n/** @private */\nvar MultiLevelPosition = /** @class */ (function () {\n    function MultiLevelPosition(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return MultiLevelPosition;\n}());\nexport { MultiLevelPosition };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from './theme';\n/**\n * Configures the fonts in heat map.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the heat map margins.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the borders in the heat map.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"radius\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the tooltip borders in the heat map.\n */\nvar TooltipBorder = /** @class */ (function (_super) {\n    __extends(TooltipBorder, _super);\n    function TooltipBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], TooltipBorder.prototype, \"width\", void 0);\n    return TooltipBorder;\n}(ChildProperty));\nexport { TooltipBorder };\n/**\n * Configures the mapping name for size and color in SizeAndColor type.\n */\nvar BubbleData = /** @class */ (function (_super) {\n    __extends(BubbleData, _super);\n    function BubbleData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"color\", void 0);\n    return BubbleData;\n}(ChildProperty));\nexport { BubbleData };\n/**\n * class used to maintain Title styles.\n */\nvar Title = /** @class */ (function (_super) {\n    __extends(Title, _super);\n    function Title() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Title.prototype, \"text\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Title.prototype, \"textStyle\", void 0);\n    return Title;\n}(ChildProperty));\nexport { Title };\n/**\n * class used to maintain the fill color value for cell color range\n */\nvar FillColor = /** @class */ (function (_super) {\n    __extends(FillColor, _super);\n    function FillColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"minColor\", void 0);\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"maxColor\", void 0);\n    return FillColor;\n}(ChildProperty));\nexport { FillColor };\n/**\n * class used to maintain palette information.\n */\nvar PaletteCollection = /** @class */ (function (_super) {\n    __extends(PaletteCollection, _super);\n    function PaletteCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"endValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"minColor\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"maxColor\", void 0);\n    return PaletteCollection;\n}(ChildProperty));\nexport { PaletteCollection };\n/**\n * label border properties.\n */\nvar AxisLabelBorder = /** @class */ (function (_super) {\n    __extends(AxisLabelBorder, _super);\n    function AxisLabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#b5b5b5')\n    ], AxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], AxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], AxisLabelBorder.prototype, \"type\", void 0);\n    return AxisLabelBorder;\n}(ChildProperty));\nexport { AxisLabelBorder };\nvar BubbleSize = /** @class */ (function (_super) {\n    __extends(BubbleSize, _super);\n    function BubbleSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], BubbleSize.prototype, \"minimum\", void 0);\n    __decorate([\n        Property('100%')\n    ], BubbleSize.prototype, \"maximum\", void 0);\n    return BubbleSize;\n}(ChildProperty));\nexport { BubbleSize };\n/**\n * categories for multi level labels\n */\nvar MultiLevelCategories = /** @class */ (function (_super) {\n    __extends(MultiLevelCategories, _super);\n    function MultiLevelCategories() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"end\", void 0);\n    __decorate([\n        Property('')\n    ], MultiLevelCategories.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n    return MultiLevelCategories;\n}(ChildProperty));\nexport { MultiLevelCategories };\n/**\n * MultiLevelLabels properties\n */\nvar MultiLevelLabels = /** @class */ (function (_super) {\n    __extends(MultiLevelLabels, _super);\n    function MultiLevelLabels() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Center')\n    ], MultiLevelLabels.prototype, \"alignment\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], MultiLevelLabels.prototype, \"overflow\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], MultiLevelLabels.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 1, type: 'Rectangle' }, AxisLabelBorder)\n    ], MultiLevelLabels.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelCategories)\n    ], MultiLevelLabels.prototype, \"categories\", void 0);\n    return MultiLevelLabels;\n}(ChildProperty));\nexport { MultiLevelLabels };\n/**\n * Internal class used to maintain colorcollection.\n */\nvar ColorCollection = /** @class */ (function () {\n    function ColorCollection(value, color, label, startValue, endValue, minColor, maxColor) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n    }\n    return ColorCollection;\n}());\nexport { ColorCollection };\n/**\n * class used to maintain color and value collection.\n */\nvar BubbleTooltipData = /** @class */ (function () {\n    function BubbleTooltipData(mappingName, bubbleData, valueType) {\n        this.mappingName = mappingName;\n        this.bubbleData = bubbleData;\n        this.valueType = valueType;\n    }\n    return BubbleTooltipData;\n}());\nexport { BubbleTooltipData };\n/**\n * Internal class used to maintain legend colorcollection.\n */\nvar LegendColorCollection = /** @class */ (function () {\n    function LegendColorCollection(value, color, label, startValue, endValue, minColor, maxColor, isHidden) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n        this.isHidden = isHidden;\n    }\n    return LegendColorCollection;\n}());\nexport { LegendColorCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, extend, ChildProperty, Collection, isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { ColorCollection, LegendColorCollection, PaletteCollection, FillColor } from '../model/base';\nimport { PaletterColor } from './helper';\n/**\n * Configures the color property in Heatmap.\n */\nvar PaletteSettings = /** @class */ (function (_super) {\n    __extends(PaletteSettings, _super);\n    function PaletteSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([{}], PaletteCollection)\n    ], PaletteSettings.prototype, \"palette\", void 0);\n    __decorate([\n        Property('Gradient')\n    ], PaletteSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], PaletteSettings.prototype, \"emptyPointColor\", void 0);\n    __decorate([\n        Property('Table')\n    ], PaletteSettings.prototype, \"colorGradientMode\", void 0);\n    __decorate([\n        Complex({}, FillColor)\n    ], PaletteSettings.prototype, \"fillColor\", void 0);\n    return PaletteSettings;\n}(ChildProperty));\nexport { PaletteSettings };\n/**\n * Helper class for colormapping\n */\nvar RgbColor = /** @class */ (function () {\n    function RgbColor(r, g, b) {\n        this.R = r;\n        this.G = g;\n        this.B = b;\n    }\n    return RgbColor;\n}());\nexport { RgbColor };\nvar CellColor = /** @class */ (function () {\n    function CellColor(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To convert hexa color to RGB.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.convertToRGB = function (value, colorMapping) {\n        var previousOffset = this.heatMap.isColorRange ? colorMapping[0].startValue : colorMapping[0].value;\n        var nextOffset = 0;\n        var i = 0;\n        var previousColor;\n        var nextColor;\n        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n            for (i = 0; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].endValue);\n                if (value <= offset && value >= Number(colorMapping[i].startValue)) {\n                    nextOffset = offset;\n                    previousColor = this.heatMap.colorCollection[i].minColor;\n                    nextColor = this.heatMap.colorCollection[i].maxColor;\n                    break;\n                }\n                else if (colorMapping[0].startValue !== this.heatMap.dataSourceMinValue && value < colorMapping[0].startValue) {\n                    nextOffset = colorMapping[0].startValue;\n                    previousOffset = this.heatMap.dataSourceMinValue;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else if (value > offset && value <= (i === (colorMapping.length - 1) ? this.heatMap.dataSourceMaxValue :\n                    colorMapping[i + 1].startValue)) {\n                    nextOffset = (i === (colorMapping.length - 1)) ? this.heatMap.dataSourceMaxValue : colorMapping[i + 1].startValue;\n                    previousOffset = offset;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].value);\n                if (value <= offset) {\n                    nextOffset = offset;\n                    previousColor = this.getEqualColor(colorMapping, previousOffset);\n                    nextColor = this.getEqualColor(colorMapping, nextOffset);\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        var percent = 0;\n        var full = (nextOffset) - previousOffset;\n        percent = (value - previousOffset) / full;\n        percent = isNaN(percent) ? 0 : percent;\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    /**\n     * To convert Component to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    /**\n     * To get similar color.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.getEqualColor = function (list, offset) {\n        for (var i = 0; i < list.length; i++) {\n            if (Number(list[i].value) === offset) {\n                var color = list[i].color;\n                if (color.indexOf('rgb') !== -1) {\n                    color = this.convertToHex(color);\n                }\n                else if (color.indexOf('#') === -1) {\n                    color = '#FFFFFF';\n                }\n                return color;\n            }\n        }\n        return '#00000';\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.convertToHex = function (color) {\n        var itemColor = color.substr(3);\n        itemColor = itemColor.split('(')[1].split(')')[0];\n        var colorSplit = itemColor.split(',');\n        itemColor = this.rgbToHex(parseInt(colorSplit[0], 10), parseInt(colorSplit[1], 10), parseInt(colorSplit[2], 10));\n        return itemColor;\n    };\n    /**\n     * To get RGB for percentage value.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new RgbColor(r, g, b);\n    };\n    /**\n     * To convert numbet to percentage.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    /**\n     * To get complete color Collection.\n     * @private\n     */\n    CellColor.prototype.getColorCollection = function () {\n        var heatMap = this.heatMap;\n        heatMap.colorCollection = [];\n        heatMap.legendColorCollection = [];\n        var range;\n        for (var j = 0; j < this.heatMap.paletteSettings.palette.length; j++) {\n            if (this.heatMap.paletteSettings.palette[j].startValue === null || this.heatMap.paletteSettings.palette[j].endValue === null) {\n                this.heatMap.isColorRange = false;\n                break;\n            }\n            else {\n                this.heatMap.isColorRange = true;\n            }\n        }\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        heatMap.emptyPointColor = heatMap.paletteSettings.emptyPointColor ? heatMap.paletteSettings.emptyPointColor :\n            heatMap.themeStyle.emptyCellColor;\n        var tempcolorMapping = this.orderbyOffset(this.heatMap.isColorRange ? heatMap.paletteSettings.palette :\n            heatMap.paletteSettings.palette && heatMap.paletteSettings.palette.length > 1 ?\n                heatMap.paletteSettings.palette : heatMap.themeStyle.palette);\n        if (!tempcolorMapping.isCompact) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length - 1);\n            }\n            else {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length);\n            }\n            if (tempcolorMapping.offsets.length >= 2) {\n                for (var index = 0; index < tempcolorMapping.offsets.length; index++) {\n                    heatMap.colorCollection.push(new ColorCollection((Math.round(((minValue) + (index * range)) * 100) / 100), tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor));\n                    heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor, false));\n                }\n            }\n        }\n        else {\n            heatMap.colorCollection = tempcolorMapping.offsets;\n            heatMap.legendColorCollection = extend([], tempcolorMapping.offsets, null, true);\n        }\n        if (!this.heatMap.isColorRange) {\n            this.updateLegendColorCollection(minValue, maxValue, tempcolorMapping);\n        }\n    };\n    /**\n     * To update legend color Collection.\n     * @private\n     */\n    CellColor.prototype.updateLegendColorCollection = function (minValue, maxValue, tempcolorMapping) {\n        if (this.heatMap.paletteSettings.type === 'Fixed' && (tempcolorMapping.isCompact || tempcolorMapping.isLabel)) {\n            return;\n        }\n        if (Math.round(minValue * 100) / 100 < this.heatMap.legendColorCollection[0].value) {\n            this.heatMap.legendColorCollection.unshift(new LegendColorCollection(Math.round(minValue * 100) / 100, this.heatMap.legendColorCollection[0].color, this.heatMap.legendColorCollection[0].label, this.heatMap.legendColorCollection[0].startValue, this.heatMap.legendColorCollection[0].endValue, this.heatMap.legendColorCollection[0].minColor, this.heatMap.legendColorCollection[0].maxColor, true));\n        }\n        if (Math.round(maxValue * 100) / 100 > this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].value) {\n            this.heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(maxValue * 100) / 100, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].color, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].label, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].startValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].endValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].minColor, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].maxColor, true));\n        }\n    };\n    /**\n     * To get ordered palette color collection.\n     * @private\n     */\n    CellColor.prototype.orderbyOffset = function (offsets) {\n        var returnCollection = new PaletterColor();\n        var key = this.heatMap.isColorRange ? 'to' : 'value';\n        var label = 'label';\n        returnCollection.isCompact = true;\n        returnCollection.isLabel = true;\n        // tslint:disable-next-line:no-any\n        returnCollection.offsets = offsets.sort(function (a, b) {\n            if (isNullOrUndefined(a[label]) && isNullOrUndefined(b[label])) {\n                returnCollection.isLabel = false;\n            }\n            if (!isNullOrUndefined(a[key]) && !isNullOrUndefined(b[key])) {\n                return a[key] - b[key];\n            }\n            else {\n                returnCollection.isCompact = false;\n                return a;\n            }\n        });\n        if (!returnCollection.isCompact) {\n            returnCollection.offsets = this.heatMap.paletteSettings.palette && this.heatMap.paletteSettings.palette.length > 1 ?\n                this.heatMap.paletteSettings.palette : this.heatMap.themeStyle.palette;\n        }\n        return returnCollection;\n    };\n    /**\n     * To get color depends to value.\n     * @private\n     */\n    CellColor.prototype.getColorByValue = function (text) {\n        var color = '';\n        var rbg;\n        var compareValue = 0;\n        if (text.toString() !== '') {\n            if (this.heatMap.cellSettings.tileType === 'Bubble' &&\n                (this.heatMap.cellSettings.bubbleType === 'Size' || this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                color = this.heatMap.isColorRange ? this.heatMap.colorCollection[0].minColor : this.heatMap.colorCollection[0].color;\n            }\n            else if (this.heatMap.paletteSettings.type === 'Fixed') {\n                for (var y = 0; y < this.heatMap.colorCollection.length; y++) {\n                    compareValue = this.heatMap.isColorRange ? this.heatMap.paletteSettings.palette[y].startValue :\n                        this.heatMap.colorCollection[y + 1] ? this.heatMap.colorCollection[y + 1].value :\n                            this.heatMap.colorCollection[y].value;\n                    var singleValue = this.heatMap.dataSourceMinValue === this.heatMap.dataSourceMaxValue;\n                    if (this.heatMap.isColorRange) {\n                        var legendRange = void 0;\n                        if ((text <= this.heatMap.colorCollection[y].endValue && text >= this.heatMap.colorCollection[y].startValue)) {\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].minColor;\n                            break;\n                        }\n                        else {\n                            color = this.heatMap.paletteSettings.fillColor.minColor;\n                        }\n                    }\n                    else {\n                        if ((text <= compareValue && singleValue && y === 0) || text < compareValue ||\n                            (text >= compareValue && y === this.heatMap.colorCollection.length - 1)) {\n                            var legendRange = void 0;\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].color;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.heatMap.paletteSettings.colorGradientMode !== 'Table') {\n                    this.getColorCollection();\n                }\n                if (text < this.heatMap.colorCollection[0].value && !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[0].color;\n                }\n                else if (text > this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].value &&\n                    !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].color;\n                }\n                else {\n                    rbg = this.convertToRGB(text, this.heatMap.colorCollection);\n                    color = this.rgbToHex(rbg.R, rbg.G, rbg.B);\n                }\n            }\n        }\n        else {\n            color = this.heatMap.emptyPointColor;\n        }\n        return color;\n    };\n    return CellColor;\n}());\nexport { CellColor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * HeatMap Axis file\n */\nimport { Property, Complex, ChildProperty, isNullOrUndefined, Collection } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { Font, Title, AxisLabelBorder, MultiLevelLabels } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { Rect, measureText, Size, rotateTextSize, increaseDateTimeInterval, formatValue } from '../utils/helper';\nimport { MultiLevelPosition, textWrap } from '../utils/helper';\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        /** @private */\n        _this.maxLabelSize = new Size(0, 0);\n        /** @private */\n        _this.titleSize = new Size(0, 0);\n        /** @private */\n        _this.axisLabels = [];\n        /** @private */\n        _this.tooltipLabels = [];\n        /** @private */\n        _this.labelValue = [];\n        /** @private */\n        _this.axisLabelSize = 0;\n        /** @private */\n        _this.axisLabelInterval = 0;\n        /** @private */\n        _this.dateTimeAxisLabelInterval = [];\n        /** @private */\n        _this.maxLength = 0;\n        /** @private */\n        _this.min = 0;\n        /** @private */\n        _this.max = 0;\n        /** @private */\n        _this.isIntersect = false;\n        /** @private */\n        _this.jsonCellLabel = [];\n        _this.multiLevelSize = [];\n        /** @private */\n        _this.xAxisMultiLabelHeight = [];\n        /** @private */\n        _this.yAxisMultiLabelHeight = [];\n        /** @private */\n        _this.multiLevelPosition = [];\n        return _this;\n    }\n    /**\n     * measure the axis title and label size\n     * @param axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.computeSize = function (axis, heatmap, rect) {\n        var size = new Size(0, 0);\n        var innerPadding = 10;\n        this.titleSize = axis.getTitleSize(axis, innerPadding);\n        this.maxLabelSize = axis.getMaxLabelSize(axis, heatmap);\n        this.getMultilevelLabelsHeight(axis, rect, heatmap);\n        for (var i = 0; i < this.multiLevelLabels.length; i++) {\n            size = axis.multiLevelLabelSize(innerPadding, i);\n            this.multiLevelSize.push(size);\n        }\n    };\n    /**\n     * calculating x, y position of multi level labels\n     * @private\n     */\n    Axis.prototype.multiPosition = function (axis, index) {\n        var innerPadding = axis.orientation === 'Horizontal' ? 10 : 20;\n        var multiPosition = new MultiLevelPosition(0, 0);\n        if (axis.orientation === 'Horizontal') {\n            var level0 = axis.maxLabelSize.height + innerPadding;\n            var level1 = this.xAxisMultiLabelHeight[index - 1];\n            multiPosition.x = (axis.isInversed ? axis.rect.x + axis.rect.width : axis.rect.x);\n            multiPosition.y = index === 0 ? axis.rect.y + (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].y + (axis.opposedPosition ? -level1 : level1);\n        }\n        else {\n            var level0 = axis.maxLabelSize.width + innerPadding;\n            var level1 = index !== 0 && (this.multiLevelSize[index - 1].width);\n            multiPosition.x = index === 0 ? axis.rect.x - (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].x - (axis.opposedPosition ? -(level1 + innerPadding) : level1 + innerPadding);\n            multiPosition.y = axis.isInversed ? axis.rect.y : axis.rect.y + axis.rect.height;\n        }\n        return multiPosition;\n    };\n    Axis.prototype.multiLevelLabelSize = function (innerPadding, index) {\n        var labelSize = new Size(0, 0);\n        var multiLevel = this.multiLevelLabels;\n        var categoryLabel = multiLevel[index].categories;\n        for (var i = 0; i < categoryLabel.length; i++) {\n            var size_1 = measureText(categoryLabel[i].text, multiLevel[index].textStyle);\n            labelSize.width = (labelSize.width > size_1.width) ? labelSize.width : size_1.width;\n            labelSize.height = (labelSize.height > size_1.height) ? labelSize.height : size_1.height;\n        }\n        var size = (this.orientation === 'Horizontal') ? this.xAxisMultiLabelHeight[index] : this.yAxisMultiLabelHeight[index];\n        if (this.opposedPosition) {\n            this.farSizes.push(size);\n        }\n        else {\n            this.nearSizes.push(size);\n        }\n        return labelSize;\n    };\n    Axis.prototype.getMultilevelLabelsHeight = function (axis, rect, heatmap) {\n        var labelSize;\n        var gap;\n        var height;\n        var multiLevelLabelsHeight = [];\n        var start;\n        var end;\n        var startPosition;\n        var endPosition;\n        var isVertical = axis.orientation === 'Vertical';\n        var axisValue = (isVertical ? rect.height : rect.width) / axis.axisLabelSize;\n        var padding = axis.orientation === 'Vertical' ? 20 : 10;\n        this.multiLevelLabels.map(function (multiLevel, index) {\n            multiLevel.categories.map(function (categoryLabel) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    startPosition = heatmap.heatMapAxis.calculateLeftPosition(axis, start, categoryLabel.start, rect);\n                    endPosition = heatmap.heatMapAxis.calculateWidth(axis, categoryLabel.end, end, rect);\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endPosition - startPosition) :\n                        categoryLabel.maximumTextWidth);\n                    if ((labelSize.width > gap - padding) && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height + padding :\n                        ((multiLevelLabelsHeight[index] < height) ? height + padding : multiLevelLabelsHeight[index]);\n                }\n            });\n        });\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n    };\n    Axis.prototype.getTitleSize = function (axis, innerPadding) {\n        var titleSize = new Size(0, 0);\n        if (this.title.text) {\n            titleSize = measureText(this.title.text, this.title.textStyle);\n            titleSize.height += innerPadding;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(titleSize.height);\n        }\n        else {\n            this.nearSizes.push(titleSize.height);\n        }\n        return titleSize;\n    };\n    Axis.prototype.getMaxLabelSize = function (axis, heatmap) {\n        var labelSize = new Size(0, 0);\n        var labels = this.axisLabels;\n        var padding = (axis.border.width > 0 || axis.multiLevelLabels.length > 0) ? 10 : 0;\n        axis.angle = axis.labelRotation;\n        axis.isIntersect = false;\n        if (axis.orientation === 'Horizontal' && (axis.labelIntersectAction === 'Rotate45' ||\n            (axis.labelRotation % 180 === 0 && axis.labelIntersectAction === 'Trim'))) {\n            var interval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                heatmap.initialClipRect.width / axis.axisLabelSize : heatmap.initialClipRect.width / axis.axisLabels.length;\n            var startX = heatmap.initialClipRect.x + ((!axis.isInversed) ? 0 : heatmap.initialClipRect.width);\n            var previousEnd = void 0;\n            var previousStart = void 0;\n            for (var i = 0, len = labels.length; i < len; i++) {\n                var label = labels[i];\n                var elementSize = measureText(label, axis.textStyle);\n                var axisInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] * interval : interval;\n                var startPoint = startX + (!axis.isInversed ?\n                    ((interval - elementSize.width) / 2) : -((interval + elementSize.width) / 2));\n                startPoint = startPoint < heatmap.initialClipRect.x ? heatmap.initialClipRect.x : startPoint;\n                var endPoint = startPoint + elementSize.width;\n                if (!axis.isInversed) {\n                    if (isNullOrUndefined(previousEnd)) {\n                        previousEnd = endPoint;\n                    }\n                    else if ((startPoint < previousEnd)) {\n                        if (axis.labelIntersectAction === 'Rotate45') {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousEnd = endPoint;\n                }\n                else {\n                    if (isNullOrUndefined(previousStart)) {\n                        previousStart = startPoint;\n                    }\n                    else if ((previousStart < endPoint)) {\n                        if (axis.labelIntersectAction === 'Rotate45') {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousStart = startPoint;\n                }\n                startX += axis.isInversed ? -axisInterval : axisInterval;\n            }\n        }\n        for (var i = 0; i < labels.length; i++) {\n            var size = (axis.angle % 180 === 0) ?\n                measureText(labels[i], axis.textStyle) : rotateTextSize(axis.textStyle, labels[i], axis.angle);\n            labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n            labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        else {\n            this.nearSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        return labelSize;\n    };\n    /**\n     * Generate the axis lables for numeric axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateNumericAxisLabels = function (heatmap) {\n        //Axis Min\n        var min = 0;\n        var max = 0;\n        var interval = this.interval ? this.interval : 1;\n        var adaptorMin;\n        var adaptorMax;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.min : heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.max : heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        min = !isNullOrUndefined(this.minimum) ? this.minimum : ((adaptorMin) ? adaptorMin : 0);\n        max = !isNullOrUndefined(this.maximum) ? this.maximum :\n            ((adaptorMax) ? adaptorMax : (this.maxLength * this.increment));\n        var temp;\n        if (this.minimum && this.maximum && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        max = !isNullOrUndefined(this.maximum) ? max : (adaptorMax ? adaptorMax : (max + min));\n        var format = this.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatmap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        for (var i = min; i <= max; i = i + (interval * this.increment)) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.axisLabels.push(value);\n        }\n        this.min = 0;\n        this.axisLabelSize = Math.floor(((max - min) / this.increment) + 1);\n        this.max = this.axisLabelSize - 1;\n        this.axisLabelInterval = interval;\n        for (var i = min; i <= max; i = i + this.increment) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.tooltipLabels.push(value);\n            this.labelValue.push(i);\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis lables for category axis\n     * @private\n     */\n    Axis.prototype.calculateCategoryAxisLabels = function () {\n        var labels = this.labels ? this.labels : [];\n        labels = (labels.length > 0) ? labels : this.jsonCellLabel;\n        var min = !isNullOrUndefined(this.minimum) ? this.minimum : 0;\n        var max = !isNullOrUndefined(this.maximum) ? this.maximum : this.maxLength;\n        var interval = this.interval ? this.interval : 1;\n        var temp;\n        if (!isNullOrUndefined(this.minimum) && !isNullOrUndefined(this.maximum) && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        if (labels && labels.length > 0) {\n            for (var i = min; i <= max; i = i + interval) {\n                var value = labels[i] ? labels[i].toString() : i.toString();\n                this.axisLabels.push(value);\n            }\n        }\n        else {\n            for (var i = min; i <= max; i = i + interval) {\n                this.axisLabels.push(i.toString());\n            }\n        }\n        for (var i = min; i <= max; i++) {\n            this.tooltipLabels.push(labels[i] ? labels[i].toString() : i.toString());\n            this.labelValue.push(labels[i] ? labels[i].toString() : i.toString());\n        }\n        this.min = min;\n        this.max = max;\n        this.axisLabelSize = max - min + 1;\n        this.axisLabelInterval = interval;\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis labels for date time axis.\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateDateTimeAxisLabel = function (heatmap) {\n        var interval = this.interval ? this.interval : 1;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = heatmap.intl.getDateParser(option);\n        var dateFormatter = heatmap.intl.getDateFormat(option);\n        var min;\n        var max;\n        var adaptorMin = null;\n        var adaptorMax = null;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.min :\n                heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.max :\n                heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        var minimum = this.minimum ? this.minimum : (adaptorMin ? adaptorMin : null);\n        var maximum = this.maximum ? this.maximum : (adaptorMax ? adaptorMax : null);\n        if (minimum === null && maximum === null) {\n            min = 0;\n            max = this.maxLength * this.increment;\n            for (var i = min; i <= max; i = i + (interval * this.increment)) {\n                this.axisLabels.push(i.toString());\n                this.tooltipLabels.push(i.toString());\n                this.labelValue.push(i.toString());\n            }\n            this.min = 0;\n            this.max = this.maxLength;\n            this.axisLabelSize = (max - min) / this.increment + 1;\n            this.axisLabelInterval = interval;\n        }\n        else {\n            if (minimum !== null && maximum === null) {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = increaseDateTimeInterval(min, this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else if (minimum === null && maximum !== null) {\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n                min = increaseDateTimeInterval(max, -this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n            }\n            this.format = heatmap.intl.getDateFormat({\n                format: this.labelFormat, skeleton: this.getSkeleton()\n            });\n            var tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.axisLabels.push(value);\n                if (this.showLabelOn !== 'None') {\n                    interval = this.calculateLabelInterval(tempInterval);\n                    this.dateTimeAxisLabelInterval.push(interval);\n                }\n                tempInterval = increaseDateTimeInterval(tempInterval, interval, this.intervalType, this.increment).getTime();\n            }\n            this.min = 0;\n            this.axisLabelInterval = interval;\n            this.axisLabelSize = this.getTotalLabelLength(min, max); // this.tooltipLabels.length;\n            this.max = this.axisLabelSize - 1;\n            tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.tooltipLabels.push(value);\n                this.labelValue.push(new Date(tempInterval));\n                tempInterval = increaseDateTimeInterval(tempInterval, 1, this.intervalType, this.increment).getTime();\n            }\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    Axis.prototype.calculateLabelInterval = function (interval) {\n        var year = new Date(interval).getFullYear();\n        var month = new Date(interval).getMonth() + 1;\n        var day = new Date(interval).getDate();\n        var numberOfDays;\n        var tempInterval;\n        if (this.showLabelOn === 'Years' || this.showLabelOn === 'Months') {\n            if (this.showLabelOn === 'Years' && this.intervalType === 'Months') {\n                tempInterval = Math.ceil(12 / this.increment);\n            }\n            else {\n                numberOfDays = this.showLabelOn === 'Years' ? year % 4 === 0 ? 366 : 365 : new Date(year, month, 0).getDate();\n                numberOfDays += 1 - day;\n                tempInterval = this.intervalType === 'Days' ? Math.ceil(numberOfDays / this.increment) : this.intervalType === 'Hours' ?\n                    Math.ceil((numberOfDays * 24) / this.increment) : this.intervalType === 'Minutes' ?\n                    Math.ceil((numberOfDays * 24 * 60) / this.increment) : 1;\n            }\n        }\n        else if (this.showLabelOn === 'Days') {\n            tempInterval = this.intervalType === 'Hours' ? Math.ceil(24 / this.increment) : this.intervalType === 'Minutes' ?\n                Math.ceil((24 * 60) / this.increment) : 1;\n        }\n        else if (this.showLabelOn === 'Hours') {\n            var minutes = new Date(interval).getMinutes();\n            tempInterval = this.intervalType === 'Minutes' ? Math.ceil((60 - minutes) / this.increment) : 1;\n        }\n        else {\n            tempInterval = 1;\n        }\n        return tempInterval;\n    };\n    /**\n     * @private\n     */\n    Axis.prototype.getSkeleton = function () {\n        var skeleton;\n        if (this.intervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (this.intervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (this.intervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (this.intervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (this.intervalType === 'Minutes') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    };\n    /** @private */\n    Axis.prototype.getTotalLabelLength = function (min, max) {\n        var length = 0;\n        var minimum = new Date(min);\n        var maximum = new Date(max);\n        var difference;\n        var days;\n        switch (this.intervalType) {\n            case 'Years':\n                var years = ((maximum.getFullYear() - minimum.getFullYear()) / this.increment) + 1;\n                length = Math.floor(years);\n                break;\n            case 'Months':\n                var months = (maximum.getFullYear() - minimum.getFullYear()) * 12;\n                months -= minimum.getMonth();\n                months += maximum.getMonth();\n                length = months <= 0 ? 1 : Math.floor((months / this.increment) + 1);\n                break;\n            case 'Days':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                days = Math.floor(difference / (1000 * 3600 * 24));\n                length = Math.floor((days / this.increment) + 1);\n                break;\n            case 'Hours':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var hours = Math.floor(difference / (1000 * 3600));\n                length = Math.floor(hours / this.increment) + 1;\n                break;\n            case 'Minutes':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var minutes = Math.floor(difference / (1000 * 60));\n                length = Math.floor(minutes / this.increment) + 1;\n                break;\n        }\n        return length;\n    };\n    /**\n     * Clear the axis label collection\n     * @private\n     */\n    Axis.prototype.clearAxisLabel = function () {\n        this.axisLabels = [];\n        this.tooltipLabels = [];\n        this.dateTimeAxisLabelInterval = [];\n        this.labelValue = [];\n    };\n    __decorate([\n        Complex({ text: '', textStyle: Theme.axisTitleFont }, Title)\n    ], Axis.prototype, \"title\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"labels\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Axis.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(0)\n    ], Axis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property('Category')\n    ], Axis.prototype, \"valueType\", void 0);\n    __decorate([\n        Property(1)\n    ], Axis.prototype, \"increment\", void 0);\n    __decorate([\n        Property('None')\n    ], Axis.prototype, \"showLabelOn\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"interval\", void 0);\n    __decorate([\n        Property('')\n    ], Axis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('Days')\n    ], Axis.prototype, \"intervalType\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Axis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 0, type: 'Rectangle' }, AxisLabelBorder)\n    ], Axis.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelLabels)\n    ], Axis.prototype, \"multiLevelLabels\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { Rect, measureText, TextOption, rotateTextSize, textTrim, CanvasTooltip, PathOption, textWrap } from '../utils/helper';\nimport { sum, titlePositionX, LineOption, Line, DrawSvgCanvas, TextBasic, titlePositionY } from '../utils/helper';\nimport { extend, Browser } from '@syncfusion/ej2-base';\nvar AxisHelper = /** @class */ (function () {\n    function AxisHelper(heatMap) {\n        this.heatMap = heatMap;\n        this.padding = 10;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    /**\n     * To render the x and y axis.\n     *  @private\n     */\n    AxisHelper.prototype.renderAxes = function () {\n        this.initialClipRect = this.heatMap.initialClipRect;\n        var heatMap = this.heatMap;\n        var axisElement;\n        var element;\n        if (!heatMap.enableCanvasRendering) {\n            axisElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'AxisCollection' });\n        }\n        var axes = this.heatMap.axisCollections;\n        for (var i = 0, len = axes.length; i < len; i++) {\n            var axis = axes[i];\n            var optionsLine = {};\n            if (axis.orientation === 'Horizontal') {\n                if (!heatMap.enableCanvasRendering) {\n                    element = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisGroup' });\n                }\n                this.drawXAxisLine(element, axis);\n                this.drawXAxisTitle(axis, element, axis.rect);\n                this.drawXAxisLabels(axis, element, axis.rect);\n            }\n            else {\n                element = heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisGroup' });\n                this.drawYAxisLine(element, axis);\n                this.drawYAxisTitle(axis, element, axis.rect);\n                this.drawYAxisLabels(axis, element, axis.rect);\n            }\n            if (axis.multiLevelLabels.length > 0) {\n                this.drawMultiLevels(element, axis);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                axisElement.appendChild(element);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.heatMap.svgObject.appendChild(axisElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisLine = function (parent, axis) {\n        var y = this.initialClipRect.y + (!axis.opposedPosition ? this.initialClipRect.height : 0);\n        var line = new LineOption(this.heatMap.element.id + '_XAxisLine', new Line(this.initialClipRect.x, y, this.initialClipRect.x + this.initialClipRect.width, y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawYAxisLine = function (parent, axis) {\n        var x = this.initialClipRect.x + ((!axis.opposedPosition) ? 0 : this.initialClipRect.width);\n        var line = new LineOption(this.heatMap.element.id + '_YAxisLine', new Line(x, this.initialClipRect.y, x, this.initialClipRect.height + this.initialClipRect.y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawXAxisTitle = function (axis, parent, rect) {\n        var titlepadding = (axis.textStyle.size === '0px' ? 0 : 10);\n        var y = rect.y + (!axis.opposedPosition ? (axis.maxLabelSize.height + titlepadding +\n            sum(axis.xAxisMultiLabelHeight)) : -(axis.maxLabelSize.height + titlepadding + sum(axis.xAxisMultiLabelHeight)));\n        if (axis.title.text) {\n            var heatMap = this.heatMap;\n            var title = axis.title;\n            var elementSize = measureText(title.text, title.textStyle);\n            var padding = this.padding;\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n            var options = new TextOption(heatMap.element.id + '_XAxisTitle', new TextBasic(rect.x + titlePositionX(rect.width, 0, 0, title.textStyle), y + padding, anchor, title.text), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            this.drawSvgCanvas.createText(options, parent, title.text);\n        }\n    };\n    AxisHelper.prototype.drawYAxisTitle = function (axis, parent, rect) {\n        if (axis.title.text) {\n            var title = axis.title;\n            var heatMap = this.heatMap;\n            var labelRotation = (axis.opposedPosition) ? 90 : -90;\n            var elementSize = measureText(title.text, title.textStyle);\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            var padding = 10;\n            padding = axis.opposedPosition ? padding : -padding;\n            var titlepadding = (axis.textStyle.size === '0px' ? 0 : padding);\n            var x = rect.x + titlepadding + ((axis.opposedPosition) ? axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight) :\n                -(axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight)));\n            var y = rect.y + titlePositionY(rect, 0, 0, title.textStyle) + (axis.opposedPosition ? this.padding : -this.padding);\n            var options = new TextOption(heatMap.element.id + '_YAxisTitle', new TextBasic(x, y - this.padding, anchor, title.text, labelRotation, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', 'auto'), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            if (!this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.createText(options, parent, title.text);\n            }\n            else {\n                this.drawSvgCanvas.canvasDrawText(options, title.text, x, y);\n            }\n        }\n    };\n    /**\n     * Get the visible labels for both x and y axis\n     * @private\n     */\n    AxisHelper.prototype.calculateVisibleLabels = function () {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        var data = this.heatMap.dataSourceSettings;\n        var processLabels = !(data && data.isJsonData && data.adaptorType === 'Cell');\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            axis = axisCollection[i];\n            if (axis.valueType === 'Numeric' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n            else if (axis.valueType === 'DateTime' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else if (axis.valueType === 'Category') {\n                axis.clearAxisLabel();\n                axis.calculateCategoryAxisLabels();\n            }\n            axis.tooltipLabels = axis.isInversed ? axis.tooltipLabels.reverse() : axis.tooltipLabels;\n        }\n    };\n    /**\n     * Measure the title and labels rendering position for both X and Y axis.\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.measureAxis = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = axisCollection.length - 1; i >= 0; i--) {\n            axis = axisCollection[i];\n            var padding = axis.textStyle.size === '0px' ? 0 : this.padding;\n            axis.nearSizes = [];\n            axis.farSizes = [];\n            axis.computeSize(axis, heatmap, rect);\n            if (!axis.opposedPosition) {\n                if (axis.orientation === 'Horizontal') {\n                    rect.height -= (sum(axis.nearSizes) + padding);\n                }\n                else {\n                    rect.x += sum(axis.nearSizes) + padding;\n                    rect.width -= sum(axis.nearSizes) + padding;\n                }\n            }\n            else {\n                if (axis.orientation === 'Horizontal') {\n                    rect.y += sum(axis.farSizes) + padding;\n                    rect.height -= sum(axis.farSizes) + padding;\n                }\n                else {\n                    rect.width -= sum(axis.farSizes) + padding;\n                }\n            }\n        }\n    };\n    /**\n     * Calculate the X and Y axis line position\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.calculateAxisSize = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            var axis_1 = axisCollection[i];\n            axis_1.rect = extend({}, rect, null, true);\n            if (axis_1.orientation === 'Horizontal' && !axis_1.opposedPosition) {\n                axis_1.rect.y = rect.y + rect.height;\n                axis_1.rect.height = 0;\n            }\n            if (axis_1.orientation === 'Vertical' && axis_1.opposedPosition) {\n                axis_1.rect.x = rect.x + rect.width;\n                axis_1.rect.width = 0;\n            }\n            axis_1.multiLevelPosition = [];\n            for (var i_1 = 0; i_1 < axis_1.multiLevelLabels.length; i_1++) {\n                var multiPosition = axis_1.multiPosition(axis_1, i_1);\n                axis_1.multiLevelPosition.push(multiPosition);\n            }\n        }\n    };\n    AxisHelper.prototype.drawXAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.width / axis.axisLabelSize;\n        var compactInterval = 0;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var tempintervel = rect.width / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.width / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n            axisInterval = temp;\n        }\n        var padding = 10;\n        var lableStrtX = rect.x + (!axis.isInversed ? 0 : rect.width);\n        var labelPadding;\n        var angle = axis.angle;\n        padding = this.padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var lableRect = new Rect(lableStrtX, rect.y, interval, rect.height);\n            var label = (axis.labelIntersectAction === 'Trim' && axis.isIntersect) ? axis.valueType !== 'DateTime' ||\n                axis.showLabelOn === 'None' ? textTrim(interval * axisInterval, labels[i], axis.textStyle) :\n                textTrim(axis.dateTimeAxisLabelInterval[i] * interval, labels[i], axis.textStyle) : labels[i];\n            var elementSize = measureText(label, axis.textStyle);\n            var transform = void 0;\n            labelPadding = (axis.opposedPosition) ?\n                -(padding)\n                : (padding + ((angle % 360) === 0 ? (elementSize.height / 2) : 0));\n            var x = lableRect.x + ((!axis.isInversed) ?\n                (lableRect.width / 2) - (elementSize.width / 2) : -((lableRect.width / 2) + (elementSize.width / 2)));\n            if (axis.labelIntersectAction === 'Trim') {\n                x = (!axis.isInversed) ? (x >= lableRect.x ? x : lableRect.x) : (x > (lableStrtX - interval) ? x : (lableStrtX - interval));\n            }\n            else if (angle % 180 === 0) {\n                x = x < rect.x ? rect.x : x;\n                x = ((x + elementSize.width) > (rect.x + rect.width)) ? (rect.x + rect.width - elementSize.width) : x;\n            }\n            var y = rect.y + labelPadding;\n            this.drawXAxisBorder(axis, borderElement, axis.rect, x, elementSize.width, i);\n            if (angle % 360 !== 0) {\n                angle = (angle > 360) ? angle % 360 : angle;\n                var rotateSize = rotateTextSize(axis.textStyle, label, angle);\n                var diffHeight = axis.maxLabelSize.height - Math.ceil(rotateSize.height - elementSize.height);\n                var yLocation = axis.opposedPosition ? diffHeight / 2 : -diffHeight / 2;\n                x = lableRect.x + (axis.isInversed ? -(lableRect.width / 2) : (lableRect.width / 2));\n                y = y + (axis.opposedPosition ? -(rotateSize.height / 2) :\n                    (((angle % 360) === 180 || (angle % 360) === -180) ? 0 : (rotateSize.height) / 2));\n                transform = 'rotate(' + angle + ',' + x + ','\n                    + y + ')';\n            }\n            var options = new TextOption(heatMap.element.id + '_XAxis_Label' + i, new TextBasic(x, y, (angle % 360 === 0) ? 'start' : 'middle', label, angle, transform), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (angle !== 0 && this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.canvasDrawText(options, label);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, labelElement, label);\n            }\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStrtX = lableStrtX + (!axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStrtX = lableStrtX + (!axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n            }\n            if (label.indexOf('...') !== -1) {\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(labels[i], new Rect(x, y - elementSize.height, elementSize.width, elementSize.height)));\n            }\n            if (compactInterval !== 0) {\n                i = i + (compactInterval - 1);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawYAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.height / axis.axisLabelSize;\n        var compactInterval = 0;\n        var tempintervel = rect.height / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.height / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n        }\n        var padding = 10;\n        var lableStartY = rect.y + (axis.isInversed ? 0 : rect.height);\n        var anchor = axis.opposedPosition ? 'start' : 'end';\n        padding = axis.opposedPosition ? padding : -padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var labelRect = new Rect(rect.x, lableStartY, rect.width, interval);\n            var position = labelRect.height / 2; //titlePositionY(lableRect, 0, 0, axis.textStyle);\n            var x = labelRect.x + padding;\n            var y = labelRect.y + (axis.isInversed ? position : -position);\n            var options = new TextOption(heatMap.element.id + '_YAxis_Label' + i, new TextBasic(x, y, anchor, labels[i], 0, 'rotate(' + 0 + ',' + (x) + ',' + (y) + ')', 'middle'), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                options.dy = '1ex';\n            }\n            this.drawSvgCanvas.createText(options, labelElement, labels[i]);\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStartY = lableStartY + (axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStartY = lableStartY + (axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n                i = i + (compactInterval - 1);\n            }\n            var elementSize = measureText(labels[i], axis.textStyle);\n            this.drawYAxisBorder(axis, borderElement, axis.rect, y, elementSize.height, i);\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisBorder = function (axis, parent, rect, lableX, width, index) {\n        var interval = rect.width / axis.axisLabelSize;\n        var path = '';\n        var padding = 10;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = axis.isInversed ? rect.x + rect.width - (interval * index * axisInterval) :\n            rect.x + (interval * index * axisInterval);\n        var startY = rect.y;\n        var endX;\n        var endY;\n        endY = startY + (axis.opposedPosition ? -(axis.maxLabelSize.height + padding) : axis.maxLabelSize.height + padding);\n        endX = axis.isInversed ? startX - interval : startX + interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY);\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_1 = 3;\n                endY = startY + ((endY - startY) / 2) + (axis.opposedPosition ? 0 : 5);\n                var endY1 = axis.isInversed ? (lableX + width + padding_1) : (lableX - padding_1);\n                var endY2 = axis.isInversed ? (lableX - padding_1) : (lableX + width + padding_1);\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endY1 + ' ' + endY + ' ' + 'M' + ' ' + endY2 +\n                    ' ' + endY + ' ' + 'L' +\n                    ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    AxisHelper.prototype.drawYAxisBorder = function (axis, parent, rect, lableY, height, index) {\n        var interval = rect.height / axis.axisLabelSize;\n        var path = '';\n        var padding = 20;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = rect.x;\n        var startY = axis.isInversed ? rect.y + (interval * index * axisInterval) :\n            rect.y + rect.height - (interval * index * axisInterval);\n        var endX;\n        var endY;\n        endX = startX + (!axis.opposedPosition ? -(axis.maxLabelSize.width + padding) : axis.maxLabelSize.width + padding);\n        endY = axis.isInversed ? startY + interval : startY - interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY;\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                endX = startX - (startX - endX) / 2;\n                var endY1 = axis.isInversed ? lableY - height / 2 : lableY + height / 2;\n                var endY2 = axis.isInversed ? lableY + height / 2 : lableY - height / 2;\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY1 + ' ' + 'M' + ' ' +\n                    endX + ' ' + endY2 + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY;\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    /**\n     * To create border element for axis.\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createAxisBorderElement = function (axis, labelBorder, parent, index) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? '_XAxis_Label_Border' : '_YAxis_Label_Border';\n        var pathOptions = new PathOption(this.heatMap.element.id + id + index, 'transparent', axis.border.width, axis.border.color, 1, 'none', labelBorder);\n        if (!this.heatMap.enableCanvasRendering) {\n            var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    AxisHelper.prototype.drawMultiLevels = function (parent, axis) {\n        var element;\n        if (!this.heatMap.enableCanvasRendering) {\n            element = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_' + axis.orientation + '_MultiLevelLabel' });\n        }\n        axis.orientation === 'Horizontal' ? this.renderXAxisMultiLevelLabels(axis, element, axis.rect) :\n            this.renderYAxisMultiLevelLabels(axis, element, axis.rect);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(element);\n        }\n    };\n    /**\n     * render x axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var endX = 0;\n        var tooltip;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var width;\n        var textLength;\n        var position = (isInversed ? axis.rect.width : 0) + axis.rect.x;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_XAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                tooltip = false;\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startX = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startY = axis.multiLevelPosition[level].y;\n                endX = position + _this.calculateWidth(axis, categoryLabel.end, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endX - startX) : categoryLabel.maximumTextWidth) - padding;\n                y = startY + (opposedPosition ? -((axis.xAxisMultiLabelHeight[level] - labelSize.height)) : labelSize.height);\n                width = categoryLabel.maximumTextWidth ? categoryLabel.maximumTextWidth : labelSize.width;\n                x = !isInversed ? startX + padding : startX - gap;\n                if (multiLevel.alignment === 'Center') {\n                    x = ((endX - startX) / 2) + startX;\n                    x -= (labelSize.width > gap ? gap : labelSize.width) / 2;\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    x = !isInversed ? endX - padding : startX - padding;\n                    x -= (labelSize.width > gap ? gap : labelSize.width);\n                }\n                else {\n                    x = !isInversed ? startX + padding : endX + padding;\n                }\n                if (multiLevel.overflow === 'None' && labelSize.width > Math.abs(endX - startX)) {\n                    x = !isInversed ? startX + padding : startX - labelSize.width - padding;\n                    anchor = 'start';\n                }\n                var textBasic = new TextBasic(x, y, anchor, categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_XAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                if (multiLevel.overflow === 'Wrap') {\n                    options.text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    textLength = options.text.length;\n                }\n                else if (multiLevel.overflow === 'Trim') {\n                    options.text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    textLength = 1;\n                }\n                if (multiLevel.overflow === 'Wrap' && options.text.length > 1) {\n                    _this.drawSvgCanvas.createWrapText(options, multiLevel.textStyle, labelElement);\n                    for (var i_2 = 0; i_2 < options.text.length; i_2++) {\n                        if (options.text[i_2].indexOf('...') !== -1) {\n                            tooltip = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n                if (options.text.indexOf('...') !== -1 || options.text[0].indexOf('...') !== -1 || tooltip) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height * textLength)));\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderXAxisLabelBorder(level, axis, startX, startY, endX, pathRect, level, labelSize, gap, x);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisLabelBorder = function (labelIndex, axis, startX, startY, endX, path, level, labelSize, gap, x) {\n        var path1;\n        var path2;\n        var endY = startY + (axis.opposedPosition ? -(axis.xAxisMultiLabelHeight[labelIndex]) :\n            axis.xAxisMultiLabelHeight[labelIndex]);\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding = 3;\n                path1 = axis.isInversed ? (labelSize.width > gap ? gap : labelSize.width) + x + padding : x - padding;\n                path2 = axis.isInversed ? x - padding : (labelSize.width > gap ? gap : labelSize.width) + x + padding;\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + (endY - startY) / 2) + ' ' +\n                    'L' + ' ' + path1 + ' ' + (startY + (endY - startY) / 2) + ' ' + 'M' + ' ' + path2 + ' ' + (startY +\n                    (endY - startY) / 2) + ' ' + 'L' + ' ' + endX + ' ' + (startY + (endY - startY) / 2) +\n                    ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * render y axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var startY2;\n        var endY;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var interval = (axis.rect.height / axis.axisLabelSize) / axis.increment;\n        var text;\n        var position = (!isInversed ? axis.rect.height : 0) + axis.rect.y;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            startY2 = axis.multiLevelPosition[level].y;\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_YAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startY = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startX = axis.multiLevelPosition[level].x;\n                endY = position + _this.calculateWidth(axis, categoryLabel.start, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(startX) : categoryLabel.maximumTextWidth) - padding;\n                var maxWidth = Math.abs(startX - (startX - axis.multiLevelSize[level].width - 2 * padding)) / 2 -\n                    (labelSize.width / 2);\n                x = (axis.opposedPosition ? startX : startX - axis.multiLevelSize[level].width - 2 * padding) + maxWidth;\n                y = startY + padding;\n                if (multiLevel.overflow !== 'None') {\n                    if (multiLevel.overflow === 'Wrap') {\n                        text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    }\n                    else {\n                        text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    }\n                }\n                if (multiLevel.alignment === 'Center') {\n                    y += ((endY - startY) / 2 - (text.length * labelSize.height) / 2);\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    y = isInversed ? endY - labelSize.height / 2 : y - labelSize.height;\n                }\n                else {\n                    y = isInversed ? y + labelSize.height / 2 : endY + labelSize.height;\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderYAxisLabelBorder(level, axis, startX, startY, endY, pathRect, level, labelSize, gap, y);\n                }\n                var textBasic = new TextBasic(x, y, 'start', categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_YAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                options.text = text;\n                _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                if (options.text.indexOf('...') !== -1) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height)));\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisLabelBorder = function (labelIndex, axis, startX, startY, endY, path, level, labelSize, gap, y) {\n        var padding = 20;\n        var path1;\n        var path2;\n        var endX = startX - (axis.opposedPosition ? -(axis.multiLevelSize[labelIndex].width + padding) :\n            (axis.multiLevelSize[labelIndex].width + padding));\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_2 = 10;\n                path1 = axis.isInversed ? (y - padding_2 - 5) : (y + (labelSize.height) - padding_2);\n                path2 = axis.isInversed ? (y + (labelSize.height) - padding_2) : (y - padding_2 - 5);\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + startY + ' ' +\n                    'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + path1 + ' ' + 'M' + ' ' + (startX + (endX - startX) / 2) +\n                    ' ' + path2 + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' +\n                    endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * create borer element\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createBorderElement = function (borderIndex, axis, path, parent) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? 'XAxis' : 'YAxis';\n        var pathOptions = new PathOption(this.heatMap.element.id + '_' + id + '_MultiLevel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color, 1, '', path);\n        var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    /**\n     * calculate left position of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateLeftPosition = function (axis, start, label, rect) {\n        var value;\n        var interval;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                start -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * start * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(start, axis, true, rect);\n            value = axis.isInversed ? -interval : interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    /**\n     * calculate width of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateWidth = function (axis, label, end, rect) {\n        var interval;\n        var value;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                end -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * (end + 1) * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(end, axis, false, rect);\n            value = interval;\n            value = axis.isInversed ? -value : value;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    AxisHelper.prototype.calculateNumberOfDays = function (date, axis, start, rect) {\n        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        var oneMinute = 60 * 1000;\n        var oneHour = 60 * 60 * 1000;\n        var firstDate;\n        var secondDate;\n        var labels = axis.labelValue;\n        var position;\n        var interval = (axis.orientation === 'Horizontal' ? rect.width : rect.height) / axis.axisLabelSize;\n        var givenDate = new Date(Number(date));\n        var days = 0;\n        for (var index = 0; index < axis.axisLabelSize; index++) {\n            firstDate = new Date(Number(labels[index]));\n            secondDate = axis.isInversed ? new Date(Number(labels[index - 1])) : new Date(Number(labels[index + 1]));\n            if (index === (axis.isInversed ? 0 : axis.axisLabelSize - 1)) {\n                secondDate = new Date(Number(labels[index]));\n                if (axis.intervalType === 'Hours') {\n                    secondDate = new Date(Number(secondDate.setHours(secondDate.getHours() + 1)));\n                }\n                else if ((axis.intervalType === 'Minutes')) {\n                    secondDate = new Date(Number(secondDate.setMinutes(secondDate.getMinutes() + 1)));\n                }\n                else if ((axis.intervalType === 'Days')) {\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + 1)));\n                }\n                else {\n                    var numberOfDays = axis.intervalType === 'Months' ?\n                        new Date(secondDate.getFullYear(), secondDate.getMonth() + 1, 0).getDate() :\n                        secondDate.getFullYear() % 4 === 0 ? 366 : 365;\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + numberOfDays)));\n                }\n            }\n            if (Number(firstDate) <= date && Number(secondDate) >= date) {\n                if (axis.intervalType === 'Minutes' || axis.intervalType === 'Hours') {\n                    var totalMinutes = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneMinute)));\n                    var minutesInHours = Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneMinute));\n                    days = (interval / totalMinutes) * minutesInHours;\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n                else {\n                    var numberOfDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\n                    start ? givenDate.getDate() : givenDate.setDate(givenDate.getDate() + 1);\n                    if (numberOfDays !== 0) {\n                        days = (interval / numberOfDays) * (Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneDay)));\n                    }\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n            }\n        }\n        return position;\n    };\n    return AxisHelper;\n}());\nexport { AxisHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, extend, merge, Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, TextBasic, Path, PathAttributes, RectOption, CircleOption, TextOption, CurrentRect, DrawSvgCanvas } from '../utils/helper';\nimport { convertHexToColor, colorNameToHex, formatValue } from '../utils/helper';\nimport { CellColor } from '../utils/colorMapping';\nimport { Border, Font, BubbleTooltipData, BubbleSize } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the CellSettings property in the Heatmap.\n */\nvar CellSettings = /** @class */ (function (_super) {\n    __extends(CellSettings, _super);\n    function CellSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property('')\n    ], CellSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"enableCellHighlighting\", void 0);\n    __decorate([\n        Complex({}, BubbleSize)\n    ], CellSettings.prototype, \"bubbleSize\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], CellSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.rectLabelFont, Font)\n    ], CellSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Rect')\n    ], CellSettings.prototype, \"tileType\", void 0);\n    __decorate([\n        Property('Color')\n    ], CellSettings.prototype, \"bubbleType\", void 0);\n    __decorate([\n        Property(false)\n    ], CellSettings.prototype, \"isInversedBubbleSize\", void 0);\n    return CellSettings;\n}(ChildProperty));\nexport { CellSettings };\nvar Series = /** @class */ (function () {\n    function Series(heatMap) {\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(this.heatMap);\n        this.cellColor = new CellColor(this.heatMap);\n    }\n    /**\n     * To render rect series.\n     * @return {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Series.prototype.renderRectSeries = function () {\n        this.createSeriesGroup();\n        var heatMap = this.heatMap;\n        var isValueInRange = false;\n        heatMap.xLength = heatMap.axisCollections[0].axisLabelSize;\n        heatMap.yLength = heatMap.axisCollections[1].axisLabelSize; // Series Part\n        var tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n        var tempY = Math.round(heatMap.initialClipRect.y * 100) / 100;\n        var dataXIndex = 0;\n        var dataYIndex = 0;\n        var cellSetting = heatMap.cellSettings;\n        var tempWidth = Math.round(((heatMap.initialClipRect.width -\n            (cellSetting.border.width / 2)) / heatMap.xLength) * 100) / 100;\n        var tempHeight = Math.round(((heatMap.initialClipRect.height -\n            (cellSetting.border.width / 2)) / heatMap.yLength) * 100) / 100;\n        var tempVal = 0;\n        var themeStyle = heatMap.themeStyle;\n        var tempBorder;\n        var tempRectPosition = [];\n        var circleRadius;\n        tempBorder = cellSetting.border;\n        var borderColor;\n        var displayText;\n        this.rectPositionCollection = [];\n        this.color = '';\n        this.bubbleColorValue = [];\n        if (heatMap.yAxis.opposedPosition) {\n            tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n        }\n        circleRadius = this.getBubbleRadius(tempWidth, tempHeight);\n        for (var x = 0; x < (heatMap.xLength * heatMap.yLength); x++) {\n            if (heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataYIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataYIndex];\n            }\n            else if (heatMap.paletteSettings.colorGradientMode === 'Row' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataXIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataXIndex];\n            }\n            this.setTextAndColor(dataXIndex, dataYIndex);\n            var rectPosition = new CurrentRect(0, 0, 0, 0, 0, '', 0, 0, 0, 0, true, '', '', true);\n            borderColor = tempBorder.color;\n            if (this.heatMap.bubbleSizeWithColor) {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, extend('', this.bubbleColorValue, null, true), x, dataYIndex, dataXIndex);\n            }\n            else {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, this.text, x, dataYIndex, dataXIndex);\n            }\n            if (cellSetting.showLabel) {\n                displayText = this.getFormatedText(this.text, cellSetting.format);\n            }\n            else {\n                displayText = '';\n            }\n            rectPosition.displayText = displayText;\n            if (!isNullOrUndefined(this.heatMap.cellRender)) {\n                displayText = this.cellRendering(rectPosition, displayText);\n            }\n            if ((heatMap.renderingMode === 'Canvas' && parseFloat(tempBorder.width.toString()) === 0) || (!borderColor &&\n                cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                borderColor = this.color;\n            }\n            if (cellSetting.tileType === 'Rect') { // Rectangle/Tile Series\n                this.renderTileCell(rectPosition, tempBorder, x, this.color, borderColor);\n                this.updateLabelVisibleStatus(tempWidth, tempHeight, displayText);\n            }\n            else {\n                if (cellSetting.bubbleType === 'Color') { // Bubble by same size and different color Series\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, circleRadius);\n                    this.updateLabelVisibleStatus((circleRadius * 2) - 12, (circleRadius * 2) - 6, displayText); // 6, 12 - circle padding\n                }\n                else if (!isNullOrUndefined(this.text) && (cellSetting.bubbleType === 'Size' || cellSetting.bubbleType === 'SizeAndColor')\n                    && this.text.toString() !== '') { // Bubble by same color and different size Series\n                    if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                        this.heatMap.minColorValue = this.heatMap.dataSourceMinValue;\n                        this.heatMap.maxColorValue = this.heatMap.dataSourceMaxValue;\n                    }\n                    var tempCircleRadius = this.getRadiusBypercentage(parseFloat(this.text.toString()), heatMap.dataSourceMinValue, heatMap.dataSourceMaxValue, circleRadius);\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, tempCircleRadius);\n                    this.updateLabelVisibleStatus((tempCircleRadius * 2) - 12, (tempCircleRadius * 2) - 6, displayText);\n                }\n                else if (cellSetting.bubbleType === 'Sector' && !isNullOrUndefined(this.text) && this.text.toString() !== '') {\n                    this.renderSectorCell(rectPosition, tempBorder, x.toString(), this.color, borderColor, circleRadius, this.text);\n                    this.checkLabelXDisplay = false;\n                    this.checkLabelYDisplay = false;\n                }\n            }\n            tempRectPosition.push(rectPosition);\n            if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                isValueInRange = this.isCellValueInRange(dataXIndex, dataYIndex);\n                rectPosition.visible = isValueInRange;\n            }\n            if (cellSetting.showLabel && this.checkLabelYDisplay && this.checkLabelXDisplay) {\n                var themeCellTextStyle = cellSetting.textStyle;\n                var options = new TextOption(heatMap.element.id + '_HeatMapRectLabels_' + x, new TextBasic(Math.round((tempX + tempWidth / 2) * 100) / 100, Math.round((tempY + tempHeight / 2) * 100) / 100, 'middle', displayText, null, null, 'middle'), themeCellTextStyle, themeCellTextStyle.color || this.getSaturatedColor(this.color));\n                rectPosition.textId = options.id;\n                if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                    options.fill = isValueInRange ? options.fill : this.heatMap.themeStyle.toggledColor;\n                }\n                if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                    options.dy = this.heatMap.cellSettings.tileType === 'Bubble' ? '0.5ex' : '1ex';\n                }\n                this.drawSvgCanvas.createText(options, this.containerTextObject, displayText);\n            }\n            if (tempVal === heatMap.xLength - 1) {\n                tempY = Math.round((tempY + tempHeight) * 100) / 100;\n                tempVal = 0;\n                dataYIndex = 0;\n                if (heatMap.yAxis.opposedPosition) {\n                    tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n                }\n                else {\n                    tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n                }\n                this.rectPositionCollection.push(tempRectPosition);\n                tempRectPosition = [];\n                dataXIndex++;\n            }\n            else {\n                tempX = Math.round((tempX + tempWidth) * 100) / 100;\n                tempVal++;\n                dataYIndex++;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            heatMap.svgObject.appendChild(this.containerRectObject);\n            if (cellSetting.showLabel && !(cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                heatMap.svgObject.appendChild(this.containerTextObject);\n            }\n        }\n    };\n    /**\n     * To toggle the cell text color based on legend selection.\n     */\n    Series.prototype.isCellValueInRange = function (dataXIndex, dataYIndex) {\n        var isValueInRange = false;\n        for (var i = 0; i < this.heatMap.toggleValue.length; i++) {\n            var minValue = void 0;\n            var maxValue = void 0;\n            minValue = (i === 0) && !this.heatMap.isColorRange ? this.heatMap.dataSourceMinValue : this.heatMap.isColorRange ?\n                this.heatMap.toggleValue[i].startValue : this.heatMap.toggleValue[i].value;\n            if (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor') {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.maxColorValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            else {\n                maxValue = (i === this.heatMap.toggleValue.length - 1 && !this.heatMap.isColorRange) ?\n                    this.heatMap.dataSourceMaxValue : this.heatMap.isColorRange ?\n                    this.heatMap.toggleValue[i].endValue : this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            // tslint:disable-next-line:no-any\n            var clonedDataSource = this.heatMap.clonedDataSource;\n            var bubbleText = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '';\n            var text = parseFloat(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor' ?\n                bubbleText.toString() : this.text.toString());\n            if (isNaN(text)) {\n                isValueInRange = true;\n            }\n            else if (!isNaN(text) && text >= minValue && text <= maxValue) {\n                if (!this.heatMap.toggleValue[i].visible) {\n                    isValueInRange = false;\n                    break;\n                }\n                else {\n                    isValueInRange = true;\n                    break;\n                }\n            }\n            else if (this.heatMap.isColorRange &&\n                maxValue >= this.heatMap.toggleValue[i].endValue && i === this.heatMap.toggleValue.length - 1) {\n                isValueInRange = true;\n                break;\n            }\n        }\n        return isValueInRange;\n    };\n    /**\n     * To customize the cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.cellRendering = function (rectPosition, text) {\n        var xAxis = this.heatMap.axisCollections[0];\n        var yAxis = this.heatMap.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var yLabelValue = yAxis.labelValue.slice().reverse();\n        var argData = {\n            heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n            cancel: false,\n            name: 'cellRender',\n            value: rectPosition.value,\n            xLabel: xLabels[rectPosition.xIndex].toString(),\n            yLabel: yLabels[rectPosition.yIndex].toString(),\n            displayText: text,\n            xValue: xAxis.labelValue[rectPosition.xIndex],\n            yValue: yLabelValue[rectPosition.yIndex],\n            cellColor: this.color\n        };\n        this.heatMap.trigger('cellRender', argData);\n        this.color = argData.cellColor;\n        return argData.displayText;\n    };\n    /**\n     * To set color and text details.\n     * @private\n     */\n    Series.prototype.setTextAndColor = function (dataXIndex, dataYIndex) {\n        var cellSetting = this.heatMap.cellSettings;\n        this.bubbleColorValue = [];\n        var adaptData = this.heatMap.dataSourceSettings;\n        // tslint:disable-next-line:no-any\n        var clonedDataSource = this.heatMap.clonedDataSource;\n        if (this.heatMap.bubbleSizeWithColor) {\n            this.text = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][0]) &&\n                clonedDataSource[dataXIndex][dataYIndex][0].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][0] : '';\n            this.color = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ?\n                this.cellColor.getColorByValue(clonedDataSource[dataXIndex][dataYIndex][1])\n                : this.heatMap.isColorValueExist ? this.heatMap.emptyPointColor : this.cellColor.getColorByValue(this.text);\n            var tempBubbleCollection = new BubbleTooltipData(adaptData.isJsonData && adaptData.adaptorType === 'Cell' ? adaptData.bubbleDataMapping.size : null, this.text, 'Size');\n            this.bubbleColorValue.push(tempBubbleCollection);\n            this.bubbleColorValue.push({\n                mappingName: adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                    adaptData.bubbleDataMapping.color : null,\n                bubbleData: !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                    clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '',\n                valueType: 'Color'\n            });\n        }\n        else {\n            this.text = clonedDataSource[dataXIndex][dataYIndex];\n            this.color = this.cellColor.getColorByValue(this.text);\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.createSeriesGroup = function () {\n        if (!this.heatMap.enableCanvasRendering) {\n            this.containerRectObject = this.heatMap.renderer.createGroup({\n                id: this.heatMap.element.id + '_Container_RectGroup'\n            });\n            if (this.heatMap.cellSettings.showLabel &&\n                !(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                this.containerTextObject = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_Container_TextGroup', transform: 'translate( 0, 0)' });\n            }\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.updateRectDetails = function (rectPosition, tempX, tempY, tempWidth, tempHeight, text, x, dataXIndex, dataYIndex) {\n        rectPosition.x = tempX;\n        rectPosition.y = tempY;\n        rectPosition.width = tempWidth;\n        rectPosition.height = tempHeight;\n        rectPosition.value = text;\n        rectPosition.id = this.heatMap.element.id + '_HeatMapRect_' + x;\n        rectPosition.xIndex = dataXIndex;\n        rectPosition.yIndex = dataYIndex;\n    };\n    /**\n     * To Render Tile Cell.\n     * @private\n     */\n    Series.prototype.renderTileCell = function (rectPosition, tempBorder, x, color, borderColor) {\n        var rect = new RectOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, new Rect(rectPosition.x, rectPosition.y, rectPosition.width, rectPosition.height), borderColor || this.heatMap.themeStyle.cellBorder, tempBorder.radius, tempBorder.radius);\n        this.drawSvgCanvas.drawRectangle(rect, this.containerRectObject, true);\n    };\n    /**\n     * To get bubble radius.\n     * @private\n     */\n    Series.prototype.getBubbleRadius = function (width, height) {\n        var radius = (width / 2) - 2;\n        if (height / 2 < width / 2) {\n            radius = (height / 2) - 2;\n        }\n        return radius < 0 ? 0 : radius;\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderSectorCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius, text) {\n        var curve;\n        var startAngle;\n        var endAngle;\n        var cX;\n        var cY;\n        var X1;\n        var Y1;\n        var tempcX;\n        var tempcY;\n        var pathBorderWidth;\n        var centerX = Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100;\n        var centerY = Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100;\n        var tempColor = color;\n        var sectorContibution = this.getRadiusBypercentage(text, this.heatMap.dataSourceMinValue, this.heatMap.dataSourceMaxValue, 360); // Circle total angle.\n        for (var y = 0; y < 2; y++) {\n            pathBorderWidth = parseFloat(tempBorder.width.toString());\n            if (y === 0) {\n                curve = sectorContibution >= 180 ? 1 : 0;\n                startAngle = -90;\n                if (sectorContibution === 0) {\n                    endAngle = 270; // (360 - 90) for zero position adjustment.\n                }\n                else {\n                    endAngle = (sectorContibution - 90);\n                }\n                cX = Math.round((centerX + circleRadius * Math.cos((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                cY = Math.round((centerY + circleRadius * Math.sin((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                X1 = Math.round(centerX * 100) / 100;\n                Y1 = Math.round((centerY - circleRadius) * 100) / 100;\n                if (sectorContibution === 0) {\n                    tempColor = this.heatMap.emptyPointColor;\n                }\n            }\n            else {\n                curve = sectorContibution >= 180 ? 0 : 1;\n                startAngle = endAngle;\n                endAngle = 270; // (360 - 90) for zero position adjustment.\n                tempColor = this.heatMap.emptyPointColor;\n                x = x + '_Unfilled';\n                tempcX = cX;\n                tempcY = cY;\n                cX = X1;\n                cY = Y1;\n                X1 = tempcX;\n                Y1 = tempcY;\n                if (sectorContibution === 0) {\n                    pathBorderWidth = 1;\n                    borderColor = color;\n                }\n            }\n            var path = new Path('', false, centerX, centerY, X1, Y1, cX, cY, startAngle, endAngle, circleRadius, true);\n            var sector = new PathAttributes(this.heatMap.element.id + '_HeatMapRect_' + x, path, tempColor, tempBorder, pathBorderWidth, 1, borderColor);\n            this.calculateShapes(sector, path, sectorContibution, curve);\n            this.drawSvgCanvas.drawPath(sector, path, this.containerRectObject);\n            if (sectorContibution === 360) {\n                break;\n            }\n        }\n    };\n    /**\n     * To Render sector Cell.\n     * @private\n     */\n    Series.prototype.calculateShapes = function (options, path, sectorContibution, curve) {\n        var pathString;\n        var clockWise;\n        switch (sectorContibution) {\n            case 360:\n            case 0:\n                if (sectorContibution === 0 && path.start === path.end) {\n                    pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x + ' ' + (path.y - path.radius);\n                }\n                else {\n                    pathString = !this.heatMap.enableCanvasRendering ? 'M' + ' ' + options.x + ' ' + options.y + ' ' : '';\n                    pathString = pathString + 'm' + ' ' + (-path.radius) + ' ' + '0' + ' ' +\n                        'a' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (path.radius * 2) + ' ' + '0' + ' ' + 'a' + ' ' + path.radius +\n                        ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (-(path.radius * 2)) + ' ' + '0' + ' ';\n                }\n                merge(options, { 'd': pathString });\n                break;\n            default:\n                pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x1 + ' ' + path.y1 + ' ' +\n                    'A' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + curve + ' ' + '1' + ' ' +\n                    path.cx + ' ' + path.cy + ' ' + 'Z';\n                merge(options, { 'd': pathString });\n                break;\n        }\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderBubbleCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius) {\n        var circle = new CircleOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, borderColor || this.heatMap.themeStyle.cellBorder, Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100, Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100, circleRadius);\n        this.drawSvgCanvas.drawCircle(circle, this.containerRectObject);\n    };\n    /**\n     * To find whether the X,Y Label need to display or not.\n     * @private\n     */\n    Series.prototype.updateLabelVisibleStatus = function (tempWidth, tempHeight, displayText) {\n        if (this.heatMap.cellSettings.showLabel) {\n            this.checkLabelYDisplay = tempHeight > parseInt(this.heatMap.cellSettings.textStyle.size, 10) ? true : false;\n            this.checkLabelXDisplay = tempWidth > (displayText.length *\n                (parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2)) ? true : false;\n        }\n    };\n    /**\n     * To find percentage value.\n     * @private\n     */\n    Series.prototype.getRadiusBypercentage = function (text, min, max, radius) {\n        var minimum = parseInt(this.heatMap.cellSettings.bubbleSize.minimum, 10);\n        var maximum = parseInt(this.heatMap.cellSettings.bubbleSize.maximum, 10);\n        if (minimum < 0 || minimum > 100 || isNaN(minimum)) {\n            minimum = 0;\n        }\n        if (maximum < 0 || maximum > 100 || isNaN(maximum)) {\n            maximum = 100;\n        }\n        var valueInPrecentage = ((text - min) /\n            (max - min)) * 100;\n        valueInPrecentage = isNaN(valueInPrecentage) ? 100 : valueInPrecentage;\n        if ((this.heatMap.bubbleSizeWithColor ||\n            (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Size'))) {\n            if (this.heatMap.cellSettings.isInversedBubbleSize) {\n                valueInPrecentage = 100 - valueInPrecentage;\n            }\n            valueInPrecentage = ((valueInPrecentage * (maximum - minimum)) / 100) + minimum;\n        }\n        radius = radius * (valueInPrecentage / 100);\n        return (Math.round(radius * 100) / 100) < 0 ? 0 : (Math.round(radius * 100) / 100);\n    };\n    /**\n     * To find saturated color for datalabel.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.R * 299 + rgbValue.G * 587 + rgbValue.B * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    /**\n     * To highlight the mouse hovered rect cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.highlightSvgRect = function (tempID) {\n        if (tempID.indexOf('Celltooltip') === -1) {\n            if (tempID.indexOf('_HeatMapRect') !== -1) {\n                if (tempID.indexOf('_HeatMapRectLabels_') !== -1) {\n                    var tempIndex = tempID.indexOf('_HeatMapRectLabels_') + 19;\n                    tempID = this.heatMap.element.id + '_HeatMapRect_' + tempID.slice(tempIndex);\n                }\n                var element = document.getElementById(tempID);\n                if (this.heatMap.tempRectHoverClass !== tempID) {\n                    if (this.heatMap.cellSettings.enableCellHighlighting) {\n                        var oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                        if (oldElement && !this.heatMap.rectSelected) {\n                            oldElement.setAttribute('opacity', '1');\n                        }\n                        if (element && !this.heatMap.rectSelected) {\n                            element.setAttribute('opacity', '0.65');\n                        }\n                    }\n                    this.heatMap.tempRectHoverClass = tempID;\n                }\n            }\n            else {\n                if (this.heatMap.cellSettings.enableCellHighlighting) {\n                    var oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                    if (oldElement && !this.heatMap.rectSelected) {\n                        oldElement.setAttribute('opacity', '1');\n                        this.heatMap.tempRectHoverClass = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To get the value depends to format.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getFormatedText = function (val, getFormat) {\n        var format = getFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = this.heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        var value = '';\n        if (val.toString() !== '') {\n            value = formatValue(isCustom, format, val, this.format);\n        }\n        return value;\n    };\n    /**\n     * To get mouse hovered cell details.\n     * @return {CurrentRect}\n     * @private\n     */\n    Series.prototype.getCurrentRect = function (x, y) {\n        var currentRect;\n        var firstRectDetails = [];\n        firstRectDetails.push(this.heatMap.heatMapSeries.rectPositionCollection[0][0]);\n        var rectX = Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) <\n            this.heatMap.axisCollections[0].axisLabelSize ?\n            Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) :\n            this.heatMap.axisCollections[0].axisLabelSize;\n        var rectY = Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) <\n            this.heatMap.axisCollections[1].axisLabelSize ?\n            Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) :\n            this.heatMap.axisCollections[1].axisLabelSize - 1;\n        rectX = rectX === 0 ? 1 : rectX;\n        currentRect = this.heatMap.heatMapSeries.rectPositionCollection[rectY][rectX - 1];\n        this.hoverXAxisLabel = this.heatMap.axisCollections[0].tooltipLabels[rectX - 1];\n        this.hoverXAxisValue = this.heatMap.axisCollections[0].labelValue[rectX - 1];\n        this.hoverYAxisLabel = this.heatMap.axisCollections[1].tooltipLabels[(this.heatMap.axisCollections[1].tooltipLabels.length - 1) - rectY];\n        this.hoverYAxisValue = this.heatMap.axisCollections[1].labelValue[(this.heatMap.axisCollections[1].labelValue.length - 1) - rectY];\n        return currentRect;\n    };\n    return Series;\n}());\nexport { Series };\n","/**\n * HeatMap tool tip file\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { createElement, Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\nimport { TooltipBorder, Font, } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the color property in Heatmap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({}, TooltipBorder)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.tooltipFont, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n *\n * The `Tooltip` module is used to render the tooltip for heatmap series.\n */\nvar Tooltip = /** @class */ (function () {\n    function Tooltip(heatMap) {\n        /* private */\n        this.isFirst = true;\n        /* private */\n        this.isFadeout = false;\n        this.heatMap = heatMap;\n    }\n    /**\n     * Get module name\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'Tooltip';\n    };\n    /**\n     * To show/hide Tooltip.\n     * @private\n     */\n    Tooltip.prototype.showHideTooltip = function (isShow, isFadeout) {\n        var ele = document.getElementById(this.heatMap.element.id + 'Celltooltipcontainer');\n        if (!isShow) {\n            if (ele && ele.style.visibility !== 'hidden') {\n                if (this.tooltipObject && isFadeout) {\n                    this.tooltipObject.fadeOut();\n                }\n                else {\n                    if (this.tooltipObject && this.tooltipObject.element) {\n                        var tooltipElement = this.tooltipObject.element.firstChild;\n                        tooltipElement.setAttribute('opacity', '0');\n                    }\n                }\n                ele.style.visibility = 'hidden';\n            }\n            this.isFadeout = true;\n        }\n        else {\n            ele.style.visibility = 'visible';\n        }\n    };\n    /**\n     * To destroy the Tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.destroy = function (heatMap) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    ;\n    /**\n     * To add Tooltip to the rect cell.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltip = function (currentRect, x, y, tempTooltipText) {\n        var offset = null;\n        if (this.heatMap.cellSettings.showLabel && this.heatMap.heatMapSeries.checkLabelXDisplay &&\n            this.heatMap.heatMapSeries.checkLabelYDisplay) {\n            offset = parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2;\n        }\n        this.tooltipObject = new tool({\n            enableAnimation: false,\n            offset: offset,\n            location: { x: x, y: y },\n            availableSize: this.heatMap.availableSize,\n            data: {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                value: currentRect.value,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n            },\n            theme: this.heatMap.theme,\n            content: tempTooltipText,\n            fill: this.heatMap.tooltipSettings.fill,\n            template: this.heatMap.tooltipSettings.template === '' ? null : this.heatMap.tooltipSettings.template,\n            border: {\n                width: this.heatMap.tooltipSettings.border.width,\n                color: this.heatMap.tooltipSettings.border.color\n            },\n            textStyle: {\n                size: this.heatMap.tooltipSettings.textStyle.size,\n                fontWeight: this.heatMap.tooltipSettings.textStyle.fontWeight.toLowerCase(),\n                color: this.heatMap.tooltipSettings.textStyle.color,\n                fontStyle: this.heatMap.tooltipSettings.textStyle.fontStyle.toLowerCase(),\n                fontFamily: this.heatMap.tooltipSettings.textStyle.fontFamily\n            },\n            areaBounds: {\n                height: this.heatMap.initialClipRect.height + this.heatMap.initialClipRect.y,\n                width: this.heatMap.initialClipRect.width, x: this.heatMap.initialClipRect.x\n            },\n        }, '#' + this.heatMap.element.id + 'Celltooltipcontainer');\n    };\n    /**\n     * To create div container for tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltipDiv = function (heatMap) {\n        var position = 'absolute';\n        var top = heatMap.enableCanvasRendering && heatMap.allowSelection ? heatMap.availableSize.height : 0;\n        var element2 = createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipcontainer',\n            styles: 'position:' + position + '; z-index: 3;top:-' + top + 'px'\n        });\n        this.heatMap.element.appendChild(createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipparent',\n            styles: 'position:relative'\n        })\n            .appendChild(element2));\n    };\n    /**\n     * To get default tooltip content.\n     * @private\n     */\n    Tooltip.prototype.getTooltipContent = function (currentRect, hetmapSeries) {\n        var value;\n        var content;\n        var heatMap = this.heatMap;\n        var adaptData = this.heatMap.dataSourceSettings;\n        if (heatMap.bubbleSizeWithColor) {\n            var xAxis = heatMap.xAxis.title && heatMap.xAxis.title.text !== '' ? heatMap.xAxis.title.text : 'X-Axis';\n            var yAxis = heatMap.yAxis.title && heatMap.yAxis.title.text !== '' ? heatMap.yAxis.title.text : 'Y-Axis';\n            var value1 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.size : 'Value 1';\n            var value2 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.color : 'Value 2';\n            value = hetmapSeries.getFormatedText(currentRect.value[0].bubbleData, this.heatMap.cellSettings.format);\n            content = [xAxis + ' : ' + hetmapSeries.hoverXAxisLabel + '<br/>'\n                    + yAxis + ' : ' + hetmapSeries.hoverYAxisLabel + '<br/>'\n                    + value1 + ' : ' + value + '<br/>'\n                    + value2 + ' : '\n                    + hetmapSeries.getFormatedText(currentRect.value[1].bubbleData, this.heatMap.cellSettings.format)];\n        }\n        else {\n            value = currentRect.value;\n            content = [hetmapSeries.hoverXAxisLabel + ' | ' + hetmapSeries.hoverYAxisLabel + ' : ' +\n                    hetmapSeries.getFormatedText(value, this.heatMap.cellSettings.format)];\n        }\n        return content;\n    };\n    /**\n     * To render tooltip.\n     * @private\n     */\n    Tooltip.prototype.renderTooltip = function (currentRect) {\n        var _this = this;\n        var hetmapSeries = this.heatMap.heatMapSeries;\n        var tempTooltipText = [''];\n        var showTooltip = this.heatMap.bubbleSizeWithColor ?\n            !isNullOrUndefined(currentRect.value) && !isNullOrUndefined(currentRect.value[0].bubbleData)\n                && currentRect.value[0].bubbleData.toString() !== '' ? true : false\n            : isNullOrUndefined(currentRect.value) || (!isNullOrUndefined(currentRect.value) &&\n                currentRect.value.toString() === '') ? false : true;\n        if (!showTooltip) {\n            this.showHideTooltip(false, false);\n            if (!currentRect.visible) {\n                this.showHideTooltip(false, false);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.heatMap.tooltipRender)) {\n                // this.tooltipObject.header = '';\n                // this.tooltipObject.content = this.getTemplateText(\n                //     currentRect, this.heatMap.tooltipTemplate, hetmapSeries.hoverXAxisLabel,\n                //     hetmapSeries.hoverYAxisLabel);\n                var content = this.getTooltipContent(currentRect, hetmapSeries);\n                var argData = {\n                    heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n                    cancel: false,\n                    name: 'tooltipRender',\n                    value: currentRect.value,\n                    xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                    yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                    xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                    yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                    content: content\n                };\n                this.heatMap.trigger('tooltipRender', argData, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        tempTooltipText = observedArgs.content;\n                        _this.tooltipCallback(currentRect, tempTooltipText);\n                    }\n                    else {\n                        if (_this.tooltipObject) {\n                            _this.showHideTooltip(false);\n                        }\n                    }\n                });\n            }\n            else {\n                //  this.tooltipObject.header = hetmapSeries.hoverYAxisLabel.toString();\n                tempTooltipText = this.getTooltipContent(currentRect, hetmapSeries);\n                this.tooltipCallback(currentRect, tempTooltipText);\n            }\n        }\n    };\n    /**\n     * To render tooltip.\n     */\n    Tooltip.prototype.tooltipCallback = function (currentRect, tempTooltipText) {\n        if (!this.tooltipObject) {\n            this.createTooltip(currentRect, currentRect.x + (currentRect.width / 2), currentRect.y + (currentRect.height / 2), tempTooltipText);\n        }\n        else {\n            this.tooltipObject.content = tempTooltipText;\n            this.tooltipObject.data = {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                value: currentRect.value,\n            };\n        }\n        this.showHideTooltip(true);\n        this.tooltipObject.enableAnimation = (this.isFirst || this.isFadeout) ? false : true;\n        this.isFirst = (this.isFirst) ? false : this.isFirst;\n        this.isFadeout = (this.isFadeout) ? false : this.isFadeout;\n        this.tooltipObject.location.x = currentRect.x + (currentRect.width / 2);\n        this.tooltipObject.location.y = currentRect.y + (currentRect.height / 2);\n        if (!currentRect.visible) {\n            this.showHideTooltip(false, false);\n        }\n    };\n    return Tooltip;\n}());\nexport { Tooltip };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nvar TwoDimensional = /** @class */ (function () {\n    function TwoDimensional(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To reconstruct proper two dimensional dataSource depends on min and max values.\n     *  @private\n     */\n    TwoDimensional.prototype.processDataSource = function (dataSource) {\n        // tslint:disable-next-line:no-any\n        var tempCloneData = extend([], dataSource, null, true);\n        this.heatMap.clonedDataSource = [];\n        this.completeDataSource = [];\n        var axis = this.heatMap.axisCollections;\n        var dataLength = axis[0].maxLength + 1;\n        var labelLength = axis[0].axisLabelSize + (axis[0].min > 0 ? axis[0].min : 0);\n        var xLength = dataLength > labelLength ? dataLength : labelLength;\n        var minVal;\n        var maxVal;\n        dataLength = axis[1].maxLength + 1;\n        labelLength = axis[1].axisLabelSize + (axis[1].min > 0 ? axis[1].min : 0);\n        var yLength = dataLength > labelLength ? dataLength : labelLength;\n        // tslint:disable-next-line:no-any \n        var tempVariable;\n        var cloneDataIndex = 0;\n        var minMaxDatasource = [];\n        this.tempSizeArray = [];\n        this.tempColorArray = [];\n        this.heatMap.minColorValue = null;\n        this.heatMap.maxColorValue = null;\n        this.heatMap.dataMax = [];\n        this.heatMap.dataMin = [];\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && xLength < yLength) {\n            xLength = yLength;\n        }\n        for (var z = axis[1].valueType === 'Category' ? axis[1].min : 0; z < (this.heatMap.paletteSettings.colorGradientMode === 'Column' ? xLength : yLength); z++) {\n            var tempIndex = axis[0].valueType === 'Category' ? axis[0].min : 0;\n            this.completeDataSource.push([]);\n            while (tempIndex < xLength) {\n                if (tempIndex >= axis[0].min && tempIndex <= axis[0].max) {\n                    this.processDataArray(tempCloneData, tempIndex, z, cloneDataIndex);\n                }\n                tempIndex++;\n            }\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                tempVariable = extend([], tempCloneData[cloneDataIndex], null, true);\n                for (var i = 0; i < tempVariable.length; i++) {\n                    if (typeof (tempVariable[i]) === 'object' && (tempVariable[i]) !== null || undefined || '') {\n                        tempVariable[i] = tempVariable[i][0];\n                    }\n                }\n            }\n            else {\n                tempVariable = extend([], this.completeDataSource[cloneDataIndex], null, true);\n            }\n            var minMaxVal = this.getMinMaxValue(minVal, maxVal, tempVariable);\n            if ((this.heatMap.paletteSettings.colorGradientMode === 'Column' ||\n                this.heatMap.paletteSettings.colorGradientMode === 'Row') && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataMax[z] = minMaxVal[1];\n                this.heatMap.dataMin[z] = minMaxVal[0];\n            }\n            else {\n                minVal = minMaxVal[0];\n                maxVal = minMaxVal[1];\n            }\n            if (this.heatMap.xAxis.isInversed) {\n                this.completeDataSource[cloneDataIndex] = this.completeDataSource[cloneDataIndex].reverse();\n            }\n            if (z >= this.heatMap.axisCollections[1].min && z <= this.heatMap.axisCollections[1].max) {\n                minMaxDatasource.push(this.completeDataSource[cloneDataIndex]);\n            }\n            cloneDataIndex++;\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Row' && !this.heatMap.yAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.xAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (!this.heatMap.yAxis.isInversed) {\n            this.completeDataSource.reverse();\n            minMaxDatasource.reverse();\n        }\n        this.heatMap.clonedDataSource = minMaxDatasource;\n        this.heatMap.dataSourceMinValue = isNullOrUndefined(minVal) ? 0 : parseFloat(minVal.toString());\n        this.heatMap.dataSourceMaxValue = isNullOrUndefined(maxVal) ? 0 : parseFloat(maxVal.toString());\n        this.heatMap.isColorValueExist = isNullOrUndefined(this.heatMap.minColorValue) ? false : true;\n        this.heatMap.minColorValue = isNullOrUndefined(this.heatMap.minColorValue) ?\n            this.heatMap.dataSourceMinValue : parseFloat(this.heatMap.minColorValue.toString());\n        this.heatMap.maxColorValue = isNullOrUndefined(this.heatMap.maxColorValue) ?\n            this.heatMap.dataSourceMaxValue : parseFloat(this.heatMap.maxColorValue.toString());\n    };\n    /**\n     * To process and create a proper data array.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.processDataArray = function (tempCloneData, tempIndex, z, cloneDataIndex) {\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (tempCloneData[tempIndex] && !isNullOrUndefined(tempCloneData[tempIndex][z])\n                && typeof (tempCloneData[tempIndex][z]) === 'object') {\n                // tslint:disable-next-line:no-any \n                var internalArray = tempCloneData[tempIndex][z];\n                for (var tempx = 0; tempx < internalArray.length; tempx++) {\n                    if (isNullOrUndefined(internalArray[tempx]) || isNaN(internalArray[tempx])) {\n                        internalArray[tempx] = '';\n                    }\n                    if (tempx === 0) {\n                        this.tempSizeArray.push(internalArray[tempx]);\n                    }\n                    else if (tempx === 1) {\n                        this.tempColorArray.push(internalArray[tempx]);\n                        break;\n                    }\n                }\n                this.completeDataSource[cloneDataIndex].push(internalArray);\n            }\n            else {\n                if (!isNullOrUndefined(tempCloneData[tempIndex]) && (tempCloneData[tempIndex][z] ||\n                    (tempCloneData[tempIndex][z] === 0 &&\n                        tempCloneData[tempIndex][z].toString() !== ''))) {\n                    this.completeDataSource[cloneDataIndex].push([tempCloneData[tempIndex][z]]);\n                    this.tempSizeArray.push(tempCloneData[tempIndex][z]);\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push('');\n                }\n            }\n        }\n        else {\n            if (tempCloneData[tempIndex] && (tempCloneData[tempIndex][z] ||\n                (tempCloneData[tempIndex][z] === 0 &&\n                    tempCloneData[tempIndex][z].toString() !== ''))) {\n                if (typeof (tempCloneData[tempIndex][z]) === 'object') {\n                    if (tempCloneData[tempIndex][z].length > 0 && !isNullOrUndefined(tempCloneData[tempIndex][z][0])) {\n                        this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z][0]);\n                    }\n                    else {\n                        this.completeDataSource[cloneDataIndex].push('');\n                    }\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z]);\n                }\n            }\n            else {\n                this.completeDataSource[cloneDataIndex].push('');\n            }\n        }\n    };\n    /**\n     * To get minimum and maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinMaxValue = function (minVal, maxVal, tempVariable) {\n        var minMaxValue = [];\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.tempSizeArray = tempVariable;\n            }\n            minMaxValue.push(this.getMinValue(minVal, this.tempSizeArray));\n            minMaxValue.push(this.getMaxValue(maxVal, this.tempSizeArray));\n            this.heatMap.minColorValue = this.getMinValue(this.heatMap.minColorValue, this.tempColorArray);\n            this.heatMap.maxColorValue = this.getMaxValue(this.heatMap.maxColorValue, this.tempColorArray);\n        }\n        else {\n            minMaxValue.push(this.getMinValue(minVal, tempVariable));\n            minMaxValue.push(this.getMaxValue(maxVal, tempVariable));\n        }\n        return minMaxValue;\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinValue = function (minVal, tempVariable) {\n        if (isNullOrUndefined(minVal)) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if (this.performSort(tempVariable) < minVal) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            minVal = this.performSort(tempVariable);\n        }\n        return !isNullOrUndefined(minVal) ? parseFloat(minVal.toString()) : minVal;\n    };\n    /**\n     * To get maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMaxValue = function (maxVal, tempVariable) {\n        if (isNullOrUndefined(maxVal) && tempVariable.length > 0) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if (Math.max.apply(Math, tempVariable) > maxVal) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        return !isNullOrUndefined(maxVal) ? parseFloat(maxVal.toString()) : maxVal;\n    };\n    /**\n     * To perform sort operation.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.performSort = function (tempVariable) {\n        return tempVariable.sort(function (a, b) { return a - b; }).filter(this.checkmin)[0];\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.checkmin = function (val) {\n        return !isNullOrUndefined(val) && val.toString() !== '';\n    };\n    return TwoDimensional;\n}());\nexport { TwoDimensional };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DrawSvgCanvas, TextOption, TextBasic, PathOption, Line, LineOption, GradientPointer, textTrim } from '../utils/helper';\nimport { Size, measureText, getTitle, getElement, CanvasTooltip, formatValue, LegendRange, ToggleVisibility, sum } from '../utils/helper';\nimport { Font, Title } from '../model/base';\nimport { Rect, RectOption, Gradient, GradientColor, showTooltip, stringToNumber, CurrentLegendRect, removeElement } from '../utils/helper';\nimport { Theme } from '../model/theme';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\n/**\n * Configures the Legend\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.titleFont }, Title)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Property('Right')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showGradientPointer\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"enableSmartLegend\", void 0);\n    __decorate([\n        Property('All')\n    ], LegendSettings.prototype, \"labelDisplayType\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n *\n * The `Legend` module is used to render legend for the heatmap.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(heatMap) {\n        this.maxLegendLabelSize = new Size(0, 0);\n        this.gradientScaleSize = 10;\n        this.segmentCollections = [];\n        this.segmentCollectionsLabels = [];\n        this.textWrapCollections = [];\n        this.labelCollections = [];\n        this.labelCollection = [];\n        this.legendSize = 10;\n        this.previousOptions = new GradientPointer(0, 0, 0, 0, 0, 0);\n        this.listPerPage = 0;\n        this.numberOfPages = 1;\n        this.listWidth = 0;\n        this.fillRect = new Rect(0, 0, 0, 0);\n        this.legendRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 1;\n        this.lastList = [];\n        this.navigationCollections = [];\n        this.pagingRect = new Rect(0, 0, 0, 0);\n        this.listInterval = 10; // padding between two lists\n        this.legendLabelTooltip = [];\n        this.legendTitleTooltip = [];\n        this.labelXCollections = [];\n        this.labelYCollections = [];\n        this.legendXCollections = [];\n        this.legendYCollections = [];\n        /** @private */\n        this.legendRectPositionCollection = [];\n        /** @private */\n        this.legendRange = [];\n        /** @private */\n        this.legendTextRange = [];\n        /** @private */\n        this.visibilityCollections = [];\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    ;\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (heatMap) {\n        /**\n         * destory code\n         */\n    };\n    ;\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendItems = function () {\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var tempBorder = { color: 'transparent', width: 0, };\n        this.legend = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_Legend' });\n        var rectItems = new RectOption(heatMap.element.id + '_LegendBound', 'none', tempBorder, 1, this.legendGroup);\n        this.drawSvgCanvas.drawRectangle(rectItems, this.legend);\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n        var fill;\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            var colorCollection = (!heatMap.legendSettings.enableSmartLegend) ?\n                heatMap.colorCollection : heatMap.legendColorCollection;\n            this.legendRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendRange;\n            this.legendTextRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendTextRange;\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            for (var i = 0; i < colorCollection.length; i++) {\n                var visibility = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                heatMap.toggleValue.push(new ToggleVisibility(visibility, colorCollection[i].value, colorCollection[i].startValue, colorCollection[i].endValue));\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend === true)) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                if (heatMap.enableCanvasRendering) {\n                    var grd = void 0;\n                    var ctx_1 = heatMap.canvasRenderer.ctx;\n                    if (heatMap.horizontalGradient) {\n                        grd = ctx_1.createLinearGradient(legendBound.x, 0, legendBound.x + legendBound.width, 0);\n                    }\n                    else {\n                        grd = ctx_1.createLinearGradient(0, legendBound.y, 0, legendBound.y + legendBound.height);\n                    }\n                    if (heatMap.legendSettings.title.text) {\n                        ctx_1.clip();\n                    }\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var value = (((this.heatMap.isColorRange ? heatMap.legendColorCollection[i].startValue :\n                            heatMap.legendColorCollection[i].value) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue));\n                        value = isNaN(value) ? 0 : value;\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateCanvasColorRange(i, grd);\n                        }\n                        else {\n                            grd.addColorStop(value, heatMap.legendColorCollection[i].color);\n                        }\n                    }\n                    ctx_1.fillStyle = grd;\n                    fill = grd.toString();\n                }\n                else {\n                    var gradientOptions = void 0;\n                    var gradientColor = void 0;\n                    var gradientColor1 = void 0;\n                    var cgradientColors = [];\n                    var gradientColor2 = void 0;\n                    var gradientColor3 = void 0;\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateColorRange(i, cgradientColors);\n                        }\n                        else {\n                            var gradientPercentage = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue)) * 100;\n                            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n                            gradientColor = new GradientColor(heatMap.legendColorCollection[i].color, gradientPercentage + '%');\n                            cgradientColors.push(gradientColor);\n                        }\n                        if (this.legendMaxValue === this.legendMinValue) {\n                            break;\n                        }\n                    }\n                    if (heatMap.horizontalGradient) {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '100%', '0%', '0%');\n                    }\n                    else {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '0%', '0%', '100%');\n                    }\n                    var linearGradient = heatMap.renderer.drawGradient('linearGradient', gradientOptions, cgradientColors);\n                    this.legend.appendChild(linearGradient);\n                    fill = 'url(#' + heatMap.element.id + '_lineargradient)';\n                }\n                var rectItem = new RectOption(heatMap.element.id + '_Gradient_Legend', fill, tempBorder, 1, rectItemsSvg);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                this.renderElements(rectItemsSvg);\n            }\n            else {\n                this.renderSmartLegend();\n                this.renderTitle(rectItemsSvg);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                heatMap.svgObject.appendChild(this.legend);\n            }\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.legendScale = heatMap.renderer.createGroup({ id: heatMap.element.id + 'Heatmap_GradientScale' });\n            var listRect = new RectOption(heatMap.element.id + '_Gradient_Scale', 'none', tempBorder, 1, this.legendRectScale);\n            this.drawSvgCanvas.drawRectangle(listRect, this.legendScale);\n            this.renderTitle(rectItemsSvg);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(this.legendScale);\n            }\n            this.translategroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_translate' });\n            this.calculateListPerPage(rectItemsSvg);\n            if (this.numberOfPages > 1) {\n                this.paginggroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_navigation' });\n            }\n            this.renderListLegendMode(rectItemsSvg, true);\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n        }\n    };\n    Legend.prototype.renderElements = function (rectItemsSvg) {\n        this.renderTitle(rectItemsSvg);\n        this.renderColorAxisGrid(rectItemsSvg);\n    };\n    Legend.prototype.calculateCanvasColorRange = function (i, grd) {\n        var heatMap = this.heatMap;\n        var value = ((((heatMap.legendColorCollection[i].startValue < heatMap.dataSourceMinValue &&\n            heatMap.legendColorCollection[i].endValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : heatMap.legendColorCollection[i].startValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue));\n        value = isNaN(value) ? 0 : value;\n        var value1 = ((heatMap.legendColorCollection[i].endValue >= this.heatMap.dataSourceMaxValue ?\n            this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i].endValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue);\n        if (this.heatMap.legendColorCollection[0].startValue !== this.heatMap.dataSourceMinValue && i === 0 &&\n            this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n            value = (this.heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value / 2, this.heatMap.paletteSettings.fillColor.minColor);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n        grd.addColorStop(value, heatMap.legendColorCollection[i].minColor);\n        grd.addColorStop(value1, heatMap.legendColorCollection[i].maxColor);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue) &&\n            this.heatMap.legendColorCollection[i].endValue < this.heatMap.dataSourceMaxValue) {\n            value = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.minColor);\n            value = ((i === this.heatMap.legendColorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n    };\n    Legend.prototype.calculateColorRange = function (i, cgradientColors) {\n        if (cgradientColors === void 0) { cgradientColors = []; }\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var gradientPercentage;\n        var gradientOptions;\n        var gradientColor;\n        var gradientColor1;\n        var gradientColor2;\n        var gradientColor3;\n        if (this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue && i === 0) {\n            gradientPercentage = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.minColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n            gradientPercentage = (heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.maxColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n        }\n        gradientPercentage = ((heatMap.legendColorCollection[i].startValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue)) * 100;\n        gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n        gradientColor = new GradientColor(heatMap.legendColorCollection[i].minColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor);\n        gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue) * 100;\n        gradientColor1 = new GradientColor(heatMap.legendColorCollection[i].maxColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor1);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue)) {\n            gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor2 = new GradientColor(this.heatMap.paletteSettings.fillColor.minColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor2);\n            gradientPercentage = ((i === (this.heatMap.legendColorCollection.length - 1) ?\n                this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor3 = new GradientColor(this.heatMap.paletteSettings.fillColor.maxColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor3);\n        }\n    };\n    Legend.prototype.renderTitle = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.legendSettings.title.text) {\n            var title = heatMap.legendSettings.title;\n            var titleSize = measureText(title.text, title.textStyle);\n            var padding = !heatMap.legendSettings.showLabel ? heatMap.horizontalGradient ? 10 : 6 : this.labelPadding;\n            var y = void 0;\n            var anchor = 'start';\n            var maxWidth = void 0;\n            var dominantBaseline = void 0;\n            var text = title.text;\n            var options = void 0;\n            var yValue = void 0;\n            if (heatMap.legendSettings.title.textStyle.textOverflow === 'Trim') {\n                maxWidth = this.width - 10;\n                text = textTrim(maxWidth, text, title.textStyle);\n            }\n            if (!heatMap.horizontalGradient) {\n                padding = -(padding + titleSize.height / 4);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, rect.y - titleSize.height, maxWidth, titleSize.height)));\n                }\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x, rect.y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            else {\n                y = rect.y + (heatMap.legendSettings.position === 'Top' ? 0 :\n                    -(10 + titleSize.height + padding));\n                padding = heatMap.legendSettings.position === 'Top' ? -(padding + titleSize.height / 4) :\n                    (padding + (3 * titleSize.height / 4));\n                yValue = heatMap.legendSettings.position === 'Bottom' ? y : y - titleSize.height;\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, yValue, maxWidth, titleSize.height)));\n                }\n                titleSize.width = rect.width < titleSize.width ? rect.width : titleSize.width;\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x + (rect.width / 2) - (titleSize.width / 2), y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            this.drawSvgCanvas.createText(options, this.legend, text);\n        }\n    };\n    Legend.prototype.renderSmartLegend = function () {\n        var heatMap = this.heatMap;\n        var colorCollection = heatMap.colorCollection;\n        var smartLegendRect;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0,\n        };\n        var legendBound = this.legendRectScale;\n        var legendX;\n        var legendY;\n        var legendWidth;\n        var legendHeight;\n        var width = legendBound.width / colorCollection.length;\n        var height = legendBound.height / colorCollection.length;\n        this.legendRectPositionCollection = [];\n        this.legendRange = [];\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            var rectPosition = new CurrentLegendRect(0, 0, 0, 0, '', '');\n            if (heatMap.horizontalGradient) {\n                legendX = legendBound.x + (i * width);\n                legendY = legendBound.y;\n                legendWidth = width;\n                legendHeight = legendBound.height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendX + width : legendX);\n            }\n            else {\n                legendX = legendBound.x;\n                legendY = legendBound.y + (i * height);\n                legendWidth = legendBound.width;\n                legendHeight = height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendY + height : legendY);\n            }\n            smartLegendRect = new Rect(legendX, legendY, legendWidth, legendHeight);\n            var legendRange = new LegendRange(0, 0, 0, 0, 0, true, 0);\n            legendRange.x = legendX;\n            legendRange.y = legendY;\n            legendRange.width = legendWidth;\n            legendRange.height = legendHeight;\n            legendRange.value = this.heatMap.isColorRange ?\n                heatMap.legendColorCollection[i].endValue : heatMap.legendColorCollection[i].value;\n            legendRange.currentPage = this.currentPage;\n            if (colorCollection.length !== heatMap.legendColorCollection.length && i === heatMap.legendColorCollection.length - 1) {\n                heatMap.horizontalGradient ? legendRange.width = 0 : legendRange.height = 0;\n                this.visibilityCollections[i] = this.visibilityCollections[i - 1];\n            }\n            legendRange.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n            this.legendRange.push(legendRange);\n            if (!heatMap.legendColorCollection[i].isHidden) {\n                var color = heatMap.legendOnLoad ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : this.legendRange[i].visible ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : '#D3D3D3';\n                var rectItem = new RectOption(heatMap.element.id + '_Smart_Legend' + i, color, tempBorder, 1, smartLegendRect);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                rectPosition.x = legendX;\n                rectPosition.y = legendY;\n                rectPosition.width = legendWidth;\n                rectPosition.height = legendHeight;\n                rectPosition.label = this.labelCollections[i];\n                rectPosition.id = heatMap.element.id + '_Smart_Legend' + i;\n                this.legendRectPositionCollection.push(rectPosition);\n                var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, this.textWrapCollections[i]);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    var elementSize = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                    this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(rectPosition.x, rectPosition.y, elementSize.width, elementSize.height)));\n                }\n            }\n        }\n    };\n    Legend.prototype.colorRangeLegendPosition = function (i, labelX) {\n        if (this.segmentCollections.length !== this.segmentCollectionsLabels.length) {\n            for (var k = 0; k < this.segmentCollections.length; k++) {\n                if (this.segmentCollectionsLabels[i] === this.segmentCollections[k]) {\n                    labelX = this.segmentCollectionsLabels[i] + (((k === this.segmentCollections.length - 1 ?\n                        (this.heatMap.horizontalGradient ? this.width : this.height) :\n                        this.segmentCollections[k + 1]) - this.segmentCollections[k]) / 2);\n                    break;\n                }\n            }\n        }\n        else {\n            labelX = this.segmentCollectionsLabels[i] + (((i === this.segmentCollectionsLabels.length - 1 ?\n                (this.heatMap.horizontalGradient ? this.width : this.height) :\n                this.segmentCollectionsLabels[i + 1]) - this.segmentCollectionsLabels[i]) / 2);\n        }\n        this.labelPosition = labelX;\n    };\n    Legend.prototype.renderLegendLabel = function (rect) {\n        var heatMap = this.heatMap;\n        this.legendTextRange = [];\n        if (heatMap.legendSettings.showLabel && (heatMap.paletteSettings.type === 'Gradient' ||\n            (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType !== 'None'))) {\n            var anchor = 'start';\n            var dominantBaseline = void 0;\n            var legendLabel = void 0;\n            var textWrapWidth = 0;\n            var text = void 0;\n            this.legendLabelTooltip = [];\n            var elementSize = void 0;\n            var colorCollection = heatMap.legendColorCollection;\n            if (heatMap.enableCanvasRendering) {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.rect(this.legendGroup.x, this.legendGroup.y, this.legendGroup.width, this.legendGroup.height);\n                ctx.save();\n                ctx.clip();\n                ctx.restore();\n            }\n            else {\n                legendLabel = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_LegendLabel' });\n            }\n            var labelX = void 0;\n            var labelY = void 0;\n            for (var i = 0; i < colorCollection.length; i++) {\n                var value = ((colorCollection[i].value - (Math.round(this.legendMinValue * 100) / 100)) /\n                    ((Math.round(this.legendMaxValue * 100) / 100) - (Math.round(this.legendMinValue * 100) / 100))) * 100;\n                if (heatMap.horizontalGradient) {\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelX);\n                        labelX = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelX = this.segmentCollections[i] + ((rect.width / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelX = this.segmentCollections[i];\n                    }\n                    labelY = rect.y + rect.height + this.labelPadding;\n                    anchor = ((Math.round(value * 100) / 100) === 0 || (i === 0 && heatMap.paletteSettings.type === 'Fixed')) ? 'start' :\n                        (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient') ||\n                            (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                                heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                            heatMap.paletteSettings.type === 'Fixed' &&\n                            heatMap.legendSettings.labelDisplayType === 'Edge') ? 'end' : 'middle';\n                    dominantBaseline = 'hanging';\n                }\n                else {\n                    labelX = rect.x + rect.width + this.labelPadding;\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelY);\n                        labelY = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelY = this.segmentCollections[i] + ((rect.height / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelY = this.segmentCollections[i];\n                    }\n                    dominantBaseline = ((Math.round(value * 100) / 100) === 0 || (i === 0 && heatMap.paletteSettings.type === 'Fixed')) ?\n                        'hanging' : (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient') ||\n                        (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                            heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                        heatMap.paletteSettings.type === 'Fixed') ? 'auto' : 'middle';\n                }\n                textWrapWidth = heatMap.horizontalGradient ? this.textWrapCollections[i] : this.width - (this.legendRectScale.width +\n                    this.labelPadding + this.legendRectPadding);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                elementSize = measureText(text[0], heatMap.legendSettings.textStyle);\n                if (heatMap.paletteSettings.type === 'Fixed') {\n                    var rectY = dominantBaseline === 'hanging' ? labelY : dominantBaseline === 'middle' ?\n                        labelY - elementSize.height / 2 : labelY - elementSize.height;\n                    var rectX = anchor === 'end' ? labelX - elementSize.width : anchor === 'middle' ?\n                        labelX - elementSize.width / 2 : labelX;\n                    var textPosition = new LegendRange(rectX, rectY, elementSize.width, elementSize.height, colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n                if (this.labelCollections[i] !== '') {\n                    if (text.length !== 0 && text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, elementSize.width, elementSize.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, anchor, text, 0, 'translate(0,0)', dominantBaseline);\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill :\n                        (heatMap.paletteSettings.type === 'Fixed' && !this.legendRange[i].visible) ? '#D3D3D3' : options.fill;\n                    if (text.length > 1) {\n                        this.drawSvgCanvas.createWrapText(options, heatMap.legendSettings.textStyle, legendLabel);\n                    }\n                    else {\n                        this.drawSvgCanvas.createText(options, legendLabel, text[0]);\n                    }\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        if (dominantBaseline === 'middle') {\n                            legendLabel.lastChild.setAttribute('dy', '0.6ex');\n                        }\n                        else if (dominantBaseline === 'hanging') {\n                            legendLabel.lastChild.setAttribute('dy', '1.5ex');\n                        }\n                    }\n                }\n                if (this.legendMaxValue === this.legendMinValue && heatMap.paletteSettings.type === 'Gradient') {\n                    break;\n                }\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n                this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n                this.legend.appendChild(legendLabel);\n                var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_clipPath' });\n                var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n                clippath.appendChild(clipRect);\n                heatMap.svgObject.appendChild(clippath);\n                this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderGradientPointer = function (e, pageX, pageY) {\n        var heatMap = this.heatMap;\n        var currentRect = heatMap.heatMapSeries.getCurrentRect(pageX, pageY);\n        var cellValue = heatMap.bubbleSizeWithColor ? currentRect.value[0].bubbleData.toString() !== '' ?\n            !this.heatMap.isColorValueExist ? currentRect.value[0].bubbleData.toString() :\n                currentRect.value[1].bubbleData.toString() : '' : currentRect.value.toString();\n        var rect = this.legendRectScale;\n        var legendPart;\n        var direction;\n        var options;\n        var legendPath;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        var pathX3;\n        var pathY3;\n        if (cellValue.toString() !== '') {\n            if (!heatMap.horizontalGradient) {\n                legendPart = rect.height / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x - 1;\n                pathY1 = rect.y + legendPath;\n                pathX2 = pathX3 = rect.x - 8;\n                pathY2 = rect.y - 5 + legendPath;\n                pathY3 = rect.y + 5 + legendPath;\n            }\n            else {\n                legendPart = rect.width / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x + legendPath;\n                pathY1 = rect.y + rect.height;\n                pathX2 = rect.x - 5 + legendPath;\n                pathY2 = pathY3 = rect.y + rect.height + 8;\n                pathX3 = rect.x + 5 + legendPath;\n            }\n            direction = 'M' + ' ' + pathX1 + ' ' + pathY1 + ' ' +\n                'L' + ' ' + pathX2 + ' ' + pathY2 + ' ' + 'L' + ' ' + pathX3 + ' ' + pathY3 + ' ' + 'Z';\n            options = new PathOption(heatMap.element.id + '_Gradient_Pointer', 'gray', 0.01, '#A0A0A0', 1, '0,0', direction);\n            if (!heatMap.enableCanvasRendering) {\n                this.gradientPointer = heatMap.renderer.drawPath(options);\n                this.gradientPointer.style.visibility = 'visible';\n                this.legend.appendChild(this.gradientPointer);\n            }\n            else {\n                this.removeGradientPointer();\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(options, canvasTranslate);\n                this.previousOptions.pathX1 = pathX1;\n                this.previousOptions.pathY1 = pathY1;\n                this.previousOptions.pathX2 = pathX2;\n                this.previousOptions.pathY2 = pathY2;\n                this.previousOptions.pathX3 = pathX3;\n                this.previousOptions.pathY3 = pathY3;\n            }\n        }\n        else {\n            this.removeGradientPointer();\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.removeGradientPointer = function () {\n        var heatMap = this.heatMap;\n        if (this.gradientPointer && !heatMap.enableCanvasRendering) {\n            this.gradientPointer.style.visibility = 'hidden';\n        }\n        else if (heatMap.enableCanvasRendering) {\n            if (Object.keys(this.previousOptions).length !== 0) {\n                if (heatMap.horizontalGradient) {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY1;\n                    this.fillRect.width = this.previousOptions.pathX3 - this.previousOptions.pathX2 + 2;\n                    this.fillRect.height = this.previousOptions.pathY2 + 1 - this.previousOptions.pathY1;\n                }\n                else {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY2 - 1;\n                    this.fillRect.width = this.previousOptions.pathX1 - this.previousOptions.pathX2 + 1;\n                    this.fillRect.height = this.previousOptions.pathY3 - this.previousOptions.pathY2 + 2;\n                }\n            }\n            heatMap.canvasRenderer.ctx.fillStyle = heatMap.themeStyle.background;\n            heatMap.canvasRenderer.ctx.fillRect(this.fillRect.x, this.fillRect.y, this.fillRect.width, this.fillRect.height);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        this.labelCollection = [];\n        this.labelCollections = [];\n        var colorCollection = heatMap.legendColorCollection;\n        if (legendSettings.position !== 'Bottom' && legendSettings.position !== 'Top' &&\n            legendSettings.position !== 'Right' && legendSettings.position !== 'Left') {\n            legendSettings.position = 'Right';\n        }\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        heatMap.horizontalGradient = legendSettings.position === 'Bottom' || legendSettings.position === 'Top';\n        this.legendRectPadding = heatMap.horizontalGradient ? heatMap.legendSettings.title.text ?\n            titleSize.height + 16 : 16 : 10; // padding between rect and legend\n        this.labelPadding = legendSettings.showLabel ? this.heatMap.horizontalGradient ? 10 : 6 : 0; // padding between list and label\n        this.legendHeight = legendSettings.height;\n        this.legendWidth = legendSettings.width;\n        var format = heatMap.legendSettings.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatMap.intl.getNumberFormat({ format: isCustom ? '' : format });\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].label ? colorCollection[i].label : this.heatMap.isColorRange ?\n                    colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() : formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender' };\n                this.labelCollection.push(label);\n                this.heatMap.trigger('legendRender', legendEventArg);\n                if (heatMap.legendRender) {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        if (!legendEventArg.cancel) {\n                            this.labelCollections.push(legendEventArg.text);\n                        }\n                        else {\n                            this.labelCollections.push('');\n                        }\n                    }\n                }\n                else {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].isHidden ? '' : colorCollection[i].label ? colorCollection[i].label :\n                    this.heatMap.isColorRange ? colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() :\n                        formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender', };\n                if (!colorCollection[i].isHidden) {\n                    this.heatMap.trigger('legendRender', legendEventArg);\n                }\n                if (heatMap.legendRender) {\n                    if (!legendEventArg.cancel) {\n                        if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                            this.labelCollections.push('');\n                        }\n                        else {\n                            if (!legendEventArg.cancel) {\n                                this.labelCollections.push(legendEventArg.text);\n                            }\n                            else {\n                                this.labelCollections.push('');\n                            }\n                        }\n                    }\n                    else {\n                        this.labelCollections.push('');\n                    }\n                }\n                else {\n                    if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend)) {\n            this.maxLegendLabelSize = this.getMaxLabelSize();\n            if (heatMap.horizontalGradient && legendSettings.height === '') {\n                this.legendHeight = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            else if (!heatMap.horizontalGradient && legendSettings.width === '' && (legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.width).toString();\n            }\n            this.calculateTitleBounds();\n        }\n        else {\n            this.calculateListLegendBounds(rect);\n        }\n        this.legendHeight = this.legendHeight ? this.legendHeight : heatMap.horizontalGradient ? '50' : '100%';\n        this.legendWidth = this.legendWidth ? this.legendWidth : heatMap.horizontalGradient ?\n            '100%' : heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ? '70' : '50';\n        this.height = stringToNumber(this.legendHeight, rect.height);\n        this.width = stringToNumber(this.legendWidth, rect.width);\n        if (heatMap.horizontalGradient) {\n            this.height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.height < 50 ? 50 : this.height : this.height;\n            if (legendSettings.position === 'Top') {\n                rect.y += this.height;\n            }\n            rect.height -= this.height;\n        }\n        else {\n            this.width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.width < 50 ? 50 : this.width : this.width;\n            if (legendSettings.position === 'Left') {\n                rect.x += this.width;\n            }\n            rect.width -= this.width;\n        }\n    };\n    Legend.prototype.calculateTitleBounds = function () {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.legendSettings.title.text) {\n            if ((heatMap.legendSettings.position === 'Top' || heatMap.legendSettings.position === 'Bottom') &&\n                heatMap.legendSettings.height === '') {\n                this.legendHeight = (((2 * this.legendRectPadding) - titleSize.height) +\n                    this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            if (heatMap.legendSettings.width === '' && (heatMap.legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                if (heatMap.legendSettings.position === 'Right') {\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) +\n                        this.legendSize + this.maxLegendLabelSize.width).toString();\n                }\n                else if (heatMap.legendSettings.position === 'Left') {\n                    titleSize.width = titleSize.width > this.maxLegendLabelSize.width ? titleSize.width : this.maxLegendLabelSize.width;\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) + this.legendSize).toString();\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateListLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        this.listWidth = 0;\n        this.listHeight = 0;\n        this.currentPage = 1;\n        var padding = 10; // padding of paging elements\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var height = (titleSize.height + 50).toString();\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < heatMap.colorCollection.length; i++) {\n                var size = 0;\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                var perListWidth = this.legendSize + this.labelPadding + size + this.listInterval;\n                this.listWidth += perListWidth;\n            }\n            this.listWidth += this.listInterval + padding;\n            if (this.legendWidth === '') {\n                this.legendWidth = this.listWidth > rect.width ? rect.width.toString() : this.listWidth.toString();\n            }\n            if (this.legendHeight === '') {\n                this.numberOfRows = Math.ceil(this.listWidth / stringToNumber(this.legendWidth, rect.width));\n                this.numberOfRows = this.numberOfRows > 3 ? 3 : this.numberOfRows;\n                this.legendHeight = (this.listWidth > rect.width || this.listWidth > stringToNumber(this.legendWidth, rect.width)) &&\n                    this.numberOfRows > 3 ? (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding +\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) + padding).toString() :\n                    (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding).toString();\n            }\n        }\n        else {\n            this.listHeight = ((this.legendSize + this.listInterval) * heatMap.colorCollection.length)\n                + this.listInterval + (heatMap.legendSettings.title.text ? titleSize.height : 0);\n            if (this.legendHeight === '') {\n                this.legendHeight = this.listHeight > rect.height ? rect.height.toString() : this.listHeight.toString();\n            }\n            if (this.legendWidth === '' && heatMap.legendSettings.textStyle.textOverflow !== 'Trim') {\n                this.maxLegendLabelSize = this.getMaxLabelSize();\n                this.maxLegendLabelSize.width = titleSize.width > this.maxLegendLabelSize.width ?\n                    titleSize.width : this.maxLegendLabelSize.width;\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.labelPadding +\n                    this.maxLegendLabelSize.width).toString();\n            }\n        }\n        if (stringToNumber(this.legendHeight, rect.height) < 50) {\n            this.legendHeight = height;\n        }\n        if (stringToNumber(this.legendWidth, rect.width) < 70) {\n            this.legendWidth = '70';\n        }\n    };\n    Legend.prototype.getMaxLabelSize = function () {\n        var heatMap = this.heatMap;\n        this.maxLegendLabelSize = new Size(0, 0);\n        if (!heatMap.legendSettings.showLabel || (heatMap.horizontalGradient && heatMap.paletteSettings.type === 'Fixed' &&\n            !heatMap.legendSettings.enableSmartLegend) || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.labelDisplayType === 'None')) {\n            return this.maxLegendLabelSize;\n        }\n        else {\n            var labelSize = this.maxLegendLabelSize;\n            for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                var size = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n            return labelSize;\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendSize = function (rect, legendTop) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var left;\n        var top;\n        var padding = 10; // inner padding for axis title and axil labels\n        var alignment = legendSettings.alignment;\n        var width;\n        var height = stringToNumber(this.legendHeight, rect.height);\n        if (!heatMap.legendSettings.title.text) {\n            width = stringToNumber(this.legendWidth, rect.width);\n        }\n        else {\n            width = this.width;\n        }\n        var axis = heatMap.axisCollections;\n        var axisTitlePadding = 0;\n        if (heatMap.horizontalGradient) {\n            width = width > rect.width ? rect.width : width;\n            height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                height > 50 ? height : 50 : this.height;\n            left = alignment === 'Near' ? rect.x : alignment === 'Far' ? rect.x + rect.width - width :\n                rect.x + (rect.width / 2) - (width / 2);\n            if (heatMap.xAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.xAxis.title.text, heatMap.xAxis.textStyle).height + padding;\n            }\n            var axisHeight = axis[0].opposedPosition ? 0 : sum(axis[0].xAxisMultiLabelHeight) + axis[0].maxLabelSize.height +\n                axisTitlePadding + padding;\n            top = legendSettings.position === 'Top' ? heatMap.titleSettings.text ? legendTop :\n                heatMap.margin.top : rect.y + rect.height + axisHeight;\n        }\n        else {\n            height = height > rect.height ? rect.height : height;\n            width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                width > 50 ? width : 50 : width;\n            top = alignment === 'Near' ? rect.y : alignment === 'Far' ? rect.y + rect.height - height :\n                rect.y + (rect.height / 2) - (height / 2);\n            if (heatMap.yAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.yAxis.title.text, heatMap.yAxis.textStyle).height + padding;\n            }\n            var axisWidth = axis[1].opposedPosition ? sum(axis[1].yAxisMultiLabelHeight) +\n                axis[1].maxLabelSize.width + axisTitlePadding + 2 * padding : 0;\n            left = legendSettings.position === 'Right' ? rect.x + rect.width + axisWidth : heatMap.margin.left;\n        }\n        this.legendGroup = new Rect(left, top, width, height);\n        this.calculateGradientScale(this.legendGroup);\n    };\n    // calculating number of lists per page\n    Legend.prototype.measureListLegendBound = function (rect) {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var padding = 15; // padding of paging element\n        this.numberOfPages = 1;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.horizontalGradient) {\n            if (this.listWidth > this.width) {\n                this.numberOfRows = Math.ceil(this.listWidth / this.width);\n                this.listHeight = ((this.legendSize + this.listInterval) * this.numberOfRows);\n                this.listPerPage = this.numberOfRows <= 3 ? this.numberOfRows : Math.ceil((this.height - padding -\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) -\n                    this.legendRectPadding) / (this.legendSize + this.listInterval));\n                this.numberOfPages = Math.ceil(this.numberOfRows / this.listPerPage);\n            }\n            else {\n                this.listPerPage = 1;\n            }\n        }\n        else {\n            if (this.listHeight > rect.height || this.listHeight > this.height) {\n                var maxHeight = stringToNumber(this.legendHeight, rect.height);\n                maxHeight = maxHeight > rect.height ? rect.height : maxHeight;\n                maxHeight = heatMap.legendSettings.title.text ? maxHeight - titleSize.height : maxHeight;\n                this.listPerPage = Math.floor(maxHeight / (this.legendSize + this.listInterval) - 1);\n                this.numberOfPages = Math.max(1, Math.ceil(heatMap.colorCollection.length / this.listPerPage));\n            }\n            else {\n                this.listPerPage = heatMap.colorCollection.length;\n                this.legendHeight = this.listHeight.toString();\n            }\n        }\n    };\n    Legend.prototype.renderPagingElements = function () {\n        var heatMap = this.heatMap;\n        if (this.numberOfPages > 1) {\n            this.navigationCollections = [];\n            this.legend.appendChild(this.paginggroup);\n            var iconSize = 10;\n            var rightArrowX = this.legendGroup.x + this.legendGroup.width - iconSize;\n            var rightArrowY = this.legendGroup.y + this.legendGroup.height - iconSize;\n            var text = this.currentPage + '/' + this.numberOfPages;\n            var textSize = measureText(text, heatMap.legendSettings.textStyle);\n            var textX = rightArrowX - textSize.width - 15;\n            var textBasic = new TextBasic(textX, rightArrowY, 'start', text, 0, 'translate(0,0)', 'middle');\n            var options = new TextOption(heatMap.element.id + '_paging', textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n            this.drawSvgCanvas.createText(options, this.paginggroup, text);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                this.paginggroup.lastChild.setAttribute('dy', '0.6ex');\n            }\n            this.pagingRect = new Rect(textX, rightArrowY - textSize.height / 2, textSize.width, textSize.height);\n            var pagingTextRect = new RectOption(heatMap.element.id + '_pagingText', 'none', { color: 'transparent', width: 0 }, 1, this.pagingRect);\n            this.drawSvgCanvas.drawRectangle(pagingTextRect, this.paginggroup);\n            var rightArrowRect = new RectOption(heatMap.element.id + '_rightArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(rightArrowX - iconSize, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(rightArrowRect, this.paginggroup);\n            var rightArrow = 'M' + ' ' + (rightArrowX) + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (rightArrowX - iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (rightArrowX - iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftX = textX - 15;\n            var leftArrow = 'M' + ' ' + leftX + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (leftX + iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (leftX + iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftArrowRect = new RectOption(heatMap.element.id + '_leftArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(leftX, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(leftArrowRect, this.paginggroup);\n            var leftOption = new PathOption(heatMap.element.id + '_Legend_leftarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', leftArrow);\n            var rightOption = new PathOption(heatMap.element.id + '_Legend_rightarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', rightArrow);\n            this.navigationCollections.push(rightArrowRect);\n            this.navigationCollections.push(leftArrowRect);\n            if (!heatMap.enableCanvasRendering) {\n                var arrow = heatMap.renderer.drawPath(leftOption);\n                var rightarrow = heatMap.renderer.drawPath(rightOption);\n                this.paginggroup.appendChild(arrow);\n                this.paginggroup.appendChild(rightarrow);\n            }\n            else {\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(leftOption, canvasTranslate);\n                heatMap.canvasRenderer.drawPath(rightOption, canvasTranslate);\n            }\n        }\n    };\n    Legend.prototype.calculateGradientScale = function (scale) {\n        var heatMap = this.heatMap;\n        var padding = 10; // padding between legend bounds and gradient scale\n        var left;\n        var top;\n        var height;\n        var width;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var titleHeight = heatMap.legendSettings.title.text ? titleSize.height : 0;\n        if (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) {\n            this.measureListLegendBound(heatMap.initialClipRect);\n        }\n        if (heatMap.horizontalGradient) {\n            left = scale.x + padding;\n            top = scale.y + this.legendRectPadding;\n            width = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                scale.width - (2 * this.listInterval) : scale.width - 2 * padding;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : this.gradientScaleSize;\n        }\n        else {\n            left = scale.x + this.legendRectPadding;\n            top = scale.y + padding + titleHeight;\n            width = (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) ?\n                scale.width - padding : this.gradientScaleSize;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval :\n                scale.height - 2 * padding - titleHeight;\n        }\n        this.legendRectScale = new Rect(left, top, width, height);\n        if (heatMap.paletteSettings.type === 'Gradient' || heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend) {\n            this.calculateColorAxisGrid(this.legendRectScale);\n        }\n    };\n    Legend.prototype.calculateColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var rect = this.legendRectScale;\n        var legendPart;\n        var text;\n        var maxTextWrapLength = 0;\n        this.segmentCollectionsLabels = [];\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        var pathX1;\n        var pathY1;\n        var colorCollection = heatMap.paletteSettings.type === 'Gradient' ?\n            heatMap.legendColorCollection : heatMap.colorCollection;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        this.legendMinValue = this.heatMap.isColorRange ? (colorCollection[0].startValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : colorCollection[0].startValue : ((colorCollection[0].value > minValue) ? minValue :\n            colorCollection[0].value);\n        this.legendMaxValue = this.heatMap.isColorRange ? (colorCollection[colorCollection.length - 1].endValue <\n            heatMap.dataSourceMaxValue) ? heatMap.dataSourceMaxValue : colorCollection[colorCollection.length - 1].endValue :\n            (colorCollection[colorCollection.length - 1].value < maxValue ? maxValue : colorCollection[colorCollection.length - 1].value);\n        if (heatMap.paletteSettings.type === 'Gradient') {\n            for (var index = 0; index < colorCollection.length; index++) {\n                var value = void 0;\n                legendPart = (this.heatMap.isColorRange && heatMap.horizontalGradient ? rect.width : rect.height) / 100;\n                if (this.heatMap.isColorRange) {\n                    if (colorCollection[0].startValue !== this.heatMap.dataSourceMinValue && index === 0 &&\n                        colorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n                        value = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    value = ((((colorCollection[index].startValue < heatMap.dataSourceMinValue && colorCollection[index].endValue >\n                        heatMap.dataSourceMaxValue) ? heatMap.dataSourceMinValue : colorCollection[index].startValue) -\n                        this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                    this.segmentCollections.push(pathY1);\n                    this.segmentCollectionsLabels.push(pathY1);\n                    if (colorCollection[index].endValue !== ((index === colorCollection.length - 1) ?\n                        this.heatMap.dataSourceMaxValue : colorCollection[index + 1].startValue) &&\n                        this.heatMap.legendColorCollection[index].endValue < this.heatMap.dataSourceMaxValue) {\n                        if (index === colorCollection.length - 1) {\n                            value = (colorCollection[index].endValue - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue) * 100;\n                            pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                            this.segmentCollections.push(pathY1);\n                        }\n                        value = ((index === colorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                            colorCollection[index].endValue) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                }\n                else {\n                    value = ((colorCollection[index].value - this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    if (!heatMap.horizontalGradient) {\n                        legendPart = rect.height / 100;\n                        pathY1 = legendRect.y + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    else {\n                        legendPart = rect.width / 100;\n                        pathX1 = legendRect.x + (legendPart * value);\n                        this.segmentCollections.push(pathX1);\n                    }\n                }\n            }\n        }\n        var textWrapWidth;\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < colorCollection.length; i++) {\n                if (heatMap.paletteSettings.type === 'Gradient') {\n                    var previousSegmentWidth = (this.segmentCollections[i] - this.segmentCollections[i - 1]) / 2;\n                    var nextSegmentWidth = (this.segmentCollections[i + 1] - this.segmentCollections[i]) / 2;\n                    if (i === colorCollection.length - 1) {\n                        textWrapWidth = previousSegmentWidth;\n                    }\n                    else if (i === 0) {\n                        textWrapWidth = nextSegmentWidth;\n                    }\n                    else {\n                        textWrapWidth = previousSegmentWidth < nextSegmentWidth ? previousSegmentWidth : nextSegmentWidth;\n                    }\n                }\n                else {\n                    var width = this.legendRectScale.width / heatMap.colorCollection.length;\n                    textWrapWidth = heatMap.legendSettings.labelDisplayType === 'Edge' ? width : width / 2;\n                }\n                this.textWrapCollections.push(textWrapWidth);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                maxTextWrapLength = text.length > maxTextWrapLength ? text.length : maxTextWrapLength;\n            }\n            if (heatMap.legendSettings.position === 'Bottom') {\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendGroup.y -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n            else {\n                heatMap.initialClipRect.y += (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n        }\n    };\n    Legend.prototype.renderColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var legendElement;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        if (!heatMap.enableCanvasRendering) {\n            legendElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + '_ColorAxis_Grid' });\n        }\n        for (var i = 0; i < (heatMap.isColorRange ? this.segmentCollections.length : heatMap.legendColorCollection.length); i++) {\n            if (!heatMap.horizontalGradient) {\n                pathX1 = legendRect.x;\n                pathY1 = pathY2 = this.segmentCollections[i];\n                pathX2 = legendRect.x + legendRect.width;\n            }\n            else {\n                pathX1 = pathX2 = this.segmentCollections[i];\n                pathY1 = legendRect.y;\n                pathY2 = legendRect.y + legendRect.height;\n            }\n            var direction = new Line(pathX1, pathY1, pathX2, pathY2);\n            var line = new LineOption(this.heatMap.element.id + '_ColorAxis_Grid' + i, direction, '#EEEEEE', 1);\n            this.drawSvgCanvas.drawLine(line, legendElement);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(legendElement);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendTitleTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_legendTitle') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            showTooltip(this.heatMap.legendSettings.title.text, pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_legendTitle_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n            document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip').style.visibility = 'visible';\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendLabelTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_Legend_Label') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            var targetId = e.target.id.split(this.heatMap.element.id + '_Legend_Label');\n            if (targetId.length === 2) {\n                var index = void 0;\n                if (targetId[1].length === 1 || this.heatMap.legendSettings.textStyle.textOverflow === 'Trim') {\n                    index = parseInt(targetId[1], 10);\n                }\n                else {\n                    index = parseInt(targetId[1].substring(0, targetId[1].length - 1), 10);\n                }\n                showTooltip(this.labelCollections[index], pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_LegendLabel_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n                document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip').style.visibility = 'visible';\n            }\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    Legend.prototype.calculateListPerPage = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.horizontalGradient) {\n            this.lastList = [];\n            var legendX = rect.x;\n            var legendY = rect.y;\n            var size = 0;\n            var division = 0;\n            var labelX = 0;\n            var labelY = 0;\n            var interval = 20;\n            var i = void 0;\n            var legendSize = 10;\n            var padding = 5;\n            this.labelXCollections = [];\n            this.labelYCollections = [];\n            this.legendXCollections = [];\n            this.legendYCollections = [];\n            for (i = 0; i < heatMap.colorCollection.length; i++) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                labelX = legendX + legendSize + padding;\n                labelY = legendY + padding;\n                var maxWidth = heatMap.legendSettings.showLabel ? labelX + size : legendX + this.legendSize + this.listInterval;\n                if (i !== 0 && maxWidth > this.legendGroup.width + this.legendGroup.x - this.listInterval) {\n                    division += 1;\n                    legendX = rect.x;\n                    legendY = rect.y + (division * interval);\n                    labelX = legendX + legendSize + padding;\n                    labelY = legendY + padding;\n                    if (division % (this.listPerPage) === 0) {\n                        this.lastList.push(i);\n                        legendY = rect.y;\n                        labelY = legendY + padding;\n                        division = 0;\n                    }\n                }\n                this.labelXCollections.push(labelX);\n                this.labelYCollections.push(labelY);\n                this.legendXCollections.push(legendX);\n                this.legendYCollections.push(legendY);\n                legendX = legendX + this.legendSize + this.labelPadding + size + this.listInterval;\n            }\n            this.lastList.push(i);\n            this.numberOfPages = this.lastList.length;\n        }\n    };\n    Legend.prototype.renderListLegendMode = function (rect, translate) {\n        var heatMap = this.heatMap;\n        var legendSize = 10;\n        var tempBorder = {\n            color: 'transparent', width: 0,\n        };\n        var padding = 5; // padding for legend label from top\n        this.legendLabelTooltip = [];\n        var listRect;\n        var size = new Size(0, 0);\n        var labelX = 0;\n        var labelY = 0;\n        var legendX = rect.x;\n        var legendY = rect.y;\n        if (translate) {\n            this.renderPagingElements();\n        }\n        var x;\n        var y;\n        var textWrapWidth = heatMap.legendSettings.title.text ? this.width - (2 * (this.legendSize + this.labelPadding)) :\n            this.legendGroup.width - (this.legendSize + this.legendRectPadding + this.labelPadding);\n        if (!heatMap.horizontalGradient) {\n            x = (this.currentPage * (this.listPerPage)) - (this.listPerPage);\n            y = x + this.listPerPage;\n            y = y < heatMap.colorCollection.length ? y : heatMap.colorCollection.length;\n        }\n        else {\n            x = this.currentPage === 1 ? 0 : this.lastList[this.currentPage - 2];\n            y = this.lastList[this.currentPage - 1];\n        }\n        for (var i = x; i < y; i++) {\n            if (heatMap.legendSettings.showLabel) {\n                var text = this.labelCollections[i];\n                size = measureText(text, heatMap.legendSettings.textStyle);\n            }\n            var legendEventArgs = {\n                cancel: false, text: this.labelCollection[i], name: 'legendRender',\n            };\n            if (heatMap.horizontalGradient) {\n                legendX = this.legendXCollections[i];\n                legendY = this.legendYCollections[i];\n                labelX = this.labelXCollections[i];\n                labelY = this.labelYCollections[i];\n            }\n            labelX = legendX + this.legendSize + this.labelPadding;\n            labelY = legendY + padding;\n            this.heatMap.trigger('legendRender', legendEventArgs);\n            if (translate && heatMap.rendering && this.legendRange.length <= heatMap.colorCollection.length) {\n                var rectPosition = new LegendRange(legendX, legendY, legendSize, legendSize, heatMap.colorCollection[i].value, true, this.currentPage);\n                rectPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                if (!legendEventArgs.cancel) {\n                    this.legendRange.push(rectPosition);\n                }\n                else {\n                    var rectPosition_1 = new LegendRange(legendX, legendY, 0, 0, heatMap.colorCollection[i].value, true, this.currentPage);\n                    this.legendRange.push(rectPosition_1);\n                }\n                if (heatMap.legendSettings.showLabel) {\n                    var textPosition = new LegendRange(labelX, (labelY - size.height / 2), size.width, size.height, heatMap.colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n            }\n            if (!legendEventArgs.cancel) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                    if (text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, size.width, size.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, 'start', text, 0, 'translate(0,0)', 'middle');\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill : this.legendRange[i].visible ? options.fill : '#D3D3D3';\n                    this.drawSvgCanvas.createText(options, this.translategroup, text[0]);\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        this.translategroup.lastChild.setAttribute('dy', '0.6ex');\n                    }\n                }\n                listRect = new Rect(legendX, legendY, legendSize, legendSize);\n                var listColor = heatMap.legendOnLoad ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                    heatMap.colorCollection[i].color :\n                    this.legendRange[i].visible ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                        heatMap.colorCollection[i].color : '#D3D3D3';\n                var rectItems = new RectOption(heatMap.element.id + '_legend_list' + i, listColor, tempBorder, 1, listRect);\n                this.drawSvgCanvas.drawRectangle(rectItems, this.translategroup);\n                heatMap.horizontalGradient ? legendX = legendX + this.legendSize + this.labelPadding + size.width + this.listInterval :\n                    legendY += this.legendSize + this.listInterval;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n            this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n            var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_LegendScale_ClipPath' });\n            var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n            clippath.appendChild(clipRect);\n            this.translategroup.appendChild(clippath);\n            this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            this.legendScale.appendChild(this.translategroup);\n            heatMap.svgObject.appendChild(this.legend);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.translatePage = function (heatMap, page, isNext) {\n        var padding = 5;\n        if ((isNext && page >= 1 && page < this.numberOfPages) || (!isNext && page > 1 && page <= this.numberOfPages)) {\n            if (isNext) {\n                this.currentPage += 1;\n                this.legendRect.y += this.legendRect.height;\n            }\n            else {\n                this.currentPage -= 1;\n                this.legendRect.y -= this.legendRect.height;\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.paginggroup.removeChild(this.paginggroup.firstChild);\n                while (this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            else {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.fillRect(this.legendRectScale.x - padding, this.legendRectScale.y - padding, this.legendRectScale.width +\n                    padding, this.legendRectScale.height + (2 * padding));\n                ctx.fillRect(this.pagingRect.x, this.pagingRect.y, this.pagingRect.width, this.pagingRect.height);\n            }\n            this.renderListLegendMode(this.legendRectScale, true);\n        }\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection && heatMap.rectSelected) {\n            var ctx = heatMap.secondaryCanvasRenderer.ctx;\n            var position = heatMap.legendSettings.position;\n            var initialRect = heatMap.initialClipRect;\n            var rectX = position === 'Right' ? initialRect.x + initialRect.width : 0;\n            var rectY = position === 'Bottom' ? initialRect.y + initialRect.height : 0;\n            var rectWidth = position === 'Right' ? heatMap.availableSize.width - (initialRect.x +\n                initialRect.width) : position === 'Left' ? initialRect.x : heatMap.availableSize.width;\n            var rectHeight = position === 'Top' ? initialRect.y : position === 'Bottom' ?\n                heatMap.availableSize.height - (initialRect.y + initialRect.height) : heatMap.availableSize.height;\n            ctx.save();\n            ctx.clearRect(rectX, rectY, rectWidth, rectHeight);\n            ctx.restore();\n            var oldCanvas = document.getElementById(heatMap.element.id + '_canvas');\n            var newCanvas = document.getElementById(heatMap.element.id + '_secondary_canvas');\n            var rectImage = oldCanvas.getContext('2d').getImageData(rectX, rectY, rectWidth, rectHeight);\n            newCanvas.getContext('2d').putImageData(rectImage, rectX, rectY);\n            oldCanvas.style.opacity = '0.3';\n        }\n    };\n    /**\n     * To create div container for tooltip which appears on hovering the smart legend.\n     * @param heatmap\n     * @private\n     */\n    Legend.prototype.createTooltipDiv = function (heatMap) {\n        var element = createElement('div', {\n            id: this.heatMap.element.id + 'legendLabelTooltipContainer',\n            styles: 'position:absolute'\n        });\n        this.heatMap.element.appendChild(element);\n    };\n    /**\n     * To render tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.renderTooltip = function (currentLegendRect) {\n        var heatMap = this.heatMap;\n        var tempTooltipText = [currentLegendRect.label];\n        var offset = null;\n        offset = parseInt(heatMap.legendSettings.textStyle.size, 10) / 2;\n        this.tooltipObject = new tool({\n            offset: offset,\n            theme: heatMap.theme,\n            content: tempTooltipText,\n            location: {\n                x: currentLegendRect.x + (currentLegendRect.width / 2),\n                y: currentLegendRect.y + (currentLegendRect.height / 2)\n            },\n            inverted: heatMap.horizontalGradient ? false : true,\n            areaBounds: {\n                height: this.legendGroup.height + this.legendGroup.y,\n                width: this.legendGroup.width + this.legendGroup.x,\n                x: heatMap.legendSettings.position === 'Right' ? 0 : this.legendGroup.x,\n                y: heatMap.legendSettings.position === 'Top' ? heatMap.titleSettings.text === '' ? this.legendGroup.height -\n                    this.legendGroup.y : this.legendGroup.y : 0\n            }\n        }, '#' + this.heatMap.element.id + 'legendLabelTooltipContainer');\n        this.tooltipObject.element.style.visibility = 'visible';\n    };\n    /**\n     * To create tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.createTooltip = function (pageX, pageY) {\n        var currentLegendRect;\n        for (var i = 0; i < this.heatMap.colorCollection.length; i++) {\n            var position = this.legendRectPositionCollection[i];\n            if (position && pageX > position.x && pageX < position.width + position.x &&\n                pageY > position.y && pageY < position.height + position.y) {\n                currentLegendRect = this.legendRectPositionCollection[i];\n                break;\n            }\n        }\n        var ele = document.getElementById(this.heatMap.element.id + 'legendLabelTooltipContainer');\n        if (ele && ele.style.visibility === 'visible' && this.tooltipObject && !this.heatMap.isTouch) {\n            this.tooltipObject.fadeOut();\n            ele.style.visibility = 'hidden';\n        }\n        if (currentLegendRect) {\n            this.renderTooltip(currentLegendRect);\n        }\n    };\n    /**\n     * Toggle the visibility of cells based on legend selection\n     * @private\n     */\n    Legend.prototype.legendRangeSelection = function (index) {\n        var heatMap = this.heatMap;\n        var legendRange = this.legendRange;\n        var padding = 5;\n        var legendPadding = heatMap.horizontalGradient ? 10 : 0;\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        heatMap.rangeSelection = true;\n        if (heatMap.enableCanvasRendering) {\n            var ctx_2 = heatMap.canvasRenderer.ctx;\n            if (heatMap.legendSettings.enableSmartLegend) {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, (legendBound.width + this.labelPadding +\n                    this.maxLegendLabelSize.width) + padding, legendBound.height + 2 * (padding + legendPadding));\n            }\n            else {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, legendBound.width +\n                    padding, legendBound.height + (2 * padding));\n            }\n        }\n        else {\n            if (heatMap.legendSettings.enableSmartLegend) {\n                while (this.legend && this.legend.childNodes.length) {\n                    this.legend.removeChild(this.legend.firstChild);\n                }\n            }\n            else {\n                while (this.translategroup && this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            removeElement(heatMap.heatMapSeries.containerRectObject.id);\n            if (heatMap.cellSettings.showLabel) {\n                removeElement(heatMap.heatMapSeries.containerTextObject.id);\n            }\n        }\n        if (heatMap.legendSettings.enableSmartLegend) {\n            if (heatMap.colorCollection.length !== heatMap.legendColorCollection.length) {\n                if (index === heatMap.legendColorCollection.length - 1) {\n                    heatMap.toggleValue[index - 1].visible = this.visibilityCollections[index - 1] =\n                        legendRange[index - 1].visible = !legendRange[index].visible;\n                }\n                else {\n                    if (index === heatMap.colorCollection.length - 1) {\n                        heatMap.toggleValue[index + 1].visible = this.visibilityCollections[index + 1] =\n                            legendRange[index + 1].visible = !legendRange[index].visible;\n                    }\n                }\n            }\n        }\n        heatMap.toggleValue[index].visible = this.visibilityCollections[index] = legendRange[index].visible = !legendRange[index].visible;\n        heatMap.legendOnLoad = false;\n        if (heatMap.legendSettings.enableSmartLegend) {\n            this.renderSmartLegend();\n            var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n            this.renderLegendLabel(rectItemsSvg);\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            if (heatMap.renderingMode === 'SVG') {\n                this.renderTitle(rectItemsSvg);\n            }\n        }\n        else {\n            this.renderListLegendMode(this.legendRectScale, false);\n        }\n        if (heatMap.enableCanvasRendering) {\n            ctx.restore();\n        }\n        heatMap.heatMapSeries.renderRectSeries();\n        heatMap.clearSelection();\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection) {\n            // heatMap.createSvg();\n            // heatMap.refreshBound();\n            // heatMap.createMultiCellDiv(false);\n        }\n    };\n    /**\n     * update visibility collections of legend and series\n     * @private\n     */\n    Legend.prototype.updateLegendRangeCollections = function () {\n        var heatMap = this.heatMap;\n        heatMap.rangeSelection = !heatMap.legendOnLoad ? true : false;\n        this.visibilityCollections = !heatMap.legendOnLoad ? this.visibilityCollections : [];\n        heatMap.toggleValue = !heatMap.legendOnLoad ? heatMap.toggleValue : [];\n        this.legendRange = !heatMap.legendOnLoad ? this.legendRange : [];\n        this.legendTextRange = !heatMap.legendOnLoad ? this.legendTextRange : [];\n    };\n    return Legend;\n}());\nexport { Legend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { increaseDateTimeInterval } from '../utils/helper';\nimport { BubbleData } from '../model/base';\n/**\n * Configures the Adaptor Property in the Heatmap.\n */\nvar Data = /** @class */ (function (_super) {\n    __extends(Data, _super);\n    function Data() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Data.prototype, \"isJsonData\", void 0);\n    __decorate([\n        Property('None')\n    ], Data.prototype, \"adaptorType\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"xDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"yDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"valueMapping\", void 0);\n    __decorate([\n        Complex({}, BubbleData)\n    ], Data.prototype, \"bubbleDataMapping\", void 0);\n    return Data;\n}(ChildProperty));\nexport { Data };\nvar AdaptiveMinMax = /** @class */ (function () {\n    function AdaptiveMinMax() {\n    }\n    return AdaptiveMinMax;\n}());\nexport { AdaptiveMinMax };\n/**\n *\n * The `Adaptor` module is used to handle JSON and Table data.\n */\nvar Adaptor = /** @class */ (function () {\n    function Adaptor(heatMap) {\n        this.reconstructedXAxis = [];\n        this.reconstructedYAxis = [];\n        this.adaptiveXMinMax = new AdaptiveMinMax();\n        this.adaptiveYMinMax = new AdaptiveMinMax();\n        this.heatMap = heatMap;\n    }\n    /**\n     * Method to construct Two Dimentional Datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructDatasource = function (dataSource, dataSourceSettings) {\n        if (dataSourceSettings.adaptorType === 'Cell') {\n            var xAxis = this.heatMap.xAxis;\n            var yAxis = this.heatMap.yAxis;\n            this.adaptiveXMinMax.min = xAxis.minimum;\n            this.adaptiveXMinMax.max = xAxis.maximum;\n            this.adaptiveYMinMax.min = yAxis.minimum;\n            this.adaptiveYMinMax.max = yAxis.maximum;\n            if (((xAxis.valueType === 'Numeric' || xAxis.valueType === 'DateTime') &&\n                (isNullOrUndefined(xAxis.minimum) || isNullOrUndefined(xAxis.maximum))) ||\n                ((yAxis.valueType === 'Numeric' || yAxis.valueType === 'DateTime') &&\n                    (isNullOrUndefined(yAxis.minimum) || isNullOrUndefined(yAxis.maximum)))) {\n                this.getMinMaxValue(dataSource, dataSourceSettings, xAxis, yAxis);\n            }\n            this.heatMap.isCellData = true;\n        }\n        if (dataSourceSettings.adaptorType === 'None') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = this.processJsonTableData(dataSource, dataSourceSettings);\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.heatMap.completeAdaptDataSource = this.processJsonCellData(dataSource, dataSourceSettings);\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.constructAdaptiveAxis();\n            this.heatMap.completeAdaptDataSource = this.processCellData(dataSource);\n            this.heatMap.isCellData = true;\n        }\n    };\n    /**\n     * Method to construct Axis Collection.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructAdaptiveAxis = function () {\n        var xAxis = this.heatMap.xAxis;\n        var yAxis = this.heatMap.yAxis;\n        var intervalType;\n        if (xAxis.valueType === 'Numeric') {\n            this.reconstructedXAxis = this.getNumericAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.increment);\n        }\n        if (yAxis.valueType === 'Numeric') {\n            this.reconstructedYAxis = this.getNumericAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.increment);\n        }\n        if (xAxis.valueType === 'DateTime') {\n            this.reconstructedXAxis = this.getDateAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.intervalType, xAxis.increment);\n        }\n        if (yAxis.valueType === 'DateTime') {\n            this.reconstructedYAxis = this.getDateAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.intervalType, yAxis.increment);\n        }\n    };\n    /**\n     * Method to calculate Numeric Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getNumericAxisCollection = function (min, max, increment) {\n        var loopIndex = min;\n        var tempAxisColl = [];\n        while (loopIndex <= max) {\n            tempAxisColl.push(loopIndex.toString());\n            loopIndex = loopIndex + increment;\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate DateTime Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getDateAxisCollection = function (min, max, intervalType, increment) {\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.heatMap.intl.getDateParser(option);\n        var dateFormatter = this.heatMap.intl.getDateFormat(option);\n        min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: min }).val))));\n        var tempInterval = min;\n        var tempAxisColl = [];\n        while (tempInterval <= max) {\n            tempAxisColl.push(new Date(tempInterval).toString());\n            tempInterval = increaseDateTimeInterval(tempInterval, 1, intervalType, increment).getTime();\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate Maximum and Minimum Value from datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.getMinMaxValue = function (dataSource, adapData, xAxis, yAxis) {\n        var data = dataSource;\n        var label = Object.keys(data[0]);\n        if (data.length > 0) {\n            this.adaptiveXMinMax.min = !isNullOrUndefined(xAxis.minimum) ? xAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.min = !isNullOrUndefined(yAxis.minimum) ? yAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n            this.adaptiveXMinMax.max = !isNullOrUndefined(xAxis.maximum) ? xAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.max = !isNullOrUndefined(yAxis.maximum) ? yAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n        }\n        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n            // tslint:disable-next-line:no-any\n            var xDataIndex = adapData.isJsonData ? data[dataIndex][label[0]] : data[dataIndex][0];\n            // tslint:disable-next-line:no-any\n            var yDataIndex = adapData.isJsonData ? data[dataIndex][label[1]] : data[dataIndex][1];\n            if (xDataIndex < this.adaptiveXMinMax.min && isNullOrUndefined(xAxis.minimum)) {\n                this.adaptiveXMinMax.min = xDataIndex;\n            }\n            if (xDataIndex > this.adaptiveXMinMax.max && isNullOrUndefined(xAxis.maximum)) {\n                this.adaptiveXMinMax.max = xDataIndex;\n            }\n            if (yDataIndex < this.adaptiveYMinMax.min && isNullOrUndefined(yAxis.minimum)) {\n                this.adaptiveYMinMax.min = yDataIndex;\n            }\n            if (yDataIndex > this.adaptiveYMinMax.max && isNullOrUndefined(yAxis.maximum)) {\n                this.adaptiveYMinMax.max = yDataIndex;\n            }\n        }\n    };\n    /**\n     * Method to process Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processCellData = function (dataSource) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.reconstructedXAxis;\n        var yLabels = this.reconstructedYAxis;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        this.reconstructData = [];\n        if (tempDataCollection && tempDataCollection.length) {\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                if (this.heatMap.xAxis.valueType === 'Category') {\n                    currentDataXIndex = tempDataCollection[xindex][0];\n                }\n                else {\n                    currentDataXIndex = xLabels.indexOf(tempDataCollection[xindex][0].toString());\n                }\n                if (currentDataXIndex > -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    if (this.heatMap.yAxis.valueType === 'Category') {\n                        currentDataYIndex = tempDataCollection[xindex][1];\n                    }\n                    else {\n                        currentDataYIndex = yLabels.indexOf(tempDataCollection[xindex][1].toString());\n                    }\n                    if (currentDataYIndex !== -1) {\n                        while (this.reconstructData[currentDataXIndex][currentDataYIndex] !== '') {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        this.reconstructData[currentDataXIndex][currentDataYIndex] = isNullOrUndefined(tempDataCollection[xindex][2]) ?\n                            '' : tempDataCollection[xindex][2];\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to process JSON Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonCellData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xAxisLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yAxisLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var axisCollections = this.heatMap.axisCollections;\n        if (xAxisLabels.length === 0 || yAxisLabels.length === 0) {\n            this.generateAxisLabels(dataSource, adaptordata);\n        }\n        var xLabels = (this.heatMap.xAxis.valueType === 'Category') ? (xAxisLabels.length > 0 ?\n            this.heatMap.xAxis.labels : axisCollections[0].jsonCellLabel) : axisCollections[0].labelValue;\n        var yLabels = (this.heatMap.yAxis.valueType === 'Category') ? (yAxisLabels.length > 0 ?\n            this.heatMap.yAxis.labels : axisCollections[1].jsonCellLabel) : axisCollections[1].labelValue;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var index = 0; index < tempDataCollection.length; index++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    currentDataYIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, yLabels, adaptordata.yDataMapping.split('.'), this.heatMap.yAxis.valueType);\n                    if (currentDataYIndex !== -1) {\n                        while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        if (this.heatMap.bubbleSizeWithColor) {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = [\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.size.split('.'), ''),\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.color.split('.'), '')\n                            ];\n                        }\n                        else {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.valueMapping.split('.'), '');\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to generate axis labels when labels are not given.\n     * @return {string}\n     * @private\n     */\n    Adaptor.prototype.generateAxisLabels = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var hasXLabels = xLabels.length > 0 ? true : false;\n        var hasYLabels = yLabels.length > 0 ? true : false;\n        var axisCollection = this.heatMap.axisCollections;\n        for (var index = 0; index < axisCollection.length; index++) {\n            var valueType = axisCollection[index].valueType;\n            var axis = axisCollection[index];\n            if (valueType === 'Category') {\n                var hasLabels = void 0;\n                var dataMapping = void 0;\n                var labels = void 0;\n                if (axis.orientation === 'Horizontal') {\n                    hasLabels = hasXLabels;\n                    dataMapping = adaptordata.xDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                else {\n                    hasLabels = hasYLabels;\n                    dataMapping = adaptordata.yDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                if (!hasLabels) {\n                    for (var i = 0; i < tempDataCollection.length; i++) {\n                        if (dataMapping in tempDataCollection[i]) {\n                            var xValue = tempDataCollection[i][dataMapping].toString();\n                            if (labels.indexOf(xValue.toString()) === -1) {\n                                labels.push(xValue);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (valueType === 'DateTime') {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n        }\n    };\n    /**\n     * Method to get data from complex mapping.\n     * @return {number|string}\n     * @private\n     */\n    Adaptor.prototype.getSplitDataValue = function (\n    // tslint:disable-next-line:no-any \n    tempSplitDataCollection, adaptordata, labels, tempSplitData, valueType) {\n        var value = -1;\n        this.tempSplitDataCollection = tempSplitDataCollection;\n        for (var splitIndex = 0; splitIndex < tempSplitData.length; splitIndex++) {\n            value = !isNullOrUndefined(labels) ? (!(valueType === 'DateTime') ?\n                labels.indexOf(this.tempSplitDataCollection[tempSplitData[splitIndex]]) :\n                labels.map(Number).indexOf(+this.tempSplitDataCollection[tempSplitData[splitIndex]])) : null;\n            if (!isNullOrUndefined(this.tempSplitDataCollection)) {\n                this.tempSplitDataCollection = value !== -1 && !isNullOrUndefined(labels) ?\n                    this.tempSplitDataCollection : this.tempSplitDataCollection[tempSplitData[splitIndex]];\n            }\n            if (isNullOrUndefined(this.tempSplitDataCollection)) {\n                break;\n            }\n        }\n        value = !isNullOrUndefined(labels) ? value : isNullOrUndefined(this.tempSplitDataCollection) ||\n            this.tempSplitDataCollection.toString() === '' ? '' : parseFloat(this.tempSplitDataCollection.toString());\n        return value;\n    };\n    /**\n     * Method to process JSON Table datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonTableData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var key;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[xindex], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    for (var index = 0; index < Object.keys(this.tempSplitDataCollection).length; index++) {\n                        key = Object.keys(this.tempSplitDataCollection)[index];\n                        currentDataYIndex = key !== adaptordata.xDataMapping ? yLabels.indexOf(key) : -1;\n                        if (currentDataYIndex !== -1) {\n                            while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                                this.reconstructData[currentDataXIndex].push('');\n                            }\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] =\n                                isNullOrUndefined(this.tempSplitDataCollection[key]) ?\n                                    '' : this.tempSplitDataCollection[key];\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * To destroy the Adaptor.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.destroy = function (heatMap) {\n        /**\n         * No Lines\n         */\n    };\n    ;\n    /**\n     * To get Module name\n     */\n    Adaptor.prototype.getModuleName = function () {\n        return 'Adaptor';\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n","/**\n * Heat Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Internationalization, Complex, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { remove, Event, EventHandler, Touch } from '@syncfusion/ej2-base';\nimport { Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\nimport { Size, stringToNumber, RectOption, Rect, TextBasic, measureText } from './utils/helper';\nimport { DrawSvgCanvas, TextOption, titlePositionX, getTitle, showTooltip, getElement, SelectedCellDetails } from './utils/helper';\nimport { removeElement, CanvasTooltip, getTooltipText } from './utils/helper';\nimport { Margin, Title } from './model/base';\nimport { Theme, getThemeColor } from './model/theme';\nimport { Axis } from './axis/axis';\nimport { AxisHelper } from './axis/axis-helpers';\nimport { Series, CellSettings } from './series/series';\nimport { PaletteSettings, CellColor } from './utils/colorMapping';\nimport { TooltipSettings } from './utils/tooltip';\nimport { TwoDimensional } from './datasource/twodimensional';\nimport { LegendSettings } from '../heatmap/legend/legend';\nimport { Data } from './datasource/adaptor';\nvar HeatMap = /** @class */ (function (_super) {\n    __extends(HeatMap, _super);\n    function HeatMap() {\n        /**\n         * The width of the heatmap as a string accepts input as both like '100px' or '100%'.\n         * If specified as '100%, heatmap renders to the full width of its parent element.\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.enableCanvasRendering = false;\n        /** @private */\n        _this.isColorRange = false;\n        /** @private */\n        _this.isCellTapHold = false;\n        /** @private */\n        _this.selectedCellCount = 0;\n        /** @private */\n        _this.toggleValue = [];\n        /** @private */\n        _this.legendOnLoad = true;\n        /** @private */\n        _this.resizing = false;\n        /** @private */\n        _this.rendering = true;\n        /** @private */\n        _this.horizontalGradient = _this.legendSettings.position === 'Bottom' || _this.legendSettings.position === 'Top';\n        /** @private */\n        _this.multiSelection = false;\n        /** @private */\n        _this.rectSelected = false;\n        /** @private */\n        _this.previousSelectedCellsRect = [];\n        /** @private */\n        _this.multiCellCollection = [];\n        /** @private */\n        _this.selectedMultiCellCollection = [];\n        /** @private */\n        _this.tempMultiCellCollection = [];\n        /**\n         * @private\n         */\n        _this.tooltipCollection = [];\n        /**\n         * @private\n         */\n        _this.isCellData = false;\n        /** @private */\n        _this.isBlazor = false;\n        return _this;\n    }\n    HeatMap.prototype.preRender = function () {\n        this.initPrivateVariable();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    HeatMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.canvasRenderer = new CanvasRenderer(this.element.id);\n        this.secondaryCanvasRenderer = new CanvasRenderer(this.element.id + '_secondary');\n        this.heatMapAxis = new AxisHelper(this);\n        this.heatMapSeries = new Series(this);\n        this.drawSvgCanvas = new DrawSvgCanvas(this);\n        this.twoDimensional = new TwoDimensional(this);\n        this.cellColor = new CellColor(this);\n        this.tempRectHoverClass = '';\n        this.tempTooltipRectId = '';\n        this.setCulture();\n        this.isBlazor = isBlazor();\n    };\n    /**\n     * Method to set culture for heatmap\n     */\n    HeatMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    HeatMap.prototype.render = function () {\n        this.updateBubbleHelperProperty();\n        this.trigger('load', { heatmap: (this.isBlazor ? null : this) });\n        this.initAxis();\n        this.processInitData();\n        this.setTheme();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.createSvg();\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n        this.renderElements();\n        this.appendSvgObject();\n        if (this.tooltipModule) {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.renderComplete();\n    };\n    /**\n     * To re-calculate the datasource while changing datasource property dynamically.\n     * @private\n     */\n    HeatMap.prototype.reRenderDatasource = function () {\n        this.dataSourceMinValue = null;\n        this.dataSourceMaxValue = null;\n        this.processInitData();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n    };\n    /**\n     * To process datasource property.\n     * @private\n     */\n    HeatMap.prototype.processInitData = function () {\n        if (this.adaptorModule) {\n            this.adaptorModule.constructDatasource(this.dataSource, this.dataSourceSettings);\n        }\n        else {\n            this.completeAdaptDataSource = this.dataSource;\n        }\n    };\n    /**\n     * To set render mode of heatmap as SVG or Canvas.\n     * @private\n     */\n    HeatMap.prototype.setRenderMode = function () {\n        if (this.renderingMode === 'Canvas') {\n            this.enableCanvasRendering = true;\n        }\n        else if (this.renderingMode === 'Auto' &&\n            (this.axisCollections[0].axisLabelSize * this.axisCollections[1].axisLabelSize) >= 10000) {\n            this.enableCanvasRendering = true;\n        }\n        else {\n            this.enableCanvasRendering = false;\n        }\n    };\n    /**\n     * To set bubble helper private property.\n     * @private\n     */\n    HeatMap.prototype.updateBubbleHelperProperty = function () {\n        if (this.cellSettings.tileType === 'Bubble' &&\n            (this.cellSettings.bubbleType === 'Size' || this.cellSettings.bubbleType === 'Sector')) {\n            this.legendVisibilityByCellType = false;\n        }\n        else if (this.legendModule && this.legendSettings.visible) {\n            this.legendVisibilityByCellType = true;\n        }\n        if (this.cellSettings.tileType === 'Bubble' && this.cellSettings.bubbleType === 'SizeAndColor') {\n            this.bubbleSizeWithColor = true;\n        }\n        else {\n            this.bubbleSizeWithColor = false;\n        }\n    };\n    HeatMap.prototype.renderElements = function () {\n        this.tooltipCollection = [];\n        this.renderSecondaryElement();\n        this.renderBorder();\n        this.renderTitle();\n        this.heatMapAxis.renderAxes();\n        if (this.tooltipModule && this.showTooltip) {\n            this.tooltipModule.tooltipObject = null;\n            this.tooltipModule.createTooltipDiv(this);\n        }\n        this.heatMapSeries.renderRectSeries();\n        if (this.legendModule && this.legendSettings.visible\n            && this.legendVisibilityByCellType) {\n            this.legendModule.renderLegendItems();\n            if (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltipDiv(this);\n            }\n        }\n    };\n    /**\n     * Get component name\n     */\n    HeatMap.prototype.getModuleName = function () {\n        return 'heatmap';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    HeatMap.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    HeatMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        var refreshBounds = false;\n        var isUpdateSelection = true;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'renderingMode':\n                    this.rendering = false;\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'cellSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendModule && ((newProp.cellSettings.tileType !==\n                        oldProp.cellSettings.tileType) || (newProp.cellSettings.bubbleType !== oldProp.cellSettings.bubbleType))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    if (this.cellSettings.tileType === 'Bubble') {\n                        isUpdateSelection = false;\n                    }\n                    this.reRenderDatasource();\n                    refreshBounds = true;\n                    break;\n                case 'showTooltip':\n                    refreshBounds = true;\n                    break;\n                case 'dataSource':\n                case 'dataSourceSettings':\n                    this.isCellData = false;\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'titleSettings':\n                case 'width':\n                case 'height':\n                case 'margin':\n                    refreshBounds = true;\n                    break;\n                case 'legendSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType && (((newProp.legendSettings.visible !== oldProp.legendSettings.visible) ||\n                        (newProp.legendSettings.enableSmartLegend !== oldProp.legendSettings.enableSmartLegend)))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    else {\n                        this.legendOnLoad = false;\n                    }\n                    refreshBounds = true;\n                    break;\n                case 'yAxis':\n                case 'xAxis':\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    refreshBounds = true;\n                    break;\n                case 'paletteSettings':\n                    this.paletteCellSelectionUpdation();\n                    this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n                    this.cellColor.getColorCollection();\n                    this.calculateBounds();\n                    renderer = true;\n                    break;\n                case 'theme':\n                    this.setTheme();\n                    renderer = true;\n                    break;\n                case 'tooltipSettings':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.tooltipObject.fill = this.tooltipSettings.fill;\n                        this.tooltipModule.tooltipObject.border = this.tooltipSettings.border;\n                        this.tooltipModule.tooltipObject.textStyle = this.tooltipSettings.textStyle;\n                        this.tooltipModule.tooltipObject.template = this.tooltipSettings.template;\n                        this.tooltipModule.tooltipObject.refresh();\n                    }\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.createSvg();\n            this.renderElements();\n            this.appendSvgObject();\n            this.trigger('created');\n            if (!isUpdateSelection) {\n                this.clearSelection();\n            }\n        }\n        else if (refreshBounds) {\n            this.createSvg();\n            this.refreshBound();\n            this.appendSvgObject();\n            this.trigger('created');\n        }\n        if (this.allowSelection && this.rectSelected) {\n            if (isUpdateSelection) {\n                this.updateCellSelection();\n            }\n            else {\n                this.clearSelection();\n            }\n        }\n        this.rendering = true;\n    };\n    HeatMap.prototype.paletteCellSelectionUpdation = function () {\n        this.updateBubbleHelperProperty();\n        if (this.legendVisibilityByCellType) {\n            this.legendOnLoad = true;\n            this.legendModule.updateLegendRangeCollections();\n        }\n    };\n    /**\n     * create svg or canvas element\n     * @private\n     */\n    HeatMap.prototype.createSvg = function () {\n        this.removeSvg();\n        this.setRenderMode();\n        this.calculateSize();\n        if (!this.enableCanvasRendering) {\n            this.svgObject = this.renderer.createSvg({\n                id: this.element.id + '_svg',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.cellSettings.border.width.toString() === '0' && this.cellSettings.tileType === 'Rect') {\n                this.svgObject.setAttribute('shape-rendering', 'crispEdges');\n            }\n        }\n        else {\n            this.svgObject = this.canvasRenderer.createCanvas({\n                id: this.element.id + '_canvas',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.allowSelection) {\n                this.createMultiCellDiv(true);\n            }\n        }\n    };\n    /**\n     *  To Remove the SVG.\n     * @private\n     */\n    HeatMap.prototype.removeSvg = function () {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        if (document.getElementById(this.element.id + 'Celltooltipcontainer')) {\n            remove(document.getElementById(this.element.id + 'Celltooltipcontainer'));\n        }\n        if (document.getElementById(this.element.id + 'legendLabelTooltipContainer')) {\n            remove(document.getElementById(this.element.id + 'legendLabelTooltipContainer'));\n        }\n        if (document.getElementById(this.element.id + '_Multi_CellSelection_Canvas')) {\n            remove(document.getElementById(this.element.id + '_Multi_CellSelection_Canvas'));\n        }\n        if (document.getElementById(this.element.id + '_CellSelection_Container')) {\n            remove(document.getElementById(this.element.id + '_CellSelection_Container'));\n        }\n        if (this.svgObject) {\n            var svgElement = document.getElementById(this.svgObject.id);\n            if (svgElement) {\n                while (this.svgObject.childNodes.length) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                remove(this.svgObject);\n            }\n        }\n    };\n    HeatMap.prototype.renderSecondaryElement = function () {\n        var tooltipDiv = this.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        this.element.appendChild(tooltipDiv);\n        var divElement = this.createElement('div', {\n            id: this.element.id + '_CellSelection_Container',\n            styles: 'position:absolute; z-index: 2 ; top:' + this.initialClipRect.y + 'px' + '; left:' + this.initialClipRect.x + 'px',\n        });\n        this.element.appendChild(divElement);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return{ModuleDeclaration[]}\n     * @private\n     */\n    HeatMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.showTooltip) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        if (this.legendSettings) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.dataSource) {\n            modules.push({\n                member: 'Adaptor',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of Heatmap\n     */\n    HeatMap.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        this.element.classList.remove('e-heatmap');\n    };\n    /**\n     * Applies all the pending property changes and render the component again.\n     * @method destroy\n     * @return {void}.\n     */\n    HeatMap.prototype.refresh = function () {\n        _super.prototype.refresh.call(this);\n        this.element.classList.add('e-heatmap');\n    };\n    /**\n     * Appending svg object to the element\n     * @private\n     */\n    HeatMap.prototype.appendSvgObject = function () {\n        if (this.enableCanvasRendering && this.allowSelection) {\n            this.createMultiCellDiv(false);\n        }\n        else {\n            this.element.appendChild(this.svgObject);\n        }\n    };\n    HeatMap.prototype.renderBorder = function () {\n        this.border = {\n            width: 0\n        };\n        var width = 0;\n        var rect = new RectOption(this.element.id + '_HeatmapBorder', this.themeStyle.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.drawSvgCanvas.drawRectangle(rect, this.svgObject);\n    };\n    HeatMap.prototype.calculateSize = function () {\n        var width = stringToNumber(this.width, this.element.offsetWidth) || this.element.offsetWidth || 600;\n        var height = stringToNumber(this.height, this.element.offsetHeight) || this.element.offsetHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    HeatMap.prototype.renderTitle = function () {\n        if (this.titleSettings.text) {\n            var titleStyle = this.titleSettings.textStyle;\n            var anchor = titleStyle.textAlignment === 'Near' ? 'start' :\n                titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.titleCollection[0], titleStyle);\n            var options = new TextOption(this.element.id + '_HeatmapTitle', new TextBasic(titlePositionX(this.availableSize.width - this.margin.left - this.margin.right, this.margin.left, this.margin.right, titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection), titleStyle, titleStyle.color || this.themeStyle.heatMapTitle);\n            if (this.titleCollection.length > 1) {\n                this.drawSvgCanvas.createWrapText(options, titleStyle, this.svgObject);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, this.svgObject, this.titleCollection[0]);\n                if (this.titleCollection[0].indexOf('...') !== -1 && this.enableCanvasRendering) {\n                    this.tooltipCollection.push(new CanvasTooltip(this.titleSettings.text, new Rect(this.margin.left, this.margin.top, this.elementSize.width, this.elementSize.height)));\n                }\n            }\n        }\n    };\n    HeatMap.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId === (this.element.id + '_HeatmapTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.titleSettings.text, x, y, this.element.offsetWidth, this.element.id + '_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch, this);\n        }\n        else {\n            removeElement(this.element.id + '_Title_Tooltip');\n        }\n    };\n    HeatMap.prototype.axisTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId.indexOf(this.element.id + '_XAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_XAxis_MultiLevel') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_MultiLevel') !== -1)) {\n            var tooltipText = getTooltipText(this.tooltipCollection, x, y);\n            if (tooltipText) {\n                showTooltip(tooltipText, x, y, this.element.offsetWidth, this.element.id + '_axis_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n            }\n            else {\n                removeElement(this.element.id + '_axis_Tooltip');\n            }\n        }\n        else {\n            removeElement(this.element.id + '_axis_Tooltip');\n        }\n    };\n    HeatMap.prototype.isHeatmapRect = function (x, y) {\n        var firstRectDetails = [];\n        var lastRectDetails = [];\n        var isRect;\n        firstRectDetails.push(this.heatMapSeries.rectPositionCollection[0][0]);\n        lastRectDetails.push(this.heatMapSeries.rectPositionCollection[this.yLength - 1][this.xLength - 1]);\n        isRect = (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n            x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n            y <= (lastRectDetails[0].y + lastRectDetails[0].height)) ? true : false;\n        return isRect;\n    };\n    HeatMap.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    };\n    HeatMap.prototype.calculateBounds = function () {\n        var margin = this.margin;\n        // Title Height;\n        var titleHeight = 0;\n        var padding = (this.legendModule && this.legendSettings.position === 'Top'\n            && this.legendVisibilityByCellType) || this.titleSettings.textStyle.size === '0px' ? 0 : 16; // title padding\n        var left = margin.left;\n        var width = this.availableSize.width - left - margin.right;\n        if ((this.paletteSettings.colorGradientMode === 'Column' || this.paletteSettings.colorGradientMode === 'Row') &&\n            this.paletteSettings.type === 'Gradient') {\n            if (this.paletteSettings.palette.length === 0) {\n                this.legendVisibilityByCellType = false;\n            }\n            else {\n                for (var i = 0; i < this.paletteSettings.palette.length; i++) {\n                    if (this.paletteSettings.palette[i].value !== null || '') {\n                        this.legendVisibilityByCellType = true;\n                    }\n                    else if (this.paletteSettings.palette[i].value === null || '') {\n                        this.legendVisibilityByCellType = false;\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.titleSettings.text) {\n            this.titleCollection = getTitle(this.titleSettings.text, this.titleSettings.textStyle, width);\n            titleHeight = (measureText(this.titleSettings.text, this.titleSettings.textStyle).height * this.titleCollection.length) +\n                padding;\n        }\n        var top = margin.top + titleHeight;\n        this.titleRect = new Rect(margin.left, margin.top, this.availableSize.width - margin.left - margin.right, titleHeight);\n        var height = this.availableSize.height - top - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        var legendTop = this.initialClipRect.y;\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect);\n        }\n        this.heatMapAxis.measureAxis(this.initialClipRect);\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendSize(this.initialClipRect, legendTop);\n        }\n        this.heatMapAxis.calculateAxisSize(this.initialClipRect);\n    };\n    HeatMap.prototype.refreshBound = function () {\n        this.updateBubbleHelperProperty();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    HeatMap.prototype.initAxis = function () {\n        var axis;\n        var axes = [this.xAxis, this.yAxis];\n        this.axisCollections = [];\n        for (var i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.orientation = (i === 0) ? 'Horizontal' : 'Vertical';\n            axis.jsonCellLabel = [];\n            this.axisCollections.push(axis);\n        }\n    };\n    /**\n     * Method to bind events for HeatMap\n     */\n    HeatMap.prototype.wireEvents = function () {\n        var _this = this;\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.add(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick, this);\n        EventHandler.add(this.element, start, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, stop, this.heatMapMouseLeave, this);\n        EventHandler.add(this.element, move, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, cancel, this.heatMapMouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize.bind(this));\n        var heatmap = this;\n        /**\n         * Support for touch tapHold and tap for HeatMap\n         */\n        var touchObj = new Touch(this.element, {\n            tapHold: function () {\n                heatmap.isCellTapHold = true;\n                heatmap.getDataCollection();\n                heatmap.currentRect.allowCollection = false;\n                heatmap.setCellOpacity();\n                var argData = {\n                    heatmap: (_this.isBlazor ? null : heatmap),\n                    cancel: false,\n                    name: 'cellSelected',\n                    data: heatmap.multiCellCollection\n                };\n                heatmap.trigger('cellSelected', argData);\n            },\n            tap: function () {\n                var isCellTap = false;\n                if (!heatmap.isCellTapHold) {\n                    isCellTap = true;\n                }\n                heatmap.tooltipOnMouseMove(null, heatmap.currentRect, isCellTap);\n            }\n        });\n        this.setStyle(this.element);\n    };\n    /**\n     * Applying styles for heatmap element\n     */\n    HeatMap.prototype.setStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    };\n    /**\n     * Method to unbind events for HeatMap\n     */\n    HeatMap.prototype.unWireEvents = function () {\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.remove(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick);\n        EventHandler.remove(this.element, start, this.heatMapMouseMove);\n        EventHandler.remove(this.element, move, this.heatMapMouseLeave);\n        EventHandler.remove(this.element, move, this.heatMapMouseMove);\n        EventHandler.remove(this.element, cancel, this.heatMapMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize);\n    };\n    /**\n     * Handles the heatmap resize.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapResize = function (e) {\n        var _this = this;\n        this.resizing = true;\n        var argData = {\n            heatmap: (this.isBlazor ? null : this),\n            cancel: false,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n        };\n        if (this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.resizeTimer = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTimer);\n                return;\n            }\n            _this.createSvg();\n            argData.currentSize = _this.availableSize;\n            _this.trigger('resized', argData);\n            _this.refreshBound();\n            _this.appendSvgObject();\n            if (_this.allowSelection) {\n                _this.updateCellSelection();\n            }\n            _this.trigger('loaded', (_this.isBlazor ? null : { heatmap: _this }));\n            _this.resizing = false;\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to bind selection after window resize for HeatMap\n     */\n    HeatMap.prototype.updateCellSelection = function () {\n        var wSize = this.initialClipRect.width / this.axisCollections[0].axisLabelSize;\n        var hSize = this.initialClipRect.height / this.axisCollections[1].axisLabelSize;\n        var x = this.initialClipRect.x;\n        var y = this.initialClipRect.y;\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                for (var i = 0; i < containersRect.childNodes.length; i++) {\n                    containersRect.childNodes[i].setAttribute('opacity', '0.3');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    }\n                }\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClass = this.multiCellCollection[i].cellElement;\n                    var cellIndex = collectionClass.id.replace(this.element.id + '_HeatMapRect_', '');\n                    var index = parseInt(cellIndex, 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                        this.addSvgClass(containersRect.childNodes[index]);\n                    }\n                }\n            }\n        }\n        else if (this.enableCanvasRendering) {\n            var rect = this.multiCellCollection;\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectHeight = initialRect.y + initialRect.height;\n            var rectWidth = initialRect.x + initialRect.width;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                this.multiCellCollection[i].width = rect[i].width = wSize;\n                this.multiCellCollection[i].height = rect[i].height = hSize;\n                this.multiCellCollection[i].x = rect[i].x = x + wSize * this.multiCellCollection[i].xPosition;\n                this.multiCellCollection[i].y = rect[i].y = y + hSize * this.multiCellCollection[i].yPosition;\n                var rectImage = oldCanvas.getContext('2d').getImageData(rect[i].x, rect[i].y, rect[i].width, rect[i].height);\n                newCanvas.getContext('2d').putImageData(rectImage, rect[i].x, rect[i].y);\n                oldCanvas.style.opacity = '0.3';\n            }\n            var topPositions = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPositions, 0, 0);\n            var bottomPositions = oldCanvas.getContext('2d').getImageData(0, rectHeight, this.availableSize.width, this.availableSize.height - rectHeight);\n            newCanvas.getContext('2d').putImageData(bottomPositions, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').\n                getImageData(rectWidth, 0, this.availableSize.width - rectWidth, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, rectWidth, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n            removeElement(this.element.id + '_selectedCells');\n        }\n    };\n    HeatMap.prototype.clearSVGSelection = function () {\n        var rect = document.getElementById(this.element.id + '_Container_RectGroup');\n        var text = document.getElementById(this.element.id + '_Container_TextGroup');\n        for (var i = 0; i < rect.childNodes.length; i++) {\n            var elementClassName = rect.childNodes[i].getAttribute('class');\n            if (elementClassName === this.element.id + '_selected') {\n                this.removeSvgClass(rect.childNodes[i], elementClassName);\n            }\n            rect.childNodes[i].setAttribute('opacity', '1');\n            if (this.cellSettings.showLabel && text.childNodes[i]) {\n                text.childNodes[i].setAttribute('opacity', '1');\n            }\n        }\n    };\n    /**\n     * Get the maximum length of data source for both horizontal and vertical\n     * @private\n     */\n    HeatMap.prototype.calculateMaxLength = function () {\n        var dataSource = this.completeAdaptDataSource;\n        if (dataSource && dataSource.length > 0) {\n            var xAxisMax = dataSource.length - 1;\n            var yAxisMax = 0;\n            for (var i = 0; i <= xAxisMax; i++) {\n                var length_1 = dataSource[i].length;\n                yAxisMax = yAxisMax > length_1 ? yAxisMax : length_1;\n            }\n            this.axisCollections[0].maxLength = xAxisMax;\n            this.axisCollections[1].maxLength = yAxisMax - 1;\n        }\n        else {\n            this.axisCollections[0].maxLength = 0;\n            this.axisCollections[1].maxLength = 0;\n        }\n    };\n    /**\n     * To find mouse x, y for aligned heatmap element svg position\n     */\n    HeatMap.prototype.setMouseXY = function (pageX, pageY) {\n        var rect = this.element.getBoundingClientRect();\n        var svgCanvasRect;\n        if (this.enableCanvasRendering) {\n            svgCanvasRect = document.getElementById(this.element.id + '_canvas').getBoundingClientRect();\n        }\n        else {\n            svgCanvasRect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n        }\n        this.mouseX = (pageX - rect.left) - Math.max(svgCanvasRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgCanvasRect.top - rect.top, 0);\n    };\n    HeatMap.prototype.heatMapMouseClick = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = false;\n            pageY = e.clientY;\n            pageX = e.clientX;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n        if (isheatmapRect) {\n            var currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n            this.trigger('cellClick', {\n                heatmap: (this.isBlazor ? null : this),\n                value: currentRect.value,\n                x: currentRect.x,\n                y: currentRect.y,\n                xLabel: this.heatMapSeries.hoverXAxisLabel,\n                yLabel: this.heatMapSeries.hoverYAxisLabel,\n                xValue: this.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMapSeries.hoverYAxisValue,\n                cellElement: this.enableCanvasRendering ? null : document.getElementById(currentRect.id)\n            });\n        }\n        this.notify('click', e);\n        if (this.paletteSettings.type !== 'Gradient' && this.legendModule\n            && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            var page = this.legendModule.navigationCollections;\n            if (page.length && pageX > page[0].x && pageX < page[0].x + page[0].width &&\n                pageY > page[0].y && pageY < page[0].y + page[0].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, true);\n            }\n            else if (page.length && pageX > page[1].x && pageX < page[1].x + page[1].width &&\n                pageY > page[1].y && pageY < page[1].y + page[1].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, false);\n            }\n            var legendRange = this.legendModule.legendRange;\n            var legendTextRange = this.legendModule.legendTextRange;\n            var loop = true;\n            for (var i = 0; i < legendRange.length; i++) {\n                if (this.legendModule && this.legendSettings.toggleVisibility &&\n                    this.legendModule.currentPage === legendRange[i].currentPage) {\n                    if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                        (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                        ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                            pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                            (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                        this.legendModule.legendRangeSelection(i);\n                        loop = false;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse Move.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseMove = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchmove' || e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = false;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        this.setMouseXY(pageX, pageY);\n        if (e.target && e.target.id) {\n            var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n            if (this.legendModule) {\n                if (isheatmapRect) {\n                    if (this.paletteSettings.type === 'Gradient' &&\n                        this.legendSettings.showGradientPointer && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                        this.legendModule.renderGradientPointer(e, pageX, pageY);\n                    }\n                }\n                else {\n                    this.legendModule.removeGradientPointer();\n                }\n                this.renderMousePointer(pageX, pageY);\n            }\n            var isshowTooltip = void 0;\n            var currentRect = void 0;\n            isshowTooltip = this.showTooltip && this.tooltipModule ? isheatmapRect : false;\n            if (isheatmapRect) {\n                currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n                if (e.which !== 2 && e.which !== 3) {\n                    isshowTooltip = this.cellSelectionOnMouseMove(e, currentRect, pageX, pageY, isshowTooltip);\n                }\n            }\n            this.tooltipOnMouseMove(e, currentRect, isshowTooltip, isheatmapRect);\n            if (this.legendModule && this.legendSettings.visible && this.paletteSettings.type === 'Fixed' &&\n                this.legendSettings.enableSmartLegend && this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltip(pageX, pageY);\n            }\n            if (!this.enableCanvasRendering) {\n                if (this.titleSettings.text && this.titleSettings.textStyle.textOverflow === 'Trim') {\n                    this.titleTooltip(e, pageX, pageY, this.isTouch);\n                }\n                this.axisTooltip(e, pageX, pageY, this.isTouch);\n                if (this.legendModule && this.legendSettings.visible && this.legendSettings.showLabel && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendLabelTooltip(e, pageX, pageY);\n                }\n                if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendTitleTooltip(e, pageX, pageY);\n                }\n            }\n            else {\n                elementRect = this.element.getBoundingClientRect();\n                var tooltipRect = (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                    this.legendSettings.labelDisplayType === 'None') ? false : true;\n                tooltipText = getTooltipText(this.tooltipCollection, pageX, pageY) ||\n                    (this.legendModule && tooltipRect && (getTooltipText(this.legendModule.legendLabelTooltip, pageX, pageY)\n                        || getTooltipText(this.legendModule.legendTitleTooltip, pageX, pageY)));\n                if (tooltipText) {\n                    showTooltip(tooltipText, pageX, pageY, this.element.offsetWidth, this.element.id + '_canvas_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n                }\n                else {\n                    removeElement(this.element.id + '_canvas_Tooltip');\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Triggering cell selection\n     */\n    HeatMap.prototype.cellSelectionOnMouseMove = function (e, currentRect, pageX, pageY, isshowTooltip) {\n        if ((this.cellSettings.tileType === 'Rect' && e.type === 'mousedown' || e.type === 'touchstart'\n            || e.type === 'pointerdown') && this.allowSelection) {\n            this.previousRect = currentRect;\n            this.multiSelection = true;\n            this.rectSelected = true;\n            this.initialCellX = pageX;\n            this.initialCellY = pageY;\n            e.preventDefault();\n        }\n        if (this.cellSettings.tileType === 'Rect' && this.multiSelection && currentRect) {\n            isshowTooltip = false;\n            this.highlightSelectedCells(this.previousRect, currentRect, pageX, pageY, e);\n        }\n        return isshowTooltip;\n    };\n    /**\n     * Rendering tooltip on mouse move\n     */\n    HeatMap.prototype.tooltipOnMouseMove = function (e, currentRect, isshowTooltip, isheatmapRect) {\n        var _this = this;\n        if (isshowTooltip && currentRect) {\n            if (this.tempTooltipRectId !== currentRect.id) {\n                if (this.showTooltip) {\n                    if ((this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n                        && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(currentRect.id);\n                    }\n                    this.tooltipModule.renderTooltip(currentRect);\n                    if (this.isTouch) {\n                        if (this.tooltipTimer) {\n                            window.clearTimeout(this.tooltipTimer);\n                        }\n                        this.tooltipTimer = setTimeout(function () {\n                            _this.tooltipModule.tooltipObject.fadeOut();\n                            _this.tooltipModule.isFadeout = true;\n                        }, 1500);\n                        if (e) {\n                            if (e.type === 'touchmove') {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }\n                this.tempTooltipRectId = currentRect.id;\n            }\n        }\n        else {\n            if (e !== null) {\n                if (!isheatmapRect) {\n                    if ((this.cellSettings.enableCellHighlighting || this.showTooltip) && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(e.target.id);\n                    }\n                    if (this.tooltipModule && this.showTooltip) {\n                        this.tooltipModule.showHideTooltip(false, true);\n                    }\n                }\n            }\n            this.tempTooltipRectId = '';\n        }\n    };\n    /**\n     * To select the multiple cells on mouse move action\n     */\n    HeatMap.prototype.highlightSelectedCells = function (previousRect, currentRect, pageX, pageY, e) {\n        var pXIndex = previousRect.xIndex;\n        var pYIndex = previousRect.yIndex;\n        var cXIndex = currentRect.xIndex;\n        var cYIndex = currentRect.yIndex;\n        this.currentRect = currentRect;\n        this.selectedCellsRect = new Rect(0, 0, 0, 0);\n        this.selectedCellsRect.x = previousRect.x > currentRect.x ? currentRect.x : previousRect.x;\n        this.selectedCellsRect.y = previousRect.y > currentRect.y ? currentRect.y : previousRect.y;\n        this.selectedCellsRect.width = ((previousRect.x > currentRect.x ? (pXIndex - cXIndex) :\n            (cXIndex - pXIndex)) + 1) * currentRect.width;\n        this.selectedCellsRect.height = ((previousRect.y > currentRect.y ? (pYIndex - cYIndex) :\n            (cYIndex - pYIndex)) + 1) * currentRect.height;\n        if (e.type === 'touchstart') {\n            this.isCellTapHold = true;\n        }\n        else {\n            this.isCellTapHold = false;\n        }\n        e.preventDefault();\n        if (e.ctrlKey === false && e.type !== 'touchstart' && e.type !== 'touchmove') {\n            this.removeSelectedCellsBorder();\n        }\n        var x = this.initialCellX > pageX ? pageX : this.initialCellX;\n        var y = this.initialCellY > pageY ? pageY : this.initialCellY;\n        var parentDiv = document.getElementById(this.element.id + '_CellSelection_Container');\n        var svgObject = this.renderer.createSvg({\n            id: this.element.id + '_CellSelection_Container_svg',\n            width: this.initialClipRect.width,\n            height: this.initialClipRect.height,\n        });\n        parentDiv.appendChild(svgObject);\n        var parent = document.getElementById(this.element.id + '_CellSelection_Container_svg');\n        var rect = new Rect(x - this.initialClipRect.x, y - this.initialClipRect.y, Math.abs(pageX - this.initialCellX), Math.abs(pageY - this.initialCellY));\n        var rectItems = new RectOption(this.element.id + '_selectedCells', '#87ceeb', { color: 'transparent', width: 1 }, 1, rect, '#0000ff');\n        parent.appendChild(this.renderer.drawRectangle(rectItems));\n        document.getElementById(this.element.id + '_selectedCells').style.opacity = '0.5';\n    };\n    /**\n     * Method to get selected cell data collection for HeatMap\n     */\n    HeatMap.prototype.getDataCollection = function () {\n        var pXIndex = this.previousRect.xIndex;\n        var pYIndex = this.previousRect.yIndex;\n        var cXIndex = this.currentRect.xIndex;\n        var cYIndex = this.currentRect.yIndex;\n        var minX = cXIndex > pXIndex ? pXIndex : cXIndex;\n        var maxX = cXIndex > pXIndex ? cXIndex : pXIndex;\n        var minY = cYIndex > pYIndex ? pYIndex : cYIndex;\n        var maxY = cYIndex > pYIndex ? cYIndex : pYIndex;\n        var tempX = minX;\n        var tempY = minY;\n        var cellX = this.previousRect.x;\n        var cellY = this.previousRect.y;\n        this.getCellCollection(this.currentRect, this.previousRect, true, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        tempX = minX;\n        tempY = minY;\n        cellX = this.previousRect.x;\n        cellY = this.previousRect.y;\n        this.checkSelectedCells();\n        this.getCellCollection(this.currentRect, this.previousRect, false, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        this.selectedMultiCellCollection = [];\n        this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n        this.selectedCellCount = 0;\n    };\n    /**\n     * To get the selected datas.\n     */\n    HeatMap.prototype.getCellCollection = function (currentRect, previousRect, singleCellData, tempX, tempY, maxX, maxY, minX, cellX, cellY) {\n        var xIndex = Math.abs((currentRect.xIndex === previousRect.xIndex ?\n            0 : currentRect.xIndex - previousRect.xIndex)) + 1;\n        var yIndex = Math.abs((currentRect.yIndex === previousRect.yIndex ?\n            0 : currentRect.yIndex - previousRect.yIndex)) + 1;\n        for (var i = 0; i < (xIndex * yIndex); i++) {\n            if (singleCellData) {\n                this.getSelectedCellData(cellX, cellY, true);\n            }\n            else {\n                this.getSelectedCellData(cellX, cellY, false);\n            }\n            if (tempX < maxX) {\n                cellX += currentRect.xIndex > previousRect.xIndex ? currentRect.width : -currentRect.width;\n                tempX++;\n            }\n            else if (tempY < maxY) {\n                cellY += currentRect.yIndex > previousRect.yIndex ? currentRect.height : -currentRect.height;\n                cellX = previousRect.x;\n                tempX = minX;\n            }\n        }\n    };\n    /**\n     * To remove the selection on mouse click without ctrl key.\n     */\n    HeatMap.prototype.removeSelectedCellsBorder = function () {\n        if (!this.enableCanvasRendering) {\n            var containerRect = document.getElementById(this.element.id + '_Container_RectGroup');\n            var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n            for (var i = 0; i < containerRect.childNodes.length; i++) {\n                var elementClassName = containerRect.childNodes[i].getAttribute('class');\n                containerRect.childNodes[i].setAttribute('opacity', '0.3');\n                if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                    containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    this.removeSvgClass(containerRect.childNodes[i], elementClassName);\n                }\n            }\n        }\n        else {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                var rect = this.previousSelectedCellsRect[i];\n                ctx.save();\n                ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n        }\n        this.multiCellCollection = [];\n    };\n    /**\n     * To highlight the selected multiple cells on mouse move action in canvas mode.\n     */\n    HeatMap.prototype.highlightSelectedAreaInCanvas = function (rect) {\n        if (rect.x) {\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectImage = oldCanvas.getContext('2d').getImageData(rect.x, rect.y, rect.width, rect.height);\n            newCanvas.getContext('2d').putImageData(rectImage, rect.x, rect.y);\n            oldCanvas.style.opacity = '0.3';\n            var topPosition = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPosition, 0, 0);\n            var bottomPosition = oldCanvas.getContext('2d').getImageData(0, initialRect.y + initialRect.height, this.availableSize.width, this.availableSize.height - (initialRect.y + initialRect.height));\n            newCanvas.getContext('2d').putImageData(bottomPosition, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').getImageData(initialRect.x + initialRect.width, 0, this.availableSize.width - (initialRect.x + initialRect.width), this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, initialRect.x + initialRect.width, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n        }\n    };\n    /**\n     * To get the collection of selected cells.\n     */\n    HeatMap.prototype.getSelectedCellData = function (cellX, cellY, cellCollection) {\n        var xAxis = this.axisCollections[0];\n        var yAxis = this.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var rectPosition = this.heatMapSeries.getCurrentRect(cellX + 1, cellY + 1);\n        var currentRect = document.getElementById(rectPosition.id);\n        var cellDetails = new SelectedCellDetails(null, '', '', 0, 0, null, 0, 0, 0, 0, 0, 0);\n        cellDetails.value = rectPosition.value;\n        cellDetails.xLabel = xLabels[rectPosition.xIndex].toString();\n        cellDetails.yLabel = yLabels[rectPosition.yIndex].toString();\n        cellDetails.xValue = xAxis.labelValue[rectPosition.xIndex];\n        cellDetails.yValue = yAxis.labelValue.slice().reverse()[rectPosition.yIndex];\n        cellDetails.cellElement = this.enableCanvasRendering ? null : currentRect;\n        cellDetails.xPosition = rectPosition.xIndex;\n        cellDetails.yPosition = rectPosition.yIndex;\n        cellDetails.width = this.currentRect.width;\n        cellDetails.height = this.currentRect.height;\n        cellDetails.x = this.currentRect.x;\n        cellDetails.y = this.currentRect.y;\n        this.currentRect.allowCollection = true;\n        this.addSvgClass(currentRect);\n        if (cellCollection) {\n            this.selectedMultiCellCollection.push(cellDetails);\n            this.currentRect.allowCollection = false;\n        }\n        else {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                if (this.multiCellCollection[i].xPosition === cellDetails.xPosition &&\n                    this.multiCellCollection[i].yPosition === cellDetails.yPosition) {\n                    this.currentRect.allowCollection = false;\n                    if (this.selectedCellCount === this.selectedMultiCellCollection.length) {\n                        this.currentRect.allowCollection = false;\n                        if (!this.enableCanvasRendering) {\n                            for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                                var rectElement = this.selectedMultiCellCollection[j].cellElement;\n                                if (rectElement) {\n                                    var index = rectElement.id.replace(this.element.id + '_HeatMapRect_', '');\n                                    var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                                    var elementClassName = rectElement.getAttribute('class');\n                                    rectElement.setAttribute('opacity', '0.3');\n                                    var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                                    if (getText) {\n                                        getText.setAttribute('opacity', '0.3');\n                                    }\n                                    this.removeSvgClass(rectElement, elementClassName);\n                                }\n                            }\n                        }\n                        else {\n                            var ctx = this.secondaryCanvasRenderer.ctx;\n                            var rect = this.canvasSelectedCells;\n                            ctx.save();\n                            ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                            ctx.restore();\n                            this.selectedCellsRect = new Rect(0, 0, 0, 0);\n                        }\n                        this.multiCellCollection.splice(i, 1);\n                    }\n                }\n            }\n        }\n        if (rectPosition.visible && !isNullOrUndefined(rectPosition.value) && this.currentRect.allowCollection === true) {\n            this.multiCellCollection.push(cellDetails);\n        }\n    };\n    /**\n     * To add class for selected cells\n     * @private\n     */\n    HeatMap.prototype.addSvgClass = function (element) {\n        if (!this.enableCanvasRendering) {\n            var className = this.element.id + '_selected';\n            element.setAttribute('class', className);\n        }\n    };\n    /**\n     * To remove class for unselected cells\n     * @private\n     */\n    HeatMap.prototype.removeSvgClass = function (rectElement, className) {\n        if (className) {\n            rectElement.setAttribute('class', className.replace(className, ''));\n        }\n    };\n    /**\n     * To clear the multi cell selection\n     */\n    HeatMap.prototype.clearSelection = function () {\n        if (!this.enableCanvasRendering && this.allowSelection) {\n            this.clearSVGSelection();\n        }\n        if (this.enableCanvasRendering) {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                ctx.save();\n                ctx.clearRect(this.previousSelectedCellsRect[i].x - 1, this.previousSelectedCellsRect[i].y - 1, this.previousSelectedCellsRect[i].width + 2, this.previousSelectedCellsRect[i].height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n            var canvas = document.getElementById(this.element.id + '_canvas');\n            canvas.style.opacity = '1';\n        }\n        this.tempMultiCellCollection = [];\n        this.multiCellCollection = [];\n        this.rectSelected = false;\n    };\n    HeatMap.prototype.renderMousePointer = function (pageX, pageY) {\n        var legendRange = this.legendModule.legendRange;\n        var legendTextRange = this.legendModule.legendTextRange;\n        var loop = true;\n        for (var i = 0; i < legendRange.length; i++) {\n            if (this.legendSettings.toggleVisibility && this.legendModule.currentPage === legendRange[i].currentPage) {\n                if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                    (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                    ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                        pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                        (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = 'Pointer';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = 'Pointer';\n                    }\n                    loop = false;\n                }\n                else if (loop) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = '';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseLeave = function (e) {\n        var _this = this;\n        if (e.target && e.target.id &&\n            (this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n            && !this.enableCanvasRendering) {\n            this.heatMapSeries.highlightSvgRect(this.tempTooltipRectId);\n        }\n        if (this.allowSelection && this.multiSelection) {\n            this.multiSelection = false;\n            if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'pointerup') {\n                if (e.which !== 2 && e.which !== 3) {\n                    if (this.isCellTapHold === false) {\n                        this.getDataCollection();\n                        this.currentRect.allowCollection = false;\n                        this.setCellOpacity();\n                        var argData = {\n                            heatmap: (this.isBlazor ? null : this),\n                            cancel: false,\n                            name: 'cellSelected',\n                            data: this.multiCellCollection\n                        };\n                        this.trigger('cellSelected', argData);\n                    }\n                    else {\n                        this.isCellTapHold = false;\n                    }\n                }\n            }\n            else if (e.type === 'mouseleave' && (this.element.id + '_selectedCells')) {\n                removeElement(this.element.id + '_selectedCells');\n            }\n        }\n        if (this.tooltipModule && this.showTooltip && e.type === 'mouseleave') {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.tempTooltipRectId = '';\n        if (this.legendModule && this.legendSettings.visible && this.legendModule.tooltipObject &&\n            this.legendModule.tooltipObject.element) {\n            var tooltipElement_1 = this.legendModule.tooltipObject.element.firstChild;\n            if (e.type === 'mouseleave') {\n                tooltipElement_1.setAttribute('opacity', '0');\n            }\n            else {\n                if (this.legendTooltipTimer) {\n                    window.clearTimeout(this.legendTooltipTimer);\n                }\n                this.legendTooltipTimer = setTimeout(function () {\n                    tooltipElement_1.setAttribute('opacity', '0');\n                }, 1500);\n            }\n        }\n        if (this.paletteSettings.type === 'Gradient' && this.legendModule && this.legendSettings.showGradientPointer &&\n            this.legendSettings.visible && this.legendVisibilityByCellType) {\n            if (e.type === 'mouseleave') {\n                this.legendModule.removeGradientPointer();\n            }\n            else {\n                if (this.gradientTimer) {\n                    window.clearTimeout(this.gradientTimer);\n                }\n                this.gradientTimer = setTimeout(function () { _this.legendModule.removeGradientPointer(); }, 1500);\n            }\n        }\n        if (this.enableCanvasRendering) {\n            var main = document.getElementById(this.element.id + '_hoverRect_canvas');\n            if (main) {\n                main.style.visibility = 'hidden';\n                this.tempRectHoverClass = '';\n            }\n        }\n        if (this.titleSettings.text && this.titleCollection[0].indexOf('...') !== -1) {\n            if (!this.enableCanvasRendering) {\n                removeElement(this.element.id + '_Title_Tooltip');\n            }\n            else {\n                removeElement(this.element.id + '_canvas_Tooltip');\n            }\n        }\n        return true;\n    };\n    /**\n     * Method to Check for deselection of cell.\n     */\n    HeatMap.prototype.checkSelectedCells = function () {\n        if (!this.enableCanvasRendering) {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].cellElement.getAttribute('id')\n                        === this.multiCellCollection[i].cellElement.getAttribute('id')) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n        else {\n            this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n            this.canvasSelectedCells.x = this.selectedCellsRect.x;\n            this.canvasSelectedCells.y = this.selectedCellsRect.y;\n            this.canvasSelectedCells.width = this.selectedCellsRect.width;\n            this.canvasSelectedCells.height = this.selectedCellsRect.height;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].xPosition === this.multiCellCollection[i].xPosition &&\n                        this.selectedMultiCellCollection[j].yPosition === this.multiCellCollection[i].yPosition) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n            if (this.rectSelected && this.paletteSettings.type === 'Gradient') {\n                this.legendModule.removeGradientPointer();\n            }\n        }\n    };\n    /**\n     * Method to remove opacity for text of selected cell for HeatMap\n     */\n    HeatMap.prototype.removeOpacity = function (containersRect, containerText) {\n        for (var i = 0; i < containersRect.childNodes.length; i++) {\n            containersRect.childNodes[i].setAttribute('opacity', '0.3');\n            if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                containerText.childNodes[i].setAttribute('opacity', '0.3');\n            }\n        }\n    };\n    /**\n     * Method to set opacity for selected cell for HeatMap\n     */\n    HeatMap.prototype.setCellOpacity = function () {\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                this.tempMultiCellCollection.push(this.multiCellCollection);\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                this.removeOpacity(containersRect, containerText);\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClasss = this.multiCellCollection[i].cellElement;\n                    var index = parseInt(collectionClasss.id.replace(this.element.id + '_HeatMapRect_', ''), 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.previousSelectedCellsRect.push(this.selectedCellsRect);\n            this.highlightSelectedAreaInCanvas(this.selectedCellsRect);\n        }\n        removeElement(this.element.id + '_selectedCells');\n    };\n    /**\n     * To create div container for rendering two layers of canvas.\n     * @return {void}\n     * @private\n     */\n    HeatMap.prototype.createMultiCellDiv = function (onLoad) {\n        if (onLoad) {\n            var divElement = this.createElement('div', {\n                id: this.element.id + '_Multi_CellSelection_Canvas',\n                styles: 'position:relative'\n            });\n            this.element.appendChild(divElement);\n            divElement.appendChild(this.svgObject);\n            this.svgObject.style.position = 'absolute';\n            this.svgObject.style.left = '0px';\n            this.svgObject.style.top = '0px';\n            this.svgObject.style.zIndex = '0';\n        }\n        else {\n            var element = document.getElementById(this.element.id + '_Multi_CellSelection_Canvas');\n            var secondaryCanvas = this.secondaryCanvasRenderer.createCanvas({\n                width: this.availableSize.width,\n                height: this.availableSize.height, x: 0, y: 0,\n                style: 'position: absolute; z-index: 1'\n            });\n            element.appendChild(secondaryCanvas);\n        }\n    };\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], HeatMap.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Property('SVG')\n    ], HeatMap.prototype, \"renderingMode\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Complex({}, Data)\n    ], HeatMap.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Material')\n    ], HeatMap.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], HeatMap.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], HeatMap.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.heatMapTitleFont }, Title)\n    ], HeatMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"xAxis\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], HeatMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, PaletteSettings)\n    ], HeatMap.prototype, \"paletteSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], HeatMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"yAxis\", void 0);\n    __decorate([\n        Complex({}, CellSettings)\n    ], HeatMap.prototype, \"cellSettings\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"legendRender\", void 0);\n    HeatMap = __decorate([\n        NotifyPropertyChanges\n    ], HeatMap);\n    return HeatMap;\n}(Component));\nexport { HeatMap };\n","import * as index from './index';\nindex.HeatMap.Inject(index.Legend, index.Tooltip, index.Adaptor);\nexport * from './index';\n"],"names":["getThemeColor","theme","style","toLowerCase","heatMapTitle","axisTitle","axisLabel","cellBorder","background","cellTextColor","toggledColor","emptyCellColor","legendLabel","palette","color","stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","innerText","position","visibility","fontSize","size","fontWeight","fontStyle","fontFamily","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","titlePositionX","width","leftPadding","rightPadding","titleStyle","textAlignment","sum","values","_i","values_1","length","titlePositionY","heatmapSize","topPadding","bottomPadding","height","rotateTextSize","angle","box","options","renderer","SvgRenderer","svgObject","createSvg","font-size","font-style","font-family","font-weight","transform","text-anchor","createText","getBoundingClientRect","remove","right","bottom","getTitle","title","titleCollection","textOverflow","textWrap","push","textTrim","textNone","currentLabel","maximumWidth","textCollection","split","label","labelCollection","i","len","concat","maxWidth","index","substring","showTooltip","x","y","areaWidth","element","isTouch","heatmap","tooltip","initialClipRect","toString","styles","titleSettings","availableSize","setTimeout","removeElement","getElement","increaseDateTimeInterval","interval","intervalType","increment","result","Date","Math","ceil","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","getTooltipText","tooltipCollection","xPosition","yPosition","region","colorNameToHex","window","getComputedStyle","isRGBValue","exec","convertToHexCode","RgbColor","componentToHex","R","G","B","hex","convertHexToColor","formatValue","isCustom","format","tempInterval","formatFun","replace","Theme","heatMapTitleFont","titleFont","axisTitleFont","axisLabelFont","legendLabelFont","rectLabelFont","tooltipFont","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Font","_super","apply","Property","ChildProperty","Margin","Border","TooltipBorder","BubbleData","Title","Complex","FillColor","PaletteCollection","AxisLabelBorder","BubbleSize","MultiLevelCategories","MultiLevelLabels","type","Collection","ColorCollection","startValue","endValue","minColor","maxColor","BubbleTooltipData","mappingName","bubbleData","valueType","LegendColorCollection","isHidden","PaletteSettings","g","CellColor","heatMap","convertToRGB","colorMapping","previousColor","nextColor","previousOffset","isColorRange","nextOffset","paletteSettings","offset","Number","colorCollection","dataSourceMinValue","fillColor","dataSourceMaxValue","getEqualColor","percent","isNaN","getPercentageColor","rgbToHex","list","convertToHex","itemColor","substr","colorSplit","previous","next","prevColor","getPercentage","full","round","getColorCollection","legendColorCollection","range","j","minValue","bubbleSizeWithColor","minColorValue","maxValue","maxColorValue","emptyPointColor","themeStyle","tempcolorMapping","orderbyOffset","isCompact","offsets","extend","updateLegendColorCollection","isLabel","unshift","returnCollection","PaletterColor","sort","a","isNullOrUndefined","getColorByValue","rbg","compareValue","cellSettings","tileType","bubbleType","singleValue","legendRange","legendVisibilityByCellType","legendModule","visible","colorGradientMode","TextElement","fontModel","fontColor","fill","CustomizeOption","PathOption","opacity","dashArray","_this","call","stroke","parseFloat","CurrentRect","xIndex","yIndex","xValue","yValue","displayText","textId","allowCollection","SelectedCellDetails","xLabel","yLabel","cellElement","RectOption","border","rect","borderColor","rx","ry","CircleOption","cx","cy","Rect","TextOption","basic","labelRotation","baseline","dy","TextBasic","anchor","baseLine","Line","x1","y1","x2","y2","LineOption","line","strokewidth","dasharray","PathAttributes","path","borderWidth","Path","innerR","start","end","radius","counterClockWise","DrawSvgCanvas","drawRectangle","properties","parentElement","isFromSeries","enableCanvasRendering","drawCanvasRectangle","canvasRenderer","drawCircle","drawCanvasCircle","drawPath","drawCanvasPath","canvasDrawText","createWrapText","tspanElement","renderOptions","dominant-baseline","createTSpan","drawLine","translateX","translateY","ctx","getOptionValue","save","fillStyle","textAlign","textBaseline","translate","rotate","PI","fillText","restore","setAttributes","canvas","lineWidth","dashArrayString","setLineDash","strokeStyle","canvasCtx","beginPath","globalAlpha","drawCornerRadius","cornerRadius","moveTo","arcTo","closePath","arc","dataSplit","lineTo","Gradient","GradientColor","colorStop","CanvasTooltip","GradientPointer","pathX1","pathY1","pathX2","pathY2","pathX3","pathY3","CurrentLegendRect","LegendRange","currentPage","ToggleVisibility","MultiLevelPosition","Axis","nearSizes","farSizes","maxLabelSize","titleSize","axisLabels","tooltipLabels","labelValue","axisLabelSize","axisLabelInterval","dateTimeAxisLabelInterval","maxLength","min","max","isIntersect","jsonCellLabel","multiLevelSize","xAxisMultiLabelHeight","yAxisMultiLabelHeight","multiLevelPosition","computeSize","axis","getTitleSize","getMaxLabelSize","getMultilevelLabelsHeight","multiLevelLabels","multiLevelLabelSize","multiPosition","innerPadding","orientation","level0","level1","isInversed","opposedPosition","labelSize","multiLevel","categoryLabel","categories","size_1","textStyle","gap","startPosition","endPosition","multiLevelLabelsHeight","isVertical","padding","map","heatMapAxis","calculateLeftPosition","calculateWidth","maximumTextWidth","abs","overflow","labels","labelIntersectAction","showLabelOn","startX","previousEnd","previousStart","elementSize","axisInterval","startPoint","endPoint","calculateNumericAxisLabels","adaptorMin","adaptorMax","adaptorModule","isCellData","adaptiveXMinMax","adaptiveYMinMax","minimum","maximum","temp","labelFormat","match","intl","getNumberFormat","floor","reverse","calculateCategoryAxisLabels","calculateDateTimeAxisLabel","option","skeleton","dateParser","getDateParser","dateFormatter","getDateFormat","parse","DataUtil","parseJson","val","getTime","getSkeleton","calculateLabelInterval","getTotalLabelLength","numberOfDays","year","month","day","minutes","difference","days","years","months","hours","clearAxisLabel","AxisHelper","drawSvgCanvas","renderAxes","axisElement","createGroup","axes","axisCollections","drawXAxisLine","drawXAxisTitle","drawXAxisLabels","drawYAxisLine","drawYAxisTitle","drawYAxisLabels","drawMultiLevels","parent","titlepadding","calculateVisibleLabels","axisCollection","data","dataSourceSettings","processLabels","isJsonData","adaptorType","measureAxis","calculateAxisSize","axis_1","i_1","compactInterval","tempintervel","labelPadding","lableStrtX","labelElement","borderElement","lableRect","drawXAxisBorder","rotateSize","diffHeight","labelInterval","lableStartY","labelRect","Browser","isIE","drawYAxisBorder","lableX","endX","endY","startY","createAxisBorderElement","lableY","labelBorder","pathOptions","canvasTranslate","renderXAxisMultiLevelLabels","renderYAxisMultiLevelLabels","textLength","pathRect","level","alignment","textBasic","i_2","renderXAxisLabelBorder","createBorderElement","labelIndex","startY2","renderYAxisLabelBorder","borderIndex","calculateNumberOfDays","date","firstDate","secondDate","givenDate","CellSettings","Series","cellColor","renderRectSeries","createSeriesGroup","isValueInRange","xLength","yLength","tempBorder","circleRadius","tempX","tempY","dataXIndex","dataYIndex","cellSetting","tempWidth","tempHeight","tempVal","tempRectPosition","rectPositionCollection","bubbleColorValue","yAxis","getBubbleRadius","dataMin","dataMax","setTextAndColor","rectPosition","updateRectDetails","showLabel","getFormatedText","cellRender","cellRendering","renderingMode","renderTileCell","updateLabelVisibleStatus","renderBubbleCell","renderSectorCell","checkLabelXDisplay","checkLabelYDisplay","tempCircleRadius","getRadiusBypercentage","rangeSelection","isCellValueInRange","themeCellTextStyle","getSaturatedColor","containerTextObject","containerRectObject","toggleValue","clonedDataSource","bubbleText","xAxis","xLabels","yLabels","slice","yLabelValue","argData","isBlazor","cancel","name","trigger","adaptData","isColorValueExist","tempBubbleCollection","bubbleDataMapping","bubblePosition","curve","startAngle","endAngle","cX","cY","X1","Y1","tempcX","tempcY","pathBorderWidth","centerX","centerY","tempColor","sectorContibution","cos","sin","sector","calculateShapes","pathString","merge","circle","bubbleSize","valueInPrecentage","isInversedBubbleSize","saturatedColor","rgbValue","backgroundColor","highlightSvgRect","tempID","tempIndex","tempRectHoverClass","enableCellHighlighting","oldElement","rectSelected","setAttribute","getFormat","getCurrentRect","currentRect","firstRectDetails","heatMapSeries","rectX","rectY","hoverXAxisLabel","hoverXAxisValue","hoverYAxisLabel","hoverYAxisValue","TooltipSettings","Tooltip","isFirst","isFadeout","getModuleName","showHideTooltip","isShow","ele","tooltipObject","fadeOut","firstChild","destroy","createTooltip","tempTooltipText","tool","enableAnimation","location","content","tooltipSettings","template","areaBounds","createTooltipDiv","allowSelection","element2","getTooltipContent","hetmapSeries","value1","value2","renderTooltip","tooltipRender","tooltipCallback","observedArgs","TwoDimensional","processDataSource","dataSource","tempCloneData","completeDataSource","minVal","maxVal","tempVariable","dataLength","labelLength","cloneDataIndex","minMaxDatasource","tempSizeArray","tempColorArray","z","processDataArray","minMaxVal","getMinMaxValue","internalArray","tempx","minMaxValue","getMinValue","getMaxValue","performSort","filter","checkmin","LegendSettings","Legend","maxLegendLabelSize","gradientScaleSize","segmentCollections","segmentCollectionsLabels","textWrapCollections","labelCollections","legendSize","previousOptions","listPerPage","numberOfPages","listWidth","fillRect","legendRect","lastList","navigationCollections","pagingRect","listInterval","legendLabelTooltip","legendTitleTooltip","labelXCollections","labelYCollections","legendXCollections","legendYCollections","legendRectPositionCollection","legendTextRange","visibilityCollections","renderLegendItems","legend","rectItems","legendGroup","legendBound","legendRectScale","rectItemsSvg","legendSettings","enableSmartLegend","resizing","legendOnLoad","rendering","clip","grd","ctx_1","horizontalGradient","createLinearGradient","legendMinValue","legendMaxValue","calculateCanvasColorRange","addColorStop","gradientOptions","gradientColor","cgradientColors","calculateColorRange","gradientPercentage","linearGradient","drawGradient","rectItem","renderElements","renderSmartLegend","renderTitle","renderLegendLabel","legendScale","listRect","translategroup","calculateListPerPage","paginggroup","renderListLegendMode","renderColorAxisGrid","gradientColor1","gradientColor2","gradientColor3","smartLegendRect","legendX","legendY","legendWidth","legendHeight","labelDisplayType","colorRangeLegendPosition","labelX","k","labelPosition","dominantBaseline","textWrapWidth","labelY","legendRectPadding","textPosition","lastChild","clippath","createClipPath","clipRect","renderGradientPointer","e","pageX","pageY","direction","legendPath","cellValue","removeGradientPointer","gradientPointer","keys","calculateLegendBounds","legendEventArg","legendRender","calculateTitleBounds","calculateListLegendBounds","listHeight","perListWidth","numberOfRows","calculateLegendSize","legendTop","axisTitlePadding","axisHeight","margin","axisWidth","calculateGradientScale","measureListLegendBound","maxHeight","renderPagingElements","rightArrowX","rightArrowY","textSize","textX","pagingTextRect","rightArrowRect","iconSize","rightArrow","leftX","leftArrow","leftArrowRect","leftOption","rightOption","arrow","rightarrow","scale","titleHeight","calculateColorAxisGrid","legendPart","maxTextWrapLength","previousSegmentWidth","nextSegmentWidth","legendElement","renderLegendTitleTooltip","textContent","offsetWidth","renderLegendLabelTooltip","targetId","division","legendEventArgs","rectPosition_1","listColor","translatePage","page","isNext","removeChild","childNodes","secondaryCanvasRenderer","initialRect","rectWidth","rectHeight","clearRect","oldCanvas","newCanvas","rectImage","getContext","getImageData","putImageData","currentLegendRect","inverted","legendRangeSelection","legendPadding","ctx_2","clearSelection","updateLegendRangeCollections","Data","AdaptiveMinMax","Adaptor","reconstructedXAxis","reconstructedYAxis","constructDatasource","completeAdaptDataSource","processJsonTableData","processJsonCellData","constructAdaptiveAxis","processCellData","getNumericAxisCollection","getDateAxisCollection","loopIndex","tempAxisColl","adapData","dataIndex","xDataIndex","yDataIndex","tempDataCollection","currentDataXIndex","currentDataYIndex","reconstructData","xindex","adaptordata","xAxisLabels","yAxisLabels","generateAxisLabels","getSplitDataValue","xDataMapping","yDataMapping","valueMapping","hasXLabels","hasYLabels","hasLabels","dataMapping","tempSplitDataCollection","tempSplitData","splitIndex","HeatMap","isCellTapHold","selectedCellCount","multiSelection","previousSelectedCellsRect","multiCellCollection","selectedMultiCellCollection","tempMultiCellCollection","preRender","initPrivateVariable","unWireEvents","wireEvents","CanvasRenderer","twoDimensional","tempTooltipRectId","setCulture","Internationalization","render","updateBubbleHelperProperty","initAxis","processInitData","setTheme","calculateMaxLength","calculateBounds","appendSvgObject","tooltipModule","renderComplete","reRenderDatasource","setRenderMode","renderSecondaryElement","renderBorder","getPersistData","onPropertyChanged","newProp","oldProp","refreshBounds","isUpdateSelection","_a","paletteCellSelectionUpdation","refresh","refreshBound","updateCellSelection","removeSvg","calculateSize","createCanvas","createMultiCellDiv","tooltipDiv","divElement","requiredModules","modules","member","args","innerHTML","classList","add","offsetHeight","titleTooltip","event","axisTooltip","tooltipText","isHeatmapRect","lastRectDetails","titleRect","isIE11Pointer","isPointer","touchStartEvent","stop","touchEndEvent","move","touchMoveEvent","EventHandler","isDevice","heatMapMouseClick","heatMapMouseMove","heatMapMouseLeave","addEventListener","heatMapResize","bind","Touch","tapHold","getDataCollection","setCellOpacity","tap","isCellTap","tooltipOnMouseMove","setStyle","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","display","removeEventListener","currentSize","previousSize","resizeTimer","clearTimeout","isDestroyed","wSize","hSize","topPositions","bottomPositions","rightPosition","leftPosition","containersRect","containerText","cellIndex","getText","addSvgClass","clearSVGSelection","elementClassName","getAttribute","removeSvgClass","xAxisMax","yAxisMax","length_1","setMouseXY","svgCanvasRect","mouseX","mouseY","touchArg","elementRect","changedTouches","clientY","clientX","notify","loop","toggleVisibility","isheatmapRect","showGradientPointer","renderMousePointer","isshowTooltip","which","cellSelectionOnMouseMove","tooltipRect","previousRect","initialCellX","initialCellY","preventDefault","highlightSelectedCells","tooltipTimer","pXIndex","pYIndex","cXIndex","cYIndex","selectedCellsRect","ctrlKey","removeSelectedCellsBorder","parentDiv","minX","maxX","minY","maxY","cellX","cellY","getCellCollection","checkSelectedCells","canvasSelectedCells","singleCellData","getSelectedCellData","rects","containerRect","highlightSelectedAreaInCanvas","topPosition","bottomPosition","cellCollection","cellDetails","rectElement","splice","className","cursor","tooltipElement_1","legendTooltipTimer","gradientTimer","main","removeOpacity","collectionClasss","onLoad","zIndex","secondaryCanvas","Event","NotifyPropertyChanges","Component","index.HeatMap","Inject","index.Legend","index.Tooltip","index.Adaptor"],"mappings":"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"}