{"version":3,"file":"ej2-angular-inplace-editor.umd.min.js","sources":["~/@syncfusion/ej2-angular-inplace-editor/src/inplace-editor/inplaceeditor.component.ts","~/@syncfusion/ej2-angular-inplace-editor/src/inplace-editor/inplaceeditor.module.ts","~/@syncfusion/ej2-angular-inplace-editor/src/inplace-editor/inplaceeditor-all.module.ts"],"sourcesContent":["import { Component, ElementRef, ViewContainerRef, ValueProvider, Renderer2, Injector, ChangeDetectionStrategy, forwardRef, ContentChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, FormBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { InPlaceEditor } from '@syncfusion/ej2-inplace-editor';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nexport const /** @type {?} */ inputs: string[] = ['actionOnBlur','adaptor','cancelButton','cssClass','disabled','editableOn','emptyText','enableEditMode','enableHtmlSanitizer','enablePersistence','enableRtl','locale','mode','model','name','popupSettings','primaryKey','saveButton','showButtons','submitOnEnter','template','textOption','type','url','validationRules','value'];\nexport const /** @type {?} */ outputs: string[] = ['focus', 'blur', 'actionBegin','actionFailure','actionSuccess','beforeSanitizeHtml','beginEdit','created','destroyed','validating'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * `ejs-inplaceeditor` represents the Angular InPlaceEditor Component.\n * ```html\n * <ejs-inplaceeditor></ejs-inplaceeditor>\n * ```\n */\n@ComponentMixins([ComponentBase, FormBase])\nexport class InPlaceEditorComponent extends InPlaceEditor implements IComponentBase {\npublic formCompContext : any;\npublic formContext : any;\npublic tagObjects: any;\n/**\n * Specifies the HTML element ID as a string that can be added as a editable field.\n * \\@default ''\n * \\@blazortype string\n */\n@Template()\n    public template: any;\npublic focus: any;\npublic blur: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('InPlace-EditorAutoComplete');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('InPlace-EditorColorPicker');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('InPlace-EditorComboBox');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('InPlace-EditorDateRangePicker');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('InPlace-EditorMultiSelect');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('InPlace-EditorRte');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('InPlace-EditorSlider');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('InPlace-EditorTimePicker');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.formContext  = new FormBase();\n        this.formCompContext  = new ComponentBase();\n    }\n/**\n * @param {?} registerFunction\n * @return {?}\n */\npublic registerOnChange(registerFunction: (_: any) => void): void {\n    }\n/**\n * @param {?} registerFunction\n * @return {?}\n */\npublic registerOnTouched(registerFunction: () => void): void {\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic writeValue(value: any): void {\n    }\n/**\n * @param {?} disabled\n * @return {?}\n */\npublic setDisabledState(disabled: boolean): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.formCompContext.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.formContext.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.formCompContext.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        \n        this.formCompContext.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-inplaceeditor',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InPlaceEditorComponent),\n            multi: true\n        }\n    ],\n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: ['template', ] },],\n};\n}\n\nfunction InPlaceEditorComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInPlaceEditorComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInPlaceEditorComponent.ctorParameters;\n/** @type {?} */\nInPlaceEditorComponent.propDecorators;\n/** @type {?} */\nInPlaceEditorComponent.prototype.formCompContext;\n/** @type {?} */\nInPlaceEditorComponent.prototype.formContext;\n/** @type {?} */\nInPlaceEditorComponent.prototype.tagObjects;\n/**\n * Specifies the HTML element ID as a string that can be added as a editable field.\n * \\@default ''\n * \\@blazortype string\n * @type {?}\n */\nInPlaceEditorComponent.prototype.template;\n/** @type {?} */\nInPlaceEditorComponent.prototype.focus;\n/** @type {?} */\nInPlaceEditorComponent.prototype.blur;\n/** @type {?} */\nInPlaceEditorComponent.prototype.registerEvents;\n/** @type {?} */\nInPlaceEditorComponent.prototype.addTwoWay;\n/** @type {?} */\nInPlaceEditorComponent.prototype.ngEle;\n/** @type {?} */\nInPlaceEditorComponent.prototype.srenderer;\n/** @type {?} */\nInPlaceEditorComponent.prototype.viewContainerRef;\n/** @type {?} */\nInPlaceEditorComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InPlaceEditorComponent } from './inplaceeditor.component';\n/**\n * NgModule definition for the InPlaceEditor component.\n */\nexport class InPlaceEditorModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        InPlaceEditorComponent\n    ],\n    exports: [\n        InPlaceEditorComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InPlaceEditorModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInPlaceEditorModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInPlaceEditorModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InPlaceEditorComponent } from './inplaceeditor.component';\nimport { InPlaceEditorModule } from './inplaceeditor.module';\nimport {AutoComplete, ColorPicker, ComboBox, DateRangePicker, MultiSelect, Rte, Slider, TimePicker} from '@syncfusion/ej2-inplace-editor';\n\n\nexport const /** @type {?} */ AutoCompleteService: ValueProvider = { provide: 'InPlace-EditorAutoComplete', useValue: AutoComplete};\nexport const /** @type {?} */ ColorPickerService: ValueProvider = { provide: 'InPlace-EditorColorPicker', useValue: ColorPicker};\nexport const /** @type {?} */ ComboBoxService: ValueProvider = { provide: 'InPlace-EditorComboBox', useValue: ComboBox};\nexport const /** @type {?} */ DateRangePickerService: ValueProvider = { provide: 'InPlace-EditorDateRangePicker', useValue: DateRangePicker};\nexport const /** @type {?} */ MultiSelectService: ValueProvider = { provide: 'InPlace-EditorMultiSelect', useValue: MultiSelect};\nexport const /** @type {?} */ RteService: ValueProvider = { provide: 'InPlace-EditorRte', useValue: Rte};\nexport const /** @type {?} */ SliderService: ValueProvider = { provide: 'InPlace-EditorSlider', useValue: Slider};\nexport const /** @type {?} */ TimePickerService: ValueProvider = { provide: 'InPlace-EditorTimePicker', useValue: TimePicker};\n/**\n * NgModule definition for the InPlaceEditor component with providers.\n */\nexport class InPlaceEditorAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, InPlaceEditorModule],\n    exports: [\n        InPlaceEditorModule\n    ],\n    providers:[\n        AutoCompleteService,\n        ColorPickerService,\n        ComboBoxService,\n        DateRangePickerService,\n        MultiSelectService,\n        RteService,\n        SliderService,\n        TimePickerService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InPlaceEditorAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInPlaceEditorAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInPlaceEditorAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["inputs","outputs","twoWays","exports","InPlaceEditorComponent","InPlaceEditorComponent_1","_super","ngEle","srenderer","viewContainerRef","injector","_this","call","this","element","nativeElement","injectedModules","mod","get","indexOf","push","_a","_b","_c","_d","_e","_f","_g","_h","registerEvents","addTwoWay","setValue","formContext","FormBase","formCompContext","ComponentBase","__extends","prototype","registerOnChange","registerFunction","registerOnTouched","writeValue","value","setDisabledState","disabled","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","InPlaceEditor","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","queries","ctorParameters","ElementRef","Renderer2","ViewContainerRef","Injector","propDecorators","ContentChild","__decorate","Template","ComponentMixins","__metadata","InPlaceEditorModule","NgModule","imports","CommonModule","declarations","AutoCompleteService","useValue","AutoComplete","ColorPickerService","ColorPicker","ComboBoxService","ComboBox","DateRangePickerService","DateRangePicker","MultiSelectService","MultiSelect","RteService","Rte","SliderService","Slider","TimePickerService","TimePicker","InPlaceEditorAllModule"],"mappings":"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"}
