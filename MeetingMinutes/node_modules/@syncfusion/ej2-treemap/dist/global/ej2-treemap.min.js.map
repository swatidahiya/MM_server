{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        _this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], null, null, this.treemap.element.id + baseTemplateId, false);\n        labelEle = convertElement(templateElement, templateId, item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.isBlazor = isBlazor();\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this.isBlazor ? null : this });\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = LevelsData.levelsData[start][currentPath];\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function () {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            if (this.isBlazor) {\n                var data = {\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    options: eventArgs.item['options'],\n                    rect: eventArgs.item['rect']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            if (this.isBlazor) {\n                var data = {\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    rect: eventArgs.item['rect'],\n                    options: eventArgs.item['options']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                case 'dataSource':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","remove","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","templateId","baseTemplateId","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","renderComplete","firstChild","hasChildNodes","resetBlazorTemplate","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","isDrilled","itemArea","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","targetEle","layoutID","templateID","drillMouseMove","drillLength","rightClick","which","layerElementId","textContent","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","textOptions","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","eventBlazorArgs","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo","tooltipElementId","index.TreeMap","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection"],"mappings":"oEAYA,SACgBA,GAAeC,EAAOC,GAClC,MAAc,QAAVD,OAA4BE,KAAVF,GACa,IAAxBA,EAAMG,QAAQ,KAAeF,EAAgB,IAAOG,SAASJ,EAAO,IAAMI,SAASJ,EAAO,IAE9F,KAyDX,QAAgBK,GAAYC,EAAMC,GAC9B,GAAIC,GAAgBC,SAASC,eAAe,qBAiB5C,OAhBsB,QAAlBF,IACAA,EAAgBG,gBAAc,QAAUC,GAAI,uBAC5CH,SAASI,KAAKC,YAAYN,IAE9BA,EAAcO,UAAYT,EAC1BE,EAAcQ,MAAMC,SAAW,WAC/BT,EAAcQ,MAAME,SAAWX,EAAKY,KACpCX,EAAcQ,MAAMI,WAAab,EAAKa,WACtCZ,EAAcQ,MAAMK,UAAYd,EAAKc,UACrCb,EAAcQ,MAAMM,WAAaf,EAAKe,WACtCd,EAAcQ,MAAMO,WAAa,SACjCf,EAAcQ,MAAMQ,IAAM,OAC1BhB,EAAcQ,MAAMS,KAAO,IAC3BjB,EAAcQ,MAAMU,WAAa,SAEjClB,EAAcQ,MAAMW,WAAa,SAC1B,GAAIC,IAAKpB,EAAcqB,YAAarB,EAAcsB,cA2B7D,QAAgBC,GAASC,EAAU1B,EAAMC,GACrC,GAAI0B,GAAQ3B,EACRa,EAAOd,EAAYC,EAAMC,GAAM2B,KACnC,IAAIf,EAAOa,EAEP,IAAK,GAAIG,GADQ7B,EAAK8B,OACI,EAAGD,GAAK,IAAKA,EAGnC,GAFAF,EAAQ3B,EAAK+B,UAAU,EAAGF,GAAK,OAC/BhB,EAAOd,EAAY4B,EAAO1B,GAAM2B,QACpBF,GAAYC,EAAMG,OAAS,EAInC,MAHIH,GAAMG,OAAS,IACfH,EAAQ,KAELA,CAInB,OAAOA,GAgBX,QAAgBK,GAAaC,EAAUC,EAAWC,EAAUC,GACxD,GAAIC,GACAC,CACJ,QAAQJ,GACJ,IAAK,OACDG,EAAIJ,EAASI,CACb,MACJ,KAAK,SACDA,EAAc,UAATD,EAAqBH,EAASL,MAAQ,EAAIO,EAASP,MAAQ,EAC1DK,EAASI,EAAKJ,EAASL,MAAQ,EAAMO,EAASP,MAAQ,CAC5D,MACJ,KAAK,MACDS,EAAc,UAATD,EAAqBH,EAASL,MAAQK,EAASK,EAAIH,EAASP,MAC3DK,EAASI,EAAIJ,EAASL,MAASO,EAASP,MAItD,MADAU,GAAc,UAATF,EAAoBH,EAASK,EAAKH,EAASI,OAAS,EAAON,EAASK,EAAIL,EAASM,OAAS,EAAKJ,EAASI,OAAS,EAC/G,GAAIC,IAASH,EAAGC,GAE3B,QAAgBG,GAAgBC,EAAUC,EAAe3C,GACrD,GAAI4C,EAUJ,QATAA,EAAaF,EAASG,WAAWF,EAAe3C,IACrC8C,eAAe,uCAAwC,YAAa,YAC/EF,EAAWlC,MAAM,eAAiB,OAClCkC,EAAWlC,MAAM,oBAAsB,OACvCkC,EAAWlC,MAAM,yBAA2B,OAC5CkC,EAAWlC,MAAM,uBAAyB,OAC1CkC,EAAWlC,MAAM,sBAAwB,OACzCkC,EAAWlC,MAAM,mBAAqB,OACtCkC,EAAWlC,MAAM,kBAAoB,OAC9BkC,EAOX,QAAgBG,GAAkBC,EAAS/C,EAAMgD,EAAOC,EAAQC,OAC5C,KAAZA,IAAsBA,GAAU,EACpC,IAeIC,GAEAb,EACAK,EAlBAD,GACAU,YAAapD,EAAKY,KAClByC,aAAcrD,EAAKc,UACnBwC,cAAetD,EAAKe,WACpBwC,cAAevD,EAAKa,WACpB2C,cAAeT,EAAQU,OACvBC,UAAaX,EAAQW,UACrBC,QAAW3D,EAAK2D,QAChBC,oBAAqBb,EAAQc,SAC7BxD,GAAM0C,EAAQ1C,GACd+B,EAAKW,EAAQX,EACbC,EAAKU,EAAQV,EACbyB,KAAQd,GAERjD,EAA+B,gBAAjBgD,GAAQhD,KAAoBgD,EAAQhD,KAAOmD,EAAUH,EAAQhD,KAAKgD,EAAQhD,KAAK8B,OAAS,GAAKkB,EAAQhD,KAAK,GAExH0C,EAAW,GAAIsB,eAAY,GAK/B,KAFsBC,oBAAkBjE,KAAUiE,oBAAkBjB,EAAQkB,gBACvElE,EAAKmE,OAAOnB,EAAQkB,cAAc,KAAO,EAC1B,CAChB,GACIE,OAAiB,EAErBA,GAHmBpE,EAGWqE,MAAM,IACpC,KAAK,GAAIC,GAAI,EAAGA,EAAIF,EAAetC,OAAQwC,IAAK,CAC5C,GAAIC,IAAkE,IAArDH,EAAeE,GAAGH,OAAOnB,EAAQkB,gBAA0BD,oBAAkBjB,EAAQkB,eAC1EE,EAAeE,GAAvCtB,EAAQkB,aAGZ,IAFAvB,EAAkB,GAAIK,EAAQ1C,GAAK,IAAMgE,EACzC1B,EAAaH,EAAgBC,EAAUC,EAAe4B,GAClDD,EAAI,GAAM,GAAW,IAANA,EAAS,CAExBC,EAAYA,EAAUC,QADb,OACyB,SAEtC,GAAI3D,GAAOd,EAAYwE,EAAWtE,EAClC0C,GAAiB,EAAU,IAAN2B,EAAU3B,EAAiB,EAAI9B,EAAKe,MAAQe,EAAiB,EAAI9B,EAAKe,MAZjF,EAaVsB,EAAO1C,YAAYoC,QAIvBA,GAAaH,EAAgBC,EAAUC,EAAe3C,GACtDkD,EAAO1C,YAAYoC,EAEvB,IAA4B,gBAAjBI,GAAQhD,MAAqBgD,EAAQhD,KAAK8B,OAAS,EAAG,CAC7D,IAAK,GAAID,GAAI,EAAG4C,EAAMzB,EAAQhD,KAAK8B,OAAQD,EAAI4C,EAAK5C,IAChDU,EAAUxC,EAAYiD,EAAQhD,KAAK6B,GAAI5B,GAAa,OACpDmD,EAAeV,EAASgC,aACpBrC,EAAKW,EAAQX,EAAG/B,GAAM0C,EAAQ1C,GAC9BgC,EAAMU,IAAcnB,EAAIU,GACzBS,EAAQhD,KAAK6B,IAChBe,EAAWpC,YAAY4C,EAE3BF,GAAO1C,YAAYoC,GAEvB,MAAOA,GAEX,QAAgB+B,GAAWrE,GACvB,MAAOH,UAASC,eAAeE,GAGnC,QAAgBsE,GAAaC,EAAGC,GAC5B,MAAOD,GAAU,SAAMC,EAAU,OAAI,EAAID,EAAU,OAAIC,EAAU,OAAI,GAAK,EAE9E,QAAgBC,GAAeC,EAAQC,EAAUC,EAAaC,GAK1D,IAAK,GAFDC,GAFAC,GAAU,EACVC,EAAO,GAEPC,EAAOJ,EAAQK,iBACV3D,EAAI,EAAGA,EAAImD,EAAOlD,OAAQD,IAE/B,GADAuD,EAAOD,EAAQM,OAAO5D,GAAKsD,EAAQM,OAAO5D,GAAG6D,UAAYH,EAAKI,UAAYJ,EAAKI,UAAYR,EAAQS,gBAC/FZ,EAAOnD,KAAOqD,EAAYE,KAC1BE,GAASJ,EAAYE,IAAUvD,IAAMmD,EAAOlD,OAAS,EAAI,GAAK,QACjDmD,EAAU,CACnBI,GAAU,CACV,OAIZ,MAAOA,GAEX,QAAgBQ,GAAaC,GACzB,GAAIC,EACJ,IAAID,EAAM,CACN,GAAIE,GAAOC,OAAOD,KAAKF,EACvBC,GAAW,GAAIE,OACf,KAAK,GAAIpE,GAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7B,GAAIiE,EAAKE,EAAKnE,aAAeqE,OAAO,CAChCH,EAAiB,OAAID,EAAKE,EAAKnE,IAC/BkE,EAAc,IAAIC,EAAKnE,EACvB,QAIZ,MAAOkE,GAEX,QAAgBI,GAAoBL,EAAMM,EAAOC,EAAMC,GACnD,GAAa,UAATD,EAAkB,CAClBD,EAAMG,KAAKT,EAAqB,eAChC,IAAIC,GAAWF,EAAaC,GAAc,MAC1C,IAAIC,GAAYA,EAASjE,OAAS,EAAG,CACjC,IAASD,EAAI,EAAGA,EAAIkE,EAASjE,OAAQD,KACqB,IAAlDuE,EAAMvG,QAAQkG,EAASlE,GAAmB,iBAC1CuE,EAAMG,KAAKR,EAASlE,GAAmB,eAG/C,KAAK,GAAI2E,GAAI,EAAGA,EAAIT,EAASjE,OAAQ0E,IACjCL,EAAoBJ,EAASS,GAAIJ,EAAOC,EAAMC,QAIrD,IAAa,WAATD,EACiC,gBAA3BP,GAAqB,iBAA6D,IAA3CM,EAAMvG,QAAQiG,EAAqB,kBACjFM,EAAMG,KAAKT,EAAqB,gBAChCK,EAAoBL,EAAa,OAAGM,EAAOC,EAAMC,QAGpD,IAAa,QAATD,EAGL,IAAK,GAFDI,GAAaX,EAAqB,eAAEzB,MAAM,KAAK,GAC/CqC,MAAc,GACT7E,EAAI,EAAGA,EAAIyE,EAAQK,OAAOC,YAAY9E,OAAQD,KACnD6E,EAAcJ,EAAQK,OAAOC,YAAY/E,mBACLhC,QAAQ4G,IAAe,IAAuD,IAAlDL,EAAMvG,QAAQ6G,EAA4B,iBACtGN,EAAMG,KAAKG,EAA4B,oBAK/CN,GAAMG,KAAKT,EAAqB,eAEpC,OAAOM,GAOX,QAAgBS,GAAoBC,GAChC,GAAIC,GAAa,IACjB,KAEQ5G,SAAS6G,iBAAiBF,GAAUhF,SACpCiF,EAAaE,UAAQ9G,SAAS+G,cAAcJ,GAAUrG,UAAU0G,SAGxE,MAAOC,GACHL,EAAaE,UAAQH,GAEzB,MAAOC,GAKX,QAAgBM,GAAeC,EAASC,EAASzB,GAM7C,IALA,GAAI0B,GAAenH,gBAAc,OAC7BC,GAAIiH,EACJE,OAAQ,6CAERC,EAAgBJ,EAAQxF,OACrB4F,EAAgB,GACnBF,EAAahH,YAAY8G,EAAQ,IACjCI,GAIJ,KAAK,GAFDC,GAAeH,EAAa/G,UAC5BuF,EAAOC,OAAOD,KAAKF,GACdjE,EAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7B8F,EAAeA,EAAanD,QAAQ,GAAIoD,QAAO,MAAQ5B,EAAKnE,GAAK,KAAM,KAAMiE,EAAKE,EAAKnE,GAAGgG,YAG9F,OADAL,GAAa/G,UAAYkH,EAClBH,EAEX,QAAgBM,GAAkBC,EAAMpH,EAAUqH,EAAW5F,EAAM+C,GAC/D,GAAIlD,GAAW,GAAIO,IAAS,EAAG,GAI3BH,GADc8C,EAAQmC,QAAQW,wBAChB,aAAT7F,EAAuB+C,EAAQ+C,SAAS7F,EAAI,GACjDC,EAAc,aAATF,EAAuB+C,EAAQ+C,SAAS5F,EAAI,CAYrD,OAXAL,GAASI,EAAK8F,KAAKC,IAAI/F,GAAM1B,EAASd,QAAQ,SAAW,EAAKkI,EAAK1F,EALrD,EAKqE1B,EAASd,QAAQ,UAAY,EACrDkI,EAAK1F,EAAI0F,EAAKnG,MAASoG,EAAUpG,MAAxFmG,EAAK1F,GAAM0F,EAAKnG,MAAQ,EAAMoG,EAAUpG,MAAQ,KALrC,GAMXuD,EAAQkD,iBAAgD,uBAA5BlD,EAAQmD,iBACL,uBAA5BnD,EAAQmD,gBAIXrG,EAASK,EAAI6F,KAAKC,IAAI9F,GAAM3B,EAASd,QAAQ,QAAU,EAAe,aAATuC,EAAsB2F,EAAKzF,EAAIyF,EAAKzF,EAAI0F,EAAUzF,OACzG5B,EAASd,QAAQ,WAAa,EAC2BkI,EAAKzF,EAAIyF,EAAKxF,OAAUyF,EAAUzF,OAD/C,aAATH,EAAuB2F,EAAKzF,GAAMyF,EAAKxF,OAAS,EAAMyF,EAAUzF,OAAS,GACzGwF,EAAKzF,EAAKyF,EAAKxF,OAAS,EAAKyF,EAAUzF,OAAS,IALzDN,EAASK,EAAI6F,KAAKC,IAAKL,EAAKzF,EAAIyF,EAAKxF,OAAUyF,EAAUzF,OAT/C,GAgBPN,EAEX,QAAgBsG,GAAejB,EAASkB,GACpC,GAAI3H,GAAO,GAAIS,IAAK,EAAG,EACvBkH,GAAchI,YAAY8G,GAC1BzG,EAAK0B,OAAS+E,EAAQmB,aACtB5H,EAAKe,MAAQ0F,EAAQoB,WACrB,IAAIC,GAAmBxI,SAASC,eAAekH,EAAQhH,GAEvD,OADAqI,GAAiBC,WAAWC,YAAYF,GACjC9H,EAEX,QAAgBiI,GAAQf,GACpB,OAAQA,EAAKnG,MAAQmG,EAAK1F,IAAM0F,EAAKxF,OAASwF,EAAKzF,GAEvD,QAAgByG,GAAgBC,GAC5B,GAAIC,GAAYC,EAAmBF,GAC/BpH,EAAQqH,EAAUrH,MAClBW,EAAS0G,EAAU1G,MAEvB,OADa4F,MAAKgB,IAAIvH,EAAOW,GAGjC,QAAgB2G,GAAmBnB,GAC/B,GAAI1F,GAAI0F,EAAK1F,EACTC,EAAIyF,EAAKzF,CAGb,QACID,EAAGA,EACHC,EAAGA,EACHV,MALQmG,EAAKnG,MAKES,EACfE,OALSwF,EAAKxF,OAKGD,GAGzB,QAAgB8G,GAAcH,GAC1B,GAAII,GAAUJ,EAAU5G,EACpBiH,EAAUL,EAAU3G,CAGxB,QACID,EAAGgH,EACH/G,EAAGgH,EACH1H,MAAOyH,EALCJ,EAAUrH,MAMlBW,OAAQ+G,EALCL,EAAU1G,QAQ3B,QAAgBgH,GAAiBC,EAAOC,EAAOnC,GAC3C,GAAIoC,GAAcpC,EAAQW,wBACtB0B,EAAcrC,EAAQsC,cAAcC,YAAYF,YAChDG,EAAcxC,EAAQsC,cAAcC,YAAYC,YAChDC,EAAYzC,EAAQsC,cAAcI,gBAAgBD,UAClDE,EAAa3C,EAAQsC,cAAcI,gBAAgBC,WACnDC,EAAYR,EAAYvI,KAAOwI,EAAcM,EAC7CE,EAAYT,EAAYxI,IAAM4I,EAAcC,CAChD,OAAO,IAAIvH,IAAUgH,EAAQU,EAAaT,EAAQU,GAEtD,QAAgBC,GAASC,EAAcC,EAAY5K,EAAOkG,GACtD,GAAI7B,GAEAH,EADA2G,IAEJ,IAAItG,oBAAkBqG,IAAgBrG,oBAAkBvE,IAAU8K,MAAM9K,GACpE,MAAO,KAEX,KAAK,GAAImC,GAAI,EAAGA,EAAIwI,EAAavI,OAAQD,IAAK,CAC1C,GAAI4I,IAAe,EACfC,EAAYhL,CACXuE,qBAAkBoG,EAAaxI,GAAG8I,OAAU1G,oBAAkBoG,EAAaxI,GAAG+I,KAC3E3G,oBAAkBoG,EAAaxI,GAAGnC,QAW/BuE,oBAAkBoG,EAAaxI,GAAG8I,OAAU1G,oBAAkBoG,EAAaxI,GAAG+I,MACjF3G,oBAAmBoG,EAAaxI,YAC/BnC,GAAS2K,EAAaxI,GAAG8I,MAAQN,EAAaxI,GAAG+I,IAAMlL,GAAW2K,EAAaxI,GAAGnC,QAAU4K,KACzFD,EAAaxI,GAAGnC,QAAU4K,IAC1BG,GAAe,GAGf1G,EAD0D,mBAA1DkC,OAAO4E,UAAUhD,SAASiD,KAAKT,EAAaxI,GAAGoB,OACvCwH,EAA8DJ,EAAaxI,GAAGoB,MAAM,GAArE8H,EAAiBV,EAAaxI,GAAI6I,GAGlDL,EAAaxI,GAAGoB,OApB1BvD,GAAS2K,EAAaxI,GAAG8I,MAAQN,EAAaxI,GAAG+I,IAAMlL,GAAW2K,EAAaxI,GAAGnC,QAAU4K,IAC7FG,GAAe,EAEX1G,EAD0D,mBAA1DkC,OAAO4E,UAAUhD,SAASiD,KAAKT,EAAaxI,GAAGoB,OACvCwH,EAA8DJ,EAAaxI,GAAGoB,MAAM,GAArE8H,EAAiBV,EAAaxI,GAAI6I,GAGlDL,EAAaxI,GAAGoB,QAkB7BvD,GAAS2K,EAAaxI,GAAG8I,MAAQjL,GAAS2K,EAAaxI,GAAG+I,IAAQP,EAAaxI,GAAGnC,QAAU4K,KAC1FrG,oBAAkBoG,EAAaxI,GAAGmJ,cAAgB/G,oBAAkBoG,EAAaxI,GAAGoJ,aAAelH,IACvGH,EAAUsH,EAAkBtF,EAAiByE,EAAaxI,GAAIkC,EAAMrE,KAE1D,KAATqE,GAAeE,oBAAkBF,KAC/BE,oBAAkBoG,EAAaxI,GAAG8I,OAAS1G,oBAAkBoG,EAAaxI,GAAG+I,KAC7E3G,oBAAkBoG,EAAaxI,GAAGmJ,aAAe/G,oBAAkBoG,EAAaxI,GAAGoJ,aACnFhH,oBAAkBoG,EAAaxI,GAAGnC,SACrCqE,EAAkE,mBAA1DkC,OAAO4E,UAAUhD,SAASiD,KAAKT,EAAaxI,GAAGoB,OACnDoH,EAAaxI,GAAGoB,MAAM,GAAKoH,EAAaxI,GAAGoB,OAEnDW,EAAWK,oBAAkBL,GAAqB,IAAVA,EACxC2G,EAAMhE,KAAKxC,GAEf,IAAK,GAAIyC,GAAI+D,EAAMzI,OAAS,EAAG0E,GAAK,EAAGA,IAEnCA,GADAzC,EAAOwG,EAAM/D,KACC,EAAIA,CAEtB,QAASzC,KAAMA,EAAMH,QAASA,GAElC,QAAgBsH,GAAkBtF,EAAiByE,EAAcpH,EAAOkI,GACpE,GAAIvH,GAAU,CAKd,OAJKuH,IAAcd,EAAaM,MAAQQ,GAAcd,EAAaO,KAE/DhH,GADauH,EAAad,EAAaM,OAASN,EAAaO,GAAKP,EAAaM,OAC3DN,EAAaY,WAAaZ,EAAaW,YAAeX,EAAaW,YAEpFpH,EAAQiE,WAEnB,QAAgBkD,GAAiBX,EAAU1K,GAEvC,MADmB0L,GAAgBhB,EAAU1K,GAGjD,QAAgB2L,GAASC,EAAGC,EAAGzG,GAC3B,MAAO,IAAM0G,EAAeF,GAAKE,EAAeD,GAAKC,EAAe1G,GAExE,QAAgBsG,GAAgBhB,EAAU1K,GACtC,GACI+L,EAWJ,OAVIC,QAAOhM,KAAW0K,EAASO,KACnBP,EAASnH,MAAM,GAElByI,OAAOhM,KAAW0K,EAASQ,GACxBR,EAASnH,MAAMmH,EAASnH,MAAMnB,OAAS,GAIvCuJ,GADRI,EAAME,EAAiBD,OAAOhM,GAAQ0K,IACjBkB,EAAGG,EAAIF,EAAGE,EAAI3G,GAK3C,QAAgB6G,GAAiBjM,EAAO0K,GACpC,GAAIwB,GAAiBxB,EAASO,KAC1BkB,EAAazB,EAASQ,GACtBkB,EAAU,EAEVC,EAAOF,EAAaD,CAExBE,IACWpM,EAAQkM,GAAkBG,CACrC,IAAIC,GACAC,CACJ,IAAI7B,EAASnH,MAAMnB,QAAU,EACzBkK,EAAgD,MAAhC5B,EAASnH,MAAM,GAAGiJ,OAAO,GAAa9B,EAASnH,MAAM,GAAKkJ,EAAe/B,EAASnH,MAAM,IACxGgJ,EAAoE,MAAxD7B,EAASnH,MAAMmH,EAASnH,MAAMnB,OAAS,GAAGoK,OAAO,GACzD9B,EAASnH,MAAMmH,EAASnH,MAAMnB,OAAS,GAAKqK,EAAe/B,EAASnH,MAAMmH,EAASnH,MAAMnB,OAAS,QAErG,CACDkK,EAAgD,MAAhC5B,EAASnH,MAAM,GAAGiJ,OAAO,GAAa9B,EAASnH,MAAM,GAAKkJ,EAAe/B,EAASnH,MAAM,IACxGgJ,EAAoE,MAAxD7B,EAASnH,MAAMmH,EAASnH,MAAMnB,OAAS,GAAGoK,OAAO,GACzD9B,EAASnH,MAAMmH,EAASnH,MAAMnB,OAAS,GAAKqK,EAAe/B,EAASnH,MAAMmH,EAASnH,MAAMnB,OAAS,GAOtG,KAAK,GAND+C,GAAIkH,GAAQ3B,EAASnH,MAAMnB,OAAS,GAGpCsK,EAAWhC,EAASnH,MAAMnB,OAAS,EACnCuK,KACAC,KACK9F,EAAI,EAAGA,EAAI4F,EAAU5F,IAG1B8F,GAAexH,EADX8G,EADApF,EAAI3B,EAEa5B,MAAOmH,EAASnH,MAAMuD,IAC3C6F,EAAsB9F,KAAK+F,EAE/B,KAAK,GAAIzK,GAAI,EAAGA,EAAIwK,EAAsBvK,OAAQD,IAC1C+J,GAAkBlM,GAASA,GAAS2M,EAAsBxK,GAAM,GAAW,IAANA,GAGrEoK,EAF2D,MAAhDI,EAAsBxK,GAAU,MAAEqK,OAAO,GAChDG,EAAsBxK,GAAU,MAAIsK,EAAeE,EAAsBxK,GAAU,OAEvFiK,EAAUpM,EAAQ2M,EAAsBxK,GAAM,EAAI,EAAIsG,KAAKC,KAAK1I,EAAQ2M,EAAsBxK,GAAM,GAAKgD,IAClGnF,EAAQ2M,EAAsBxK,GAAM,GAAKgD,GAE3CwH,EAAsBxK,GAAM,GAAKnC,GAASA,GAASmM,GAAchK,IAAOwK,EAAsBvK,OAAS,IAG5GkK,EAF2D,MAAhDK,EAAsBxK,GAAU,MAAEqK,OAAO,GAChDG,EAAsBxK,GAAU,MAAIsK,EAAeE,EAAsBxK,GAAU,OAEvFiK,EAAUpM,EAAQ2M,EAAsBxK,GAAM,EAC1C,EAAIsG,KAAKC,KAAK1I,EAAQ2M,EAAsBxK,GAAM,GAAKgD,IAAMnF,EAAQ2M,EAAsBxK,GAAM,GAAKgD,GAE1GhD,IAAMwK,EAAsBvK,OAAS,GAAKD,EAAIwK,EAAsBvK,QAChEuK,EAAsBxK,GAAM,GAAKnC,GAASA,GAAS2M,EAAsBxK,EAAI,GAAM,IAGnFmK,EAF2D,MAAhDK,EAAsBxK,GAAU,MAAEqK,OAAO,GAChDG,EAAsBxK,GAAU,MAAIsK,EAAeE,EAAsBxK,GAAU,OAEvFoK,EAAgE,MAApDI,EAAsBxK,EAAI,GAAU,MAAEqK,OAAO,GACrDG,EAAsBxK,EAAI,GAAU,MAAIsK,EAAeE,EAAsBxK,EAAI,GAAU,OAC/FiK,EAAU3D,KAAKC,IAAK1I,EAAQ2M,EAAsBxK,EAAI,GAAM,GAAMgD,GAKlF,MAAO0H,GAAmBT,EAASE,EAAeC,GAEtD,QAAgBM,GAAmBT,EAASU,EAAUC,GAClD,GAAIR,GAAYQ,EAAKpI,MAAM,KAAK,GAC5BqI,EAAYF,EAASnI,MAAM,KAAK,GAChCiH,EAAIqB,EAAcb,EAAShM,SAAS4M,EAAUE,OAAO,EAAG,GAAI,IAAK9M,SAASmM,EAAUW,OAAO,EAAG,GAAI,KAClGrB,EAAIoB,EAAcb,EAAShM,SAAS4M,EAAUE,OAAO,EAAG,GAAI,IAAK9M,SAASmM,EAAUW,OAAO,EAAG,GAAI,KAClG9H,EAAI6H,EAAcb,EAAShM,SAAS4M,EAAUE,OAAO,EAAG,GAAI,IAAK9M,SAASmM,EAAUW,OAAO,EAAG,GAAI,IACtG,OAAO,IAAIC,IAAWvB,EAAGC,EAAGzG,GAEhC,QAAgB6H,GAAcb,EAASU,EAAUC,GAC7C,GAAIV,GAAOU,EAAOD,CAClB,OAAOrE,MAAK2E,MAAON,EAAYT,EAAOD,GAE1C,QAAgBiB,GAASC,EAAcC,EAAWhN,GAK9C,IAAK,GADDD,GAHAkN,EAAiBD,EAAU5I,MAAM,KACjC1C,EAAQ,GACRwL,KAEKtL,EAAI,EAAG4C,EAAMyI,EAAepL,OAAQD,EAAI4C,EAAK5C,IAClD7B,EAAOkN,EAAerL,GAClB9B,EAAY4B,EAAMyL,OAAOpN,GAAOC,GAAM2B,MAAQoL,EAC9CrL,EAAQA,EAAMyL,QAAkB,KAAVzL,EAAe,GAAK,KAAO3B,GAGnC,KAAV2B,GACAwL,EAAgB5G,KAAK9E,EAASuL,EAAcrL,EAAO1B,IACnD0B,EAAQ3B,IAGRmN,EAAgB5G,KAAK9E,EAASuL,EAAchN,EAAMC,IAClDD,EAAO,IAGX2B,GAASE,IAAM4C,EAAM,GACrB0I,EAAgB5G,KAAK9E,EAASuL,EAAcrL,EAAO1B,GAG3D,OAAOkN,GAEX,QAAgBE,GAAS3L,EAAUC,EAAO1B,GACtC,GACIqN,MACAC,EAAgB,EAChBC,EAAazN,EAAY4B,EAAO1B,GAAM2B,MACtC6L,EAAc9L,EAAMG,MACxB,IAAIJ,GAAY8L,EAEZ,MADAF,GAAW/G,KAAK5E,GACT2L,CAGP,KAAK,GAAIzL,GAAIF,EAAMG,OAAQD,EAAI0L,EAAe1L,IAAK,CAC/C,GAAI6L,GAAc/L,EAAMgM,MAAMJ,EAAe1L,EAE7C,KADA2L,EAAazN,EAAY2N,EAAazN,GAAM2B,QAC1BF,EAAU,CAGxB,GAFA4L,EAAW/G,KAAKmH,GAChBH,GAAiBG,EAAY5L,OACzB2L,IAAgBF,EAChB,MAAOD,EAEXzL,GAAI4L,EAAc,GAI9B,MAAOH,GAKX,QAAgBM,GAAKlM,EAAUmM,EAAW7N,EAAMC,GAC5C,GACIkC,GAAWpC,EAAYC,EAAMC,EAEjC,OADYkC,GAASP,MAAQF,GAAYS,EAASI,OAASsL,EAAa,IAAM7N,EAGlF,QAAgB8N,GAAYjJ,EAAGC,GAC3B,MAAID,GAAY,WAAMC,EAAY,SACvB,EAEFD,EAAY,SAAIC,EAAY,SAC1B,GAEH,EAEZ,QAAgBiJ,GAAiBC,EAAU5L,EAAM+C,GAQ7C,IAAK,GALDmC,GAKKd,EAAI,EAAGA,EAAIwH,EAASlM,OAAQ0E,IAGjCyH,EAFA3G,EAAU0G,EAASxH,GAAG0H,WAAW,GACvB/I,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,IAAa,SAExE2J,EAASxH,GAAG2H,UAAUC,OAAOhM,GAC7BoE,GAAK,EAGb,QAAgByH,GAAa3G,EAAStE,GAClCsE,EAAQ+G,aAAa,UAAWrL,EAAiB,SACjDsE,EAAQ+G,aAAa,OAAQrL,EAAc,MAC3CsE,EAAQ+G,aAAa,SAAUrL,EAAgB,OAAS,OACxDsE,EAAQ+G,aAAa,eAAgBrL,EAAgB,OAAS,OAElE,QAAgBsL,GAAcC,EAAQzI,EAAMX,GACxC,GAAIlB,oBAAkBsK,GAClB,MAAO,KAGX,KAAK,GAAIC,GAAK,EAAGC,EADNxI,OAAOD,KAAKF,GACS0I,EAAKC,EAAO3M,OAAQ0M,IAAM,CACtD,GAAIE,GAAMD,EAAOD,EACjBD,GAASA,EAAOlK,MAAM,KAAOqK,EAAM,KAAKC,KAAKC,EAAY9I,EAAK4I,GAAMvJ,GAAS0C,YAEjF,MAAO0G,GAEX,QAAgBK,GAAYlP,EAAOyF,GAU/B,OAPIA,EAAQoJ,SAAW/D,MAAMkB,OAAOhM,IACfyF,EAAQ0J,KAAKC,iBAAkBP,OAAQpJ,EAAQoJ,OAAQQ,YAAa5J,EAAQ6J,uBAChEtD,OAAOhM,IAGtBA,IAEiB,GAavC,QAAgBuP,GAAiBvP,GAC7B,MAAO,IAAM8L,EAAe9L,EAAM4L,GAAKE,EAAe9L,EAAM6L,GAAKC,EAAe9L,EAAMoF,GAG1F,QAAgB0G,GAAe9L,GAC3B,GAAIwP,GAAMxP,EAAMmI,SAAS,GACzB,OAAsB,KAAfqH,EAAIpN,OAAe,IAAMoN,EAAMA,EAG1C,QAAgBC,GAAkBD,GAC9B,GAAIE,GAAS,4CAA4CC,KAAKH,EAC9D,OAAOE,GAAS,GAAIvC,IAAW/M,SAASsP,EAAO,GAAI,IAAKtP,SAASsP,EAAO,GAAI,IAAKtP,SAASsP,EAAO,GAAI,KACjG,GAAIvC,IAAW,IAAK,IAAK,KAGjC,QAAgBV,GAAelJ,GAC3B,GAAIqE,EACJrE,GAAkB,gBAAVA,EAA0B,QAAUA,GAC5CqE,EAAUnH,SAASC,eAAe,uBAC1BM,MAAMuC,MAAQA,EACtBA,EAAQqM,OAAOC,iBAAiBjI,GAASrE,KACzC,IACIuM,GADM,uGACWH,KAAKpM,EAC1B,OAAOgM,GAAiB,GAAIpC,IAAW/M,SAAS0P,EAAW,GAAI,IAAK1P,SAAS0P,EAAW,GAAI,IAAK1P,SAAS0P,EAAW,GAAI,MAG7H,QAAgBC,GAAWxN,EAAUyN,EAAO7O,EAAM8O,EAAK3M,EAASrB,GAC5D,GACIiO,GAAc,GAAI5L,eAAY,IAC9B6L,EAAOC,EAAkB7N,EAAUpB,EAAM6O,EAAO1M,EAAS2M,GACzDI,EAAcH,EAAY,OAASC,EAAKG,cAAcH,EAAKI,aAE/D,OADAF,GAAY1B,aAAa,aAAc1M,GAChCoO,EAGX,QAAgBD,GAAkB7N,EAAUpB,EAAM6O,EAAO1M,EAAS2M,GAC9D,GAAIO,GACAF,EAAe,OACfG,EAAatP,EAAKe,MAClBwO,EAAcvP,EAAK0B,OACnB8N,EAASpO,EAASI,EAClBiO,EAASrO,EAASK,EAClBD,EAAIJ,EAASI,GAAM8N,EAAa,EAChC7N,EAAIL,EAASK,GAAM8N,EAAc,CACrC,QAAQV,GACJ,IAAK,SACL,IAAK,SACDM,EAAe,UACfO,QAAMvN,GAAWwN,GAAML,EAAa,EAAGM,GAAML,EAAc,EAAGM,GAAML,EAAQM,GAAML,GAClF,MACJ,KAAK,eACDJ,EAAa,KAAYG,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAAkBC,EAAS,KAC3FC,GAAWF,EAAc,GAChCG,QAAMvN,GAAW4N,EAAKV,GACtB,MACJ,KAAK,UACDA,EAAa,KAAY7N,EAAI,IAAMiO,EAAS,MAC5BD,EAAS,KAAOC,GAAWF,EAAc,GAAM,OAC9CC,EAAUF,EAAa,GAAM,IAAMG,EAAS,MAC7CD,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAC9C/N,EAAI,IAAMiO,EAAS,KACnCC,QAAMvN,GAAW4N,EAAKV,GACtB,MACJ,KAAK,YACDA,EAAa,KAAY7N,EAAI,KAAOiO,GAAWF,EAAc,GAAM,OAClDC,EAAUF,EAAa,GAAM,KAAOG,GAAWF,EAAc,GAAM,OACnEC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MACnE/N,EAAI,KAAOiO,EAAUF,EAAc,GAAM,MACzC/N,EAAI,KAAOiO,GAAWF,EAAc,GAAM,KAC1DG,QAAMvN,GAAW4N,EAAKV,GACtB,MACJ,KAAK,WACDA,EAAa,KAAY7N,EAAI,KAAOiO,EAAUF,EAAc,GAAM,MAClDC,EAAS,KAAOC,GAAWF,EAAc,GAAM,OAC9CC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MACnE/N,EAAI,KAAOiO,EAAUF,EAAc,GAAM,KACzDG,QAAMvN,GAAW4N,EAAKV,GACtB,MACJ,KAAK,mBACDA,EAAa,MAAaG,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,MAC5EC,EAAS,KAAOC,EAAUF,EAAc,GAAM,OAC7CC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,OAClEC,EAAUF,EAAa,GAAM,KAAOG,EAAUF,EAAc,GAAM,KACnFG,QAAMvN,GAAW4N,EAAKV,GACtB,MACJ,KAAK,WAID,IAAK,GAFDW,OAAS,GACTC,MAAS,GACJjP,EAAI,EAAGA,GAAK,EAAGA,IACpBgP,EAAUV,EAAa,EAAKhI,KAAK4I,IAAK5I,KAAK6I,GAAK,KAJ3C,GAImDnP,IACxDiP,EAAUX,EAAa,EAAKhI,KAAK8I,IAAK9I,KAAK6I,GAAK,KAL3C,GAKmDnP,IAEpDqO,EADM,IAANrO,EACa,MAAawO,EAASQ,GAAU,KAAOP,EAASQ,GAAU,IAG1DZ,EAAW9C,OAAO,MAAaiD,EAASQ,GAAU,KAAOP,EAASQ,GAAU,IAGjGZ,GAAaA,EAAW9C,OAAO,KAC/BmD,QAAMvN,GAAW4N,EAAKV,GACtB,MACJ,KAAK,OACDA,EAAa,MAAQjO,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GACxH,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GACjH,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,MAAQN,EAASI,EAAI,KACrGJ,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,OAASN,EAASI,EAAIxB,EAAKe,MAAQ,GAAK,KAAOK,EAASK,EAAIzB,EAAK0B,OAAS,GAAK,KACpHgO,QAAMvN,GAAW4N,EAAKV,GACtB,MACJ,KAAK,QACDA,EAAa,KAAY7N,EAAI,IAAMiO,EAAS,OAAmBD,EAAUF,EAAa,GAAM,IAAMG,EAAS,MAC3FD,EAAS,KAAOC,EAAUF,EAAc,GAAM,MAAkBC,EAAS,KACpFC,GAAWF,EAAc,GAC9BG,QAAMvN,GAAW4N,EAAKV,GACtB,MACJ,KAAK,QACDF,EAAe,QACfO,QAAMvN,GAAWkO,KAAQvB,EAAKpN,OAAU6N,EAAaxO,MAASuO,EAAY9N,EAAGA,EAAGC,EAAGA,IAG3F,OAAS2N,aAAcjN,EAASgN,aAAcA,GAElD,QAAgBmB,GAAarL,EAAMsL,GAE/B,IAAK,GADDD,IAAe,EACV3K,EAAI,EAAGA,EAAIV,EAAKhE,OAAQ0E,IAC7B,GAAI4K,EAAqB,iBAAMtL,EAAKU,GAAmB,eAAG,CACtD2K,GAAe,CACf,OAGR,MAAOA,GAeX,QACgBE,GAAYC,EAAY5R,GACpC,GAAI4R,EAAWxP,OAAS,EACpB,IAAK,GAAID,GAAI,EAAGA,EAAIyP,EAAWxP,OAAQD,IAAK,CACxC,GAAIuP,GAAOE,EAAWzP,EACtB0P,GAASH,EAAgB,UAAGA,EAAc,QAAGA,EAAiB,WAAGA,EAAqB,eAAGA,EAAqB,iBAI1H,QAAgBI,GAAaF,EAAY5R,GACrC,GAAI4R,EAAWxP,OAAS,EACpB,IAAK,GAAI0E,GAAI,EAAGA,EAAI8K,EAAWxP,OAAQ0E,IAAK,CACxC,GAAI4K,GAAOE,EAAW9K,EACtB+K,GAASH,EAAgB,UAAGA,EAAc,QAAGA,EAAiB,WAAGA,EAAqB,eAAGA,EAAqB,eAE9G,KAAK,GADDK,GAAYL,EAAsB,gBAAY,SAAEtP,OAC3C4P,EAAI,EAAGA,EAAID,EAAWC,IAC3BH,EAASH,EAAsB,gBAAY,SAAEM,GAAIN,EAAmB,aAAGA,EAAsB,gBAAGA,EAA0B,oBAAGA,EAA0B,sBAKvK,QAAgBG,GAASjK,EAASvD,EAAMH,EAAS+N,EAAaC,GAC1DtK,EAAQ+G,aAAa,OAAQtK,GAC7BuD,EAAQ+G,aAAa,UAAWzK,GAChC0D,EAAQ+G,aAAa,SAAUsD,GAC/BrK,EAAQ+G,aAAa,eAAgBuD,GAEzC,QAAgBC,GAA6BP,EAAYhK,EAASnC,GAC9DkM,EAAYC,EAAY,aAExBvD,EAAiB5N,SAAS2R,uBAAuB,oBAAqB,mBAAoB3M,GAE9F,QAAgB4M,GAAejQ,EAAQsP,EAAMjM,GAEzC,IAAK,GADD6M,GACKnQ,EAAI,EAAGA,EAAIC,EAAQD,IAExB,IAAK,GADDoQ,GAAa9M,EAAQ+M,oBAAoBC,kBAAkBtQ,GAAe,WAAEC,OACvE0E,EAAI,EAAGA,EAAIyL,EAAYzL,IAC5B,GAAIrB,EAAQ+M,oBAAoBC,kBAAkBtQ,GAAe,WAAE2E,GAAmB,iBAAM4K,EAAqB,eAAG,CAChHY,EAAQnQ,CACR,OAIZ,MAAOmQ,GAEX,QAAgBI,GAAed,EAAYU,EAAOK,EAAQC,EAAeC,EAAc3L,EAAa4L,GAChGlB,EAAW/K,MACPkM,UAAWH,EAAeI,QAASF,EAAiBR,GAAmB,WACvEW,WAAYH,EAAiBR,GAAgB,QAAGY,eAAgBJ,EAAiBR,GAAoB,YACrGa,eAAgBL,EAAiBR,GAAoB,YACrDO,aAAcA,EAAcO,aAAclM,EAAYyL,GAAiB,QAAQ,KAC/EU,gBAAiBnM,EAAYyL,GAAiB,QAAW,QACzDW,oBAAqBpM,EAAYyL,GAAiB,QAAU,OAAS,MACrEY,oBAAqBrM,EAAYyL,GAAiB,QAAU,OAAS,QCp4B7E,QAAgBa,IAAcC,GAC1B,GAAIzS,GACAuC,CACJ,QAAQkQ,EAAMC,eACV,IAAK,eACDnQ,EAAQ,SACR,MACJ,KAAK,aACDA,EAAQ,SACR,MACJ,KAAK,gBACDA,EAAQ,UAGhB,OAAQkQ,EAAMC,eACV,IAAK,gBACL,IAAK,aACL,IAAK,eACD1S,GACI2S,gBAAiBpQ,EACjBqQ,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,gBAAiB,UACjB3S,WAAY,2BAEhB,MACJ,KAAK,eACDN,GACI2S,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,gBAAiB,UACjB3S,WAAY,2BAEhB,MACJ,KAAK,aACDN,GACI2S,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBG,mBAAoB,EACpBC,mBAAoB,GACpBH,iBAAkB,UAClBC,gBAAiB,UACjB3S,WAAY,uBACZJ,SAAU,OACVkT,eAAgB,OAChBC,gBAAiB,gBAErB,MACJ,SACIrT,GACI2S,gBAAiB,UACjBC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,gBAAiB,UACjB3S,WAAY,4BAIxB,MAAON,GClFX,GA0FWsT,IAAc,qCCjGrBC,GAAwC,WACxC,GAAIC,GAAgB,SAAUtD,EAAG9L,GAI7B,OAHAoP,EAAgBjO,OAAOkO,iBAChBC,uBAA2BlO,QAAS,SAAU0K,EAAG9L,GAAK8L,EAAEwD,UAAYtP,IACvE,SAAU8L,EAAG9L,GAAK,IAAK,GAAIuP,KAAKvP,GAAOA,EAAEwP,eAAeD,KAAIzD,EAAEyD,GAAKvP,EAAEuP,MACpDzD,EAAG9L,GAE5B,OAAO,UAAU8L,EAAG9L,GAEhB,QAASyP,KAAOC,KAAKC,YAAc7D,EADnCsD,EAActD,EAAG9L,GAEjB8L,EAAE/F,UAAkB,OAAN/F,EAAamB,OAAOyO,OAAO5P,IAAMyP,EAAG1J,UAAY/F,EAAE+F,UAAW,GAAI0J,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQnG,EAAKoG,GAC7E,GAA2HlE,GAAvHmE,EAAIC,UAAUlT,OAAQwJ,EAAIyJ,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7O,OAAOgP,yBAAyBJ,EAAQnG,GAAOoG,CACrH,IAAuB,gBAAZI,UAAoD,kBAArBA,SAAQC,SAAyB7J,EAAI4J,QAAQC,SAASP,EAAYC,EAAQnG,EAAKoG,OACpH,KAAK,GAAIjT,GAAI+S,EAAW9S,OAAS,EAAGD,GAAK,EAAGA,KAAS+O,EAAIgE,EAAW/S,MAAIyJ,GAAKyJ,EAAI,EAAInE,EAAEtF,GAAKyJ,EAAI,EAAInE,EAAEiE,EAAQnG,EAAKpD,GAAKsF,EAAEiE,EAAQnG,KAASpD,EAChJ,OAAOyJ,GAAI,GAAKzJ,GAAKrF,OAAOmP,eAAeP,EAAQnG,EAAKpD,GAAIA,GAO5D+J,GAAwB,SAAUC,GAElC,QAASD,KACL,MAAkB,QAAXC,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAUoB,EAAQC,GAIlBX,IACIa,WAAS,YACVH,EAAOxK,UAAW,YAAS,IAC9B8J,IACIa,WAAS,IACVH,EAAOxK,UAAW,YAAS,IACvBwK,GACTI,iBAKEC,GAAwB,SAAUJ,GAElC,QAASI,KACL,MAAkB,QAAXJ,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAc/D,MAhBAP,IAAUyB,EAAQJ,GAIlBX,IACIa,WAAS,KACVE,EAAO7K,UAAW,WAAQ,IAC7B8J,IACIa,WAAS,KACVE,EAAO7K,UAAW,YAAS,IAC9B8J,IACIa,WAAS,KACVE,EAAO7K,UAAW,UAAO,IAC5B8J,IACIa,WAAS,KACVE,EAAO7K,UAAW,aAAU,IACxB6K,GACTD,iBAKEE,GAAsB,SAAUL,GAEhC,QAASK,KACL,MAAkB,QAAXL,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAoB/D,MAtBAP,IAAU0B,EAAML,GAIhBX,IACIa,WAAS,OACVG,EAAK9K,UAAW,WAAQ,IAC3B8J,IACIa,WAAS,OACVG,EAAK9K,UAAW,YAAS,IAC5B8J,IACIa,WAASxB,KACV2B,EAAK9K,UAAW,iBAAc,IACjC8J,IACIa,WAAS,WACVG,EAAK9K,UAAW,iBAAc,IACjC8J,IACIa,WAAS,WACVG,EAAK9K,UAAW,gBAAa,IAChC8J,IACIa,WAAS,IACVG,EAAK9K,UAAW,cAAW,IACvB8K,GACTF,iBAKEG,GAAqC,SAAUN,GAE/C,QAASM,KACL,MAAkB,QAAXN,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAU2B,EAAqBN,GAI/BX,IACIa,WAAS,KACVI,EAAoB/K,UAAW,WAAQ,IAC1C8J,IACIa,WAAS,KACVI,EAAoB/K,UAAW,kBAAe,IAC1C+K,GACTH,iBAKEI,GAAkC,SAAUP,GAE5C,QAASO,KACL,MAAkB,QAAXP,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAU4B,EAAkBP,GAI5BX,IACImB,WAAUjV,KAAM,QAAU8U,KAC3BE,EAAiBhL,UAAW,gBAAa,IAC5C8J,IACIa,WAAS,WACVK,EAAiBhL,UAAW,gBAAa,IACrCgL,GACTD,IAKEG,GAA+B,SAAUT,GAEzC,QAASS,KACL,MAAkB,QAAXT,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAW/D,MAbAP,IAAU8B,EAAeT,GAIzBX,IACImB,WAAUjV,KAAM,QAAU8U,KAC3BI,EAAclL,UAAW,gBAAa,IACzC8J,IACIa,WAAS,WACVO,EAAclL,UAAW,gBAAa,IACzC8J,IACImB,aAAYD,KACbE,EAAclL,UAAW,uBAAoB,IACzCkL,GACTH,IAEEI,GAA8B,SAAUV,GAExC,QAASU,KACL,MAAkB,QAAXV,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA0B/D,MA5BAP,IAAU+B,EAAcV,GAIxBX,IACIa,WAAS,OACVQ,EAAanL,UAAW,WAAQ,IACnC8J,IACIa,WAAS,OACVQ,EAAanL,UAAW,SAAM,IACjC8J,IACIa,WAAS,OACVQ,EAAanL,UAAW,YAAS,IACpC8J,IACIa,WAAS,OACVQ,EAAanL,UAAW,YAAS,IACpC8J,IACIa,WAAS,OACVQ,EAAanL,UAAW,YAAS,IACpC8J,IACIa,WAAS,OACVQ,EAAanL,UAAW,iBAAc,IACzC8J,IACIa,WAAS,OACVQ,EAAanL,UAAW,iBAAc,IACzC8J,IACIa,YAAS,IACVQ,EAAanL,UAAW,iBAAc,IAClCmL,GACTP,iBAKEQ,GAAgC,SAAUX,GAE1C,QAASW,KACL,MAAkB,QAAXX,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAmF/D,MArFAP,IAAUgC,EAAgBX,GAI1BX,IACIa,YAAS,IACVS,EAAepL,UAAW,cAAW,IACxC8J,IACIa,WAAS,YACVS,EAAepL,UAAW,WAAQ,IACrC8J,IACIa,WAAS,gBACVS,EAAepL,UAAW,iBAAc,IAC3C8J,IACIa,WAAS,WACVS,EAAepL,UAAW,YAAS,IACtC8J,IACIa,WAAS,KACVS,EAAepL,UAAW,YAAS,IACtC8J,IACIa,WAAS,KACVS,EAAepL,UAAW,aAAU,IACvC8J,IACImB,WAAUjV,KAAM,QAAU8U,KAC3BM,EAAepL,UAAW,gBAAa,IAC1C8J,IACIa,WAAS,OACVS,EAAepL,UAAW,WAAQ,IACrC8J,IACIa,WAAS,IACVS,EAAepL,UAAW,cAAW,IACxC8J,IACIa,WAAS,KACVS,EAAepL,UAAW,iBAAc,IAC3C8J,IACIa,WAAS,KACVS,EAAepL,UAAW,kBAAe,IAC5C8J,IACIa,WAAS,KACVS,EAAepL,UAAW,mBAAgB,IAC7C8J,IACIa,WAAS,OACVS,EAAepL,UAAW,eAAY,IACzC8J,IACImB,WAAU7S,MAAO,UAAWrB,MAAO,GAAKyT,KACzCY,EAAepL,UAAW,aAAU,IACvC8J,IACImB,WAAU7S,MAAO,UAAWrB,MAAO,GAAKyT,KACzCY,EAAepL,UAAW,kBAAe,IAC5C8J,IACImB,aAAYF,KACbK,EAAepL,UAAW,YAAS,IACtC8J,IACImB,WAAUjV,KAAM,QAAU8U,KAC3BM,EAAepL,UAAW,iBAAc,IAC3C8J,IACIa,WAAS,WACVS,EAAepL,UAAW,eAAY,IACzC8J,IACIa,WAAS,SACVS,EAAepL,UAAW,kBAAe,IAC5C8J,IACIa,YAAS,IACVS,EAAepL,UAAW,sBAAmB,IAChD8J,IACIa,WAAS,UACVS,EAAepL,UAAW,oBAAiB,IAC9C8J,IACIa,WAAS,SACVS,EAAepL,UAAW,uBAAoB,IACjD8J,IACIa,WAAS,WACVS,EAAepL,UAAW,gBAAa,IAC1C8J,IACIa,YAAWnT,EAAG,EAAGC,EAAG,KACrB2T,EAAepL,UAAW,eAAY,IACzC8J,IACIa,WAAS,OACVS,EAAepL,UAAW,qBAAkB,IAC/C8J,IACIa,WAAS,OACVS,EAAepL,UAAW,gBAAa,IAC1C8J,IACIa,YAAS,IACVS,EAAepL,UAAW,4BAAyB,IAC/CoL,GACTR,iBAEES,GAAsC,SAAUZ,GAEhD,QAASY,KACL,MAAkB,QAAXZ,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAUiC,EAAsBZ,GAIhCX,IACIa,WAAS,OACVU,EAAqBrL,UAAW,iBAAc,IACjD8J,IACIa,WAAS,OACVU,EAAqBrL,UAAW,gBAAa,IACzCqL,GACTT,iBAEEU,GAAkC,SAAUb,GAE5C,QAASa,KACL,MAAkB,QAAXb,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA+C/D,MAjDAP,IAAUkC,EAAkBb,GAI5BX,IACIa,WAAS,OACVW,EAAiBtL,UAAW,WAAQ,IACvC8J,IACIa,YAAS,IACVW,EAAiBtL,UAAW,eAAY,IAC3C8J,IACImB,aAAYT,KACbc,EAAiBtL,UAAW,aAAU,IACzC8J,IACIa,WAAS,IACVW,EAAiBtL,UAAW,UAAO,IACtC8J,IACIa,WAAS,KACVW,EAAiBtL,UAAW,cAAW,IAC1C8J,IACIa,WAAS,IACVW,EAAiBtL,UAAW,cAAW,IAC1C8J,IACIa,YAAS,IACVW,EAAiBtL,UAAW,iBAAc,IAC7C8J,IACIa,WAAS,OACVW,EAAiBtL,UAAW,gBAAa,IAC5C8J,IACIa,WAAS,OACVW,EAAiBtL,UAAW,kBAAe,IAC9C8J,IACIa,WAAS,YACVW,EAAiBtL,UAAW,oBAAiB,IAChD8J,IACImB,WAAU7S,MAAO,KAAMpC,KAAM,QAAU8U,KACxCQ,EAAiBtL,UAAW,iBAAc,IAC7C8J,IACIa,WAAS,OACVW,EAAiBtL,UAAW,oBAAiB,IAChD8J,IACIa,WAAS,WACVW,EAAiBtL,UAAW,uBAAoB,IACnD8J,IACIa,WAAS,SACVW,EAAiBtL,UAAW,sBAAmB,IAClD8J,IACIyB,gBAAeJ,KAChBG,EAAiBtL,UAAW,mBAAgB,IACxCsL,GACTV,iBAEEY,GAAiC,SAAUf,GAE3C,QAASe,KACL,MAAkB,QAAXf,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA0B/D,MA5BAP,IAAUoC,EAAiBf,GAI3BX,IACIa,YAAS,IACVa,EAAgBxL,UAAW,cAAW,IACzC8J,IACIa,WAAS,KACVa,EAAgBxL,UAAW,eAAY,IAC1C8J,IACIa,WAAS,OACVa,EAAgBxL,UAAW,aAAU,IACxC8J,IACIa,WAAS,YACVa,EAAgBxL,UAAW,WAAQ,IACtC8J,IACIa,WAAS,MACVa,EAAgBxL,UAAW,cAAW,IACzC8J,IACIa,YAAU,YACXa,EAAgBxL,UAAW,mBAAgB,IAC9C8J,IACImB,aAAYT,KACbgB,EAAgBxL,UAAW,aAAU,IACxC8J,IACImB,WAAU9U,WAAYgT,GAAanT,KAAM,QAAU8U,KACpDU,EAAgBxL,UAAW,gBAAa,IACpCwL,GACTZ,iBAEEa,GAAmC,SAAUhB,GAE7C,QAASgB,KACL,MAAkB,QAAXhB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAiB/D,MAnBAP,IAAUqC,EAAmBhB,GAI7BX,IACIa,YAAS,IACVc,EAAkBzL,UAAW,aAAU,IAC1C8J,IACIa,WAAS,YACVc,EAAkBzL,UAAW,WAAQ,IACxC8J,IACIa,WAAS,QACVc,EAAkBzL,UAAW,cAAW,IAC3C8J,IACImB,aAAYT,KACbiB,EAAkBzL,UAAW,aAAU,IAC1C8J,IACIa,WAAS,SACVc,EAAkBzL,UAAW,WAAQ,IACjCyL,GACTb,iBAEEc,GAAmC,SAAUjB,GAE7C,QAASiB,KACL,MAAkB,QAAXjB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KAiB/D,MAnBAP,IAAUsC,EAAmBjB,GAI7BX,IACIa,YAAS,IACVe,EAAkB1L,UAAW,aAAU,IAC1C8J,IACIa,WAAS,YACVe,EAAkB1L,UAAW,WAAQ,IACxC8J,IACIa,WAAS,QACVe,EAAkB1L,UAAW,cAAW,IAC3C8J,IACImB,aAAYT,KACbkB,EAAkB1L,UAAW,aAAU,IAC1C8J,IACIa,WAAS,SACVe,EAAkB1L,UAAW,WAAQ,IACjC0L,GACTd,iBAKEe,GAA+B,SAAUlB,GAEzC,QAASkB,KACL,MAAkB,QAAXlB,GAAmBA,EAAOC,MAAMf,KAAMQ,YAAcR,KA+C/D,MAjDAP,IAAUuC,EAAelB,GAIzBX,IACIa,WAAS,OACVgB,EAAc3L,UAAW,gBAAa,IACzC8J,IACIa,WAAS,IACVgB,EAAc3L,UAAW,eAAY,IACxC8J,IACIa,WAAS,KACVgB,EAAc3L,UAAW,mBAAgB,IAC5C8J,IACImB,aAAYT,KACbmB,EAAc3L,UAAW,aAAU,IACtC8J,IACIa,WAAS,OACVgB,EAAc3L,UAAW,WAAQ,IACpC8J,IACIa,YAAS,IACVgB,EAAc3L,UAAW,eAAY,IACxC8J,IACIa,WAAS,IACVgB,EAAc3L,UAAW,cAAW,IACvC8J,IACIa,YAAS,IACVgB,EAAc3L,UAAW,iBAAc,IAC1C8J,IACIa,WAAS,KACVgB,EAAc3L,UAAW,mBAAgB,IAC5C8J,IACIa,WAAS,OACVgB,EAAc3L,UAAW,qBAAkB,IAC9C8J,IACIa,WAAS,OACVgB,EAAc3L,UAAW,mBAAgB,IAC5C8J,IACIa,WAAS,SACVgB,EAAc3L,UAAW,sBAAmB,IAC/C8J,IACImB,WAAU7S,MAAO,KAAMpC,KAAM,QAAU8U,KACxCa,EAAc3L,UAAW,kBAAe,IAC3C8J,IACIa,WAAS,YACVgB,EAAc3L,UAAW,uBAAoB,IAChD8J,IACIyB,gBAAeJ,KAChBQ,EAAc3L,UAAW,mBAAgB,IACrC2L,GACTf,iBH9cEnU,GAAsB,WACtB,QAASA,GAAKM,EAAOW,GACjBiS,KAAK5S,MAAQA,EACb4S,KAAKjS,OAASA,EAElB,MAAOjB,MAaPmV,GAAsB,WACtB,QAASA,GAAKpU,EAAGC,EAAGV,EAAOW,GACvBiS,KAAKnS,EAAIA,EACTmS,KAAKlS,EAAIA,EACTkS,KAAK5S,MAAQA,EACb4S,KAAKjS,OAASA,EAElB,MAAOkU,MAOPC,GAA4B,WAC5B,QAASA,GAAWpW,EAAIyD,EAAM4S,EAAQ/S,EAASmE,EAAM6O,GACjDpC,KAAKlS,EAAIyF,EAAKzF,EACdkS,KAAKnS,EAAI0F,EAAK1F,EACdmS,KAAKjS,OAASwF,EAAKxF,OACnBiS,KAAK5S,MAAQmG,EAAKnG,MAClB4S,KAAKlU,GAAKA,EACVkU,KAAKzQ,KAAOA,EACZyQ,KAAK5Q,QAAUA,EACf4Q,KAAKqC,OAASF,EAAO1T,MACrBuR,KAAK,gBAAkBmC,EAAO/U,MAC9B4S,KAAK,oBAAsBoC,EAE/B,MAAOF,MAGPI,GAA4B,WAC5B,QAASA,GAAWxW,EAAIyD,EAAMnC,EAAOqB,EAAOW,EAASgT,EAAWhG,GAC5D4D,KAAKlU,GAAKA,EACVkU,KAAK5Q,QAAUA,EACf4Q,KAAKzQ,KAAOA,EACZyQ,KAAKqC,OAAS5T,EACduR,KAAK,gBAAkB5S,EACvB4S,KAAK,oBAAsBoC,EAC3BpC,KAAK5D,EAAIA,EAEb,MAAOkG,MAmCPC,GAA4B,WAC5B,QAASA,GAAWzW,EAAI+B,EAAGC,EAAGoB,EAAQ1D,EAAM2D,EAAWG,EAAUI,OAC3C,KAAdP,IAAwBA,EAAY,IACxC6Q,KAAK7Q,UAAY,GACjB6Q,KAAK1Q,SAAW,OAChB0Q,KAAKlU,GAAKA,EACVkU,KAAKxU,KAAOA,EACZwU,KAAK7Q,UAAYA,EACjB6Q,KAAK9Q,OAASA,EACd8Q,KAAKnS,EAAIA,EACTmS,KAAKlS,EAAIA,EACTkS,KAAK1Q,SAAWA,EAChB0Q,KAAKtQ,cAAgBA,EAEzB,MAAO6S,MA4BPvU,GAA0B,WAC1B,QAASA,GAASH,EAAGC,GACjBkS,KAAKnS,EAAIA,EACTmS,KAAKlS,EAAIA,EAEb,MAAOE,MAqjBPqK,GAA4B,WAC5B,QAASA,GAAWvB,EAAGC,EAAGzG,GACtB0P,KAAKlJ,EAAIA,EACTkJ,KAAKjJ,EAAIA,EACTiJ,KAAK1P,EAAIA,EAEb,MAAO+H,MA2IPmK,GAA6B,WAC7B,QAASA,GAAYhU,EAASZ,EAAM6U,EAAOC,EAAaC,GACpD3C,KAAK4C,YAAcpU,EACnBwR,KAAKpS,KAAOA,GAAQ,MACpBoS,KAAKyC,MAAQA,IAAS,EACtBzC,KAAK0C,YAAcA,EACnB1C,KAAK2C,SAAWA,EAEpB,MAAOH,MI/1BPK,GAAkC,SAAUC,EAAGlQ,GAC/C,GAAImQ,KACJ,KAAK,GAAIlD,KAAKiD,GAAOrR,OAAO4E,UAAUyJ,eAAexJ,KAAKwM,EAAGjD,IAAMjN,EAAEvH,QAAQwU,GAAK,IAC9EkD,EAAElD,GAAKiD,EAAEjD,GACb,IAAS,MAALiD,GAAqD,kBAAjCrR,QAAOuR,sBAC3B,IAAK,GAAI3V,GAAI,EAAGwS,EAAIpO,OAAOuR,sBAAsBF,GAAIzV,EAAIwS,EAAEvS,OAAQD,IAASuF,EAAEvH,QAAQwU,EAAExS,IAAM,IAC1F0V,EAAElD,EAAExS,IAAMyV,EAAEjD,EAAExS,IACtB,OAAO0V,IAUPE,GAA6B,WAC7B,QAASA,GAAYtS,GACjBqP,KAAKrP,QAAUA,EAsqBnB,MAnqBAsS,GAAY5M,UAAU6M,mBAAqB,WACvC,GAAI5R,GACA6R,CACJ,IAAIC,GAAWC,YAAcD,GAAWC,WAAW/V,OAAS,EAYxD,GAXAgE,EAAS7B,oBAAkBuQ,KAAKrP,QAAQ2S,iBAAiBC,aACpD9T,oBAAkBuQ,KAAKrP,QAAQ2S,iBAAiBE,aAChD/T,oBAAkBuQ,KAAKrP,QAAQ8S,eAAgBhU,oBAAkBuQ,KAAKrP,QAAQ8S,cACpC,IAArCzD,KAAKrP,QAAQ8S,aAAanW,QACyB8V,GAAWC,WAAW,GAA/ErD,KAAK0D,iBAAiBN,GAAWC,WAAW,OAAQ,GACxDF,EAAYQ,YAAW3D,KAAKrP,QAAQ+C,SAAUyP,GAAW,GACpD1T,oBAAkBuQ,KAAKrP,QAAQ+M,sBAAyBjO,oBAAkBuQ,KAAKrP,QAAQwS,YAC3C,UAAzCnD,KAAKrP,QAAQiT,eAAezX,WAC5BgX,EAAYnD,KAAKrP,QAAQwS,WAG5B1T,oBAAkBuQ,KAAKrP,QAAQkT,gBAC/BpU,oBAAkBuQ,KAAKrP,QAAQ8S,cAAiBhU,oBAAkBuQ,KAAKrP,QAAQ8S,cACrC,IAArCzD,KAAKrP,QAAQ8S,aAAanW,SAY3BmC,oBAAkBuQ,KAAKrP,QAAQ2S,iBAAiBC,cAChD9T,oBAAkBuQ,KAAKrP,QAAQ8S,cAAgBhU,oBAAkBuQ,KAAKrP,QAAQ8S,cACpC,IAArCzD,KAAKrP,QAAQ8S,aAAanW,UAChC0S,KAAKrP,QAAQkT,aAAe7D,KAAKrP,QAAQ2S,iBAAiBC,YAE9DvD,KAAK8D,qBAAqBxS,GAAQ8R,GAAWC,WAAW,GAAIF,GAC5DnD,KAAK+D,kBAAkBzS,GAAQ8R,GAAWC,WAAW,QAlBN,CAC/C,GAAIW,GAAQhE,KAAKrP,QAAQ8S,aAAanW,OAAS,EAC3CO,EAAImS,KAAKrP,QAAQ8S,aAAaO,GAAa,KAC3ClW,EAAI,GAAI2D,OACZ3D,GAAEkS,KAAKrP,QAAQ8S,aAAaO,GAAa,KAAa,YAAMnW,GACvD4B,oBAAkBuQ,KAAKrP,QAAQ2S,iBAAiBC,aAAgBvD,KAAKrP,QAAQsT,mBAC9EjE,KAAKrP,QAAQkT,aAAe7D,KAAKrP,QAAQ8S,aAAaO,GAAa,KAAc,YAErFhE,KAAK8D,qBAAqBhW,GAAKsV,GAAWC,WAAW,GAAIF,GACzDnD,KAAK+D,kBAAkBjW,GAAKsV,GAAWC,WAAW,MAa9DJ,EAAY5M,UAAUqN,iBAAmB,SAAUpS,EAAM4S,GACrD,GAAIvT,GAAUqP,KAAKrP,QACfwT,KACAC,EAAQ/S,EAAaC,GAAc,MACvC,IAAI8S,GAASA,EAAM9W,OAAS,GAA0B,IAArB4W,EAAU5W,OAAc,CACrD,IAAK,GAAID,GAAI,EAAGA,EAAI+W,EAAM9W,OAAQD,IAC1B+W,EAAM/W,GAAe,aAAMsD,EAAQ2S,iBAAiBC,YACpDa,EAAM/W,GAAS,OAAMsD,EAAQ2S,iBAAiBE,YAC9CY,EAAM/W,GAAc,WAAI,EACxB8W,EAAQC,EAAM/W,GAAc,YAAM+W,EAAM/W,IACxC6W,EAAUnS,KAAKoS,GAGvB,KAAK,GAAInS,GAAI,EAAGA,EAAIoS,EAAM9W,OAAQ0E,IAC9BgO,KAAK0D,iBAAiBU,EAAMpS,GAAIkS,GAGxC,MAAOA,IAEXjB,EAAY5M,UAAUyN,qBAAuB,SAAUxS,EAAMiC,GACzDyM,KAAK5N,eACL4N,KAAKqE,cACA5U,oBAAkBuQ,KAAKrP,QAAQS,mBAC5B4O,KAAKrP,QAAQ2T,WAAWjZ,QAAQ,iBAAmB,EACnD2U,KAAKuE,+BAA+BjT,EAAMiC,IAG1CA,EAAKxF,OAASwF,EAAKxF,OAASwF,EAAKzF,EACjCyF,EAAKnG,MAAQmG,EAAKnG,MAAQmG,EAAK1F,EAC/BmS,KAAKwE,2BAA2BlT,EAAMiC,MAIlD0P,EAAY5M,UAAUkO,+BAAiC,SAAUjT,EAAMmT,GACnE,GACIlR,GAEAgQ,EAGAmB,EACAC,EAPAC,EAAW5E,KAAKrP,QAAQK,iBAExB6T,EAAS7E,KAAKrP,QAAQM,OAGtBM,EAAWF,EAAaC,GAAc,MAG1C,IAAIC,GAAYA,EAASjE,OAAS,IAC9B0S,KAAK8E,oBAAoBvT,EAAUkT,GAC/BzE,KAAKrP,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,GAAID,GAAI,EAAGA,EAAIkE,EAASjE,OAAQD,IACjCkW,EAAahS,EAASlE,GAAe,WAErCqX,EADgC,IAAlBG,EAAOvX,QAAgBiW,IAAesB,EAAOvX,OACxCsX,EAASF,IAAMG,EAAOtB,GAAYwB,SACrDJ,EAAiC,IAAlBE,EAAOvX,OAAe,EAAIuX,EAAOtB,GAAcsB,EAAOtB,GAAYyB,WAC7EH,EAAOtB,GAAYoB,aAAe,EAAIE,EAAOtB,EAAa,GAAGyB,WAAaH,EAAOtB,EAAa,GAAGoB,aAAe,EACpHpR,EAAOhC,EAASlE,GAAS,KACzBkG,EAAO,GAAI0O,IAAK1O,EAAK1F,EAAK6W,EAAM,EAAInR,EAAKzF,GAAK6W,EAAgBD,EAAM,GAAKnR,EAAKnG,MAAQsX,EAAK/Q,KAAKC,IAAIL,EAAKxF,QAAU2W,EAAMC,KACzH3E,KAAKuE,+BAA+BhT,EAASlE,GAAIkG,EAI7D,OAAOjC,IAEX2R,EAAY5M,UAAUyO,oBAAsB,SAAUpU,EAAa6C,GAC/D,GAEI0R,GAFAC,EAAa3R,EAAKxF,OAASwF,EAAKnG,MAChC6D,EAAS+O,KAAKrP,QAAQM,OAEtBkU,EAAe,EACfC,EAAc,CAClB1U,GAAY2U,QAAQ,SAAU/T,GAAQ8T,GAAe9T,EAAa,SAClEZ,EAAY2U,QAAQ,SAAUjB,GAC1BA,EAAkB,WAAIc,EAAad,EAAc,OAAIgB,GAEzD,IAAIE,GAA4C,qBAA5BtF,KAAKrP,QAAQ2T,WAAsC/Q,EAAKnG,MAAQmG,EAAKxF,OACxD,2BAA5BiS,KAAKrP,QAAQ2T,UAClB5T,GAAY6U,KAAKnV,EACjB,KAAK,GAAI/C,GAAI,EAAGA,EAAIqD,EAAYpD,OAAQD,IAAK,CACzC,GAAIuP,GAAOlM,EAAYrD,EACvBuP,GAAiB,WAAuB,IAAlB3L,EAAO3D,SAAmB0S,KAAKrP,QAAQ6U,oBACzD/V,oBAAkBuQ,KAAKrP,QAAQK,iBAAiBG,WAChDyL,EAAiB,aAAM3L,EAAO3D,OAAS,EAAIsP,EAAiB,aAAMoD,KAAKrP,QAAQM,OAAO3D,QACtFgY,GACAL,EAAeC,EAAaE,EAAe1U,EAAYrD,GAAW,OAAKkG,EAAKxF,OACxEoX,GAAgB5R,EAAKnG,QACrBsD,EAAYrD,GAAS,KAAI,GAAI4U,IAAKkD,EAAe5R,EAAK1F,EAAG0F,EAAKzF,EAAGmX,EAAY1R,EAAKxF,WAItFkX,EAAeC,EAAaE,EAAe1U,EAAYrD,GAAW,OAAKkG,EAAKnG,MACxE+X,GAAgB5R,EAAKxF,SACrB2C,EAAYrD,GAAS,KAAI,GAAI4U,IAAK1O,EAAK1F,EAAGsX,EAAe5R,EAAKzF,EAAGyF,EAAKnG,MAAO6X,KAGrFE,GAAgBF,EAChBjF,KAAK5N,YAAYL,KAAKrB,EAAYrD,MAG1C4V,EAAY5M,UAAUmO,2BAA6B,SAAUlT,EAAMmT,GAC/D,GACIlR,GAIAqJ,EAEAY,EAEAiI,EACAd,EAVA5T,EAAOiP,KAAKrP,QAAQK,iBAEpBC,EAAS+O,KAAKrP,QAAQM,OAItBmT,EAAQ/S,EAAaC,GAAc,MAKvC,IAAI8S,GAASA,EAAM9W,OAAS,IACO,IAA3B0S,KAAKqE,WAAW/W,SAChB0S,KAAKqE,cACLrE,KAAKqE,WAAWtS,KAAKqS,IAEzBpE,KAAK0F,wBAAwBpU,EAAM8S,EAAOK,GACtCzE,KAAKrP,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,GAAID,GAAI,EAAGA,EAAI+W,EAAM9W,OAAQD,IAE9BmQ,GADAZ,EAAOwH,EAAM/W,IACY,WACzBkG,EAAOqJ,EAAW,MACXA,EAAiB,WAAI7L,EAAK2T,IAAMzT,EAAOuM,GAAOuH,UAAY,EACjEU,GAAW7I,EAAiB,WAAI7L,EAAK0U,QAAUxU,EAAOuM,GAAOmI,cAAgB,EAC7EhB,EAAe3E,KAAKrP,QAAQ6U,mBAA+B,IAAVhI,GAAeZ,EAAiB,WAAI,EAAI3L,EAAOuM,IAC5FvM,EAAOuM,GAAOwH,WAAa/T,EAAOuM,GAAOmH,aAAmB,EAAuB,IAAlB1T,EAAO3D,OAAgB,EAAI2D,EAAOuM,IACnGvM,EAAOuM,GAAOwH,WAAa/T,EAAOuM,GAAOmH,aAAmB,EAChEpR,EAAO,GAAI0O,IAAK1O,EAAK1F,EAAI4X,EAASlS,EAAKzF,GAAK6W,EAAec,GAAUlS,EAAKnG,MAAQqY,EAASlS,EAAKxF,OAAS0X,IACpG7I,EAAiB,YAAKA,EAAa,OAAI,GACxCoD,KAAKwE,2BAA2BJ,EAAM/W,GAAIkG,IAM9D0P,EAAY5M,UAAUqP,wBAA0B,SAAUhX,EAAQ6C,EAAUkT,GACxEzE,KAAK4F,iBAAiBrU,EAAU+C,EAAQmQ,IACxClT,EAASgU,KAAKjM,GACd0G,KAAK6F,kBAAkBtU,KAAckT,OAEzCxB,EAAY5M,UAAUwP,kBAAoB,SAAUvU,EAAMwU,EAAYvS,EAAMwS,GACxE,GAAItI,GAAanM,EAAKhE,MACtB,IAAmB,IAAfmQ,EAAkB,CACduI,EAAiBhG,KAAKiG,eAAeH,EAAYvS,EAErD,OADI2S,GAAWH,EAAMnN,OAAOoN,GAGhC,GAAI5Y,GAAQmH,EAAgBhB,GACxB4S,EAAY7U,EAAK,GACjB8U,EAAW9U,EAAK6H,MAAM,EAAGsE,EAC7B,IAAIuC,KAAKqG,YAAYP,EAAYK,EAAW/Y,GAAQ,CAChD,GAAIkZ,GAASR,EAAWlN,OAAOuN,EAC/B,OAAOnG,MAAK6F,kBAAkBO,EAAUE,EAAQ/S,EAAMwS,GAKtD,IAAK,GAFDQ,GAAmBT,EAAWxY,OAC9BkZ,EAAW,EACNnZ,EAAI,EAAGA,EAAIkZ,EAAkBlZ,GAAK,EACvCmZ,GAAYV,EAAWzY,GAAa,QAExC,IAAIoZ,GAAezG,KAAK0G,QAAQnT,EAAMiT,GAClCR,EAAiBhG,KAAKiG,eAAeH,EAAYvS,GACjD2S,EAAWH,EAAMnN,OAAOoN,EAC5B,OAAOhG,MAAK6F,kBAAkBvU,KAAUmV,EAAcP,IAG9DjD,EAAY5M,UAAUgQ,YAAc,SAAUP,EAAYK,EAAW7Y,GACjE,GAA0B,IAAtBwY,EAAWxY,OACX,OAAO,CAGP,IAAIgZ,GAASR,EAAWlN,OAAOuN,EAG/B,OAF4BnG,MAAK2G,mBAAmBb,EAAYxY,IACxC0S,KAAK2G,mBAAmBL,EAAQhZ,IAIhE2V,EAAY5M,UAAUsQ,mBAAqB,SAAUC,EAAKtZ,GAKtD,IAAK,GAJDuZ,GAAYD,EAAItZ,OAChBwZ,EAAUC,EAAAA,EACVC,GAAWD,EAAAA,EACXE,EAAU,EACL5Z,EAAI,EAAGA,EAAIwZ,EAAWxZ,GAAK,EAAG,CACnC,GAAI6Z,GAAON,EAAIvZ,GAAa,QACxB6Z,GAAOJ,IACPA,EAAUI,GAEVA,EAAOF,IACPA,EAAUE,GAEdD,GAAWC,EAIf,MAFavT,MAAKwT,IAAKxT,KAAKyT,IAAI9Z,EAAQ,GAAM0Z,EAAWrT,KAAKyT,IAAIH,EAAS,GAAMtT,KAAKyT,IAAIH,EAAS,IAC7FtT,KAAKyT,IAAI9Z,EAAQ,GAAMwZ,KAGjC7D,EAAY5M,UAAUqQ,QAAU,SAAUnT,EAAM2T,GAC5C,GAAIT,GAAe/R,EAAmBnB,GAClCnG,EAAQqZ,EAAarZ,MACrBW,EAAS0Y,EAAa1Y,OACtB8G,EAAU4R,EAAa5Y,EACvBiH,EAAU2R,EAAa3Y,CAC3B,IAAIV,GAASW,EAAQ,CACjB,GAAIsZ,GAAYH,EAAOnZ,CAQvB,OAAO6G,GANHH,GACA5G,EAAGgH,EAAUwS,EACbvZ,EAAGgH,EACH1H,MAJWA,EAAQia,EAKnBtZ,OAAQA,IAKZ,GAAIuZ,GAAaJ,EAAO9Z,EAEpBqH,GACA5G,EAAGgH,EACH/G,EAAGgH,EAAUwS,EACbla,MAAOA,EACPW,OALYA,EAASuZ,EAOzB,OAAO1S,GAAcH,IAG7BwO,EAAY5M,UAAU4P,eAAiB,SAAUW,EAAKrT,GAYlD,IAAK,GAFDiK,GATA/I,EAAYC,EAAmBnB,GAE/BnG,EAAQqH,EAAUrH,MAClBW,EAAS0G,EAAU1G,OACnB8G,EAAUJ,EAAU5G,EACpBiH,EAAUL,EAAU3G,EACpB+Y,EAAYD,EAAItZ,OAChB2D,EAAS+O,KAAKrP,QAAQM,OACtBF,EAAOiP,KAAKrP,QAAQK,iBAEpBwV,EAAW,EACNnZ,EAAI,EAAGA,EAAIwZ,EAAWxZ,GAAK,EAChCmZ,GAAYI,EAAIvZ,GAAa,QAWjC,KAAK,GALDoY,GAEA8B,EAEAC,EARAH,EAAYb,EAAWzY,EACvBuZ,EAAad,EAAWpZ,EACxBqa,EAAa5S,EACb6S,EAAa5S,EAEb6S,KAIKta,EAAI,EAAGA,EAAIwZ,EAAWxZ,GAAK,EAAG,CACnC,GAAIuP,GAAOgK,EAAIvZ,EAOf,IANAmQ,EAAQZ,EAAiB,WACzBA,EAAiB,WAAuB,IAAlB3L,EAAO3D,SAAkB0S,KAAKrP,QAAQ6U,mBAAqBhI,IAAUvM,EAAO3D,QAC9FmC,oBAAkBsB,EAAKI,YAAqBqM,IAAUvM,EAAO3D,QACjEia,EAAW5K,EAAaqD,KAAKqE,WAAW,GAAIzH,GAC5C4K,EAAaD,EAAWvH,KAAKrP,QAAQ+C,SAAWkJ,EAAa,OAAErJ,KAC/DkS,EAAU7I,EAAiB,WAAI7L,EAAK0U,QAAUxU,EAAOuM,GAAOmI,aACxDvY,GAASW,EAAQ,CACjB,GAAI6Z,GAAKF,EAAa9K,EAAe,SAAIyK,CACzCzK,GAAW,MACP/O,EAAG4Z,EACH3Z,EAAG4Z,EACHta,MAAOqa,EAAaJ,EACpBtZ,OAAQ6Z,GAEZF,EAAaE,MAEZ,CACD,GAAIC,GAAKJ,EAAa7K,EAAe,SAAI0K,CACzC1K,GAAW,MACP/O,EAAG4Z,EACH3Z,EAAG4Z,EACHta,MAAOya,EACP9Z,OAAQ2Z,EAAaJ,GAEzBG,EAAaI,EAEbjL,EAAa,OAAI,IAAM2K,GAAa5T,KAAK2E,MAAM/E,EAAKzF,EAAK2X,EAAU,IACnE9R,KAAK2E,MAAMkP,EAAW1Z,GAAK0Z,EAAWzZ,OAASyZ,EAAW1Z,KAAO6F,KAAK2E,MAAM/E,EAAK1F,EAAK4X,EAAU,IAChG9R,KAAK2E,MAAMkP,EAAW3Z,GAAK2Z,EAAWpa,MAAQoa,EAAW3Z,OACzDmS,KAAK5N,YAAYL,KAAK6K,GACtB+K,EAAY5V,KAAK6K,IAGzB,MAAO+K,IAEX1E,EAAY5M,UAAUuP,iBAAmB,SAAUtU,EAAM4V,GAIrD,IAAK,GAHDzJ,GAAanM,EAAKhE,OAElBsN,KACKvN,EAAI,EAAGA,EAAIoQ,EAAYpQ,GAAK,EAAG,CAGpC,IAAK,GAFDya,GAAexW,EAAKhE,OACpBya,EAAY,EACPC,EAAM,EAAGA,EAAMF,EAAcE,GAAO,EACzCD,GAAazW,EAAK0W,GAAa,MAInC,KAAK,GAFDC,GAAaf,EAAOa,EACpBG,MAAQ,GACHlW,EAAI,EAAGA,EAAI8V,EAAc9V,KAC9BkW,EAAQ5W,EAAKU,IACG,SAAIkW,EAAc,OAAID,EACtCrN,EAAO7I,KAAKmW,GAGpB,MAAOtN,IAEXqI,EAAY5M,UAAU8R,gBAAkB,SAAUC,GAC9C,GACIjF,GADAkF,EAAa,GAAI5W,OAErB4W,GAAaD,EAAW,GAAW,OACnCpI,KAAKrP,QAAQkT,aAAewE,EAAsB,UAAIA,EAAuB,WAAI,IACjF,IAAIC,GAAsB,GAAI7W,OAC1BhC,qBAAkB4Y,EAAsB,WACxCC,EAAsBD,EAGtBC,EAAoBD,EAAsB,YAAMA,GAEpDlF,EAAYQ,YAAW3D,KAAKrP,QAAQ+C,SAAUyP,GAAW,GACpD1T,oBAAkBuQ,KAAKrP,QAAQ+M,sBAAyBjO,oBAAkBuQ,KAAKrP,QAAQwS,aACxFA,EAAYnD,KAAKrP,QAAQwS,UAG7B,KAAK,GADDa,GAAQhE,KAAKrP,QAAQM,OAAO3D,OACvBD,EAAI,EAAGA,EAAI2W,EAAO3W,IAEnB2W,IADaoE,EAAW,GAAe,WAEvCpI,KAAKrP,QAAQM,OAAO+S,GAAShE,KAAKrP,QAAQM,OAAO5D,GAGjD2S,KAAKrP,QAAQM,OAAOsX,OAAOvE,EAAQ,EAAG,EAG9ChE,MAAK8D,qBAAqBwE,EAAqBnF,GAC/CnD,KAAK+D,kBAAkBuE,IAG3BrF,EAAY5M,UAAU0N,kBAAoB,SAAUyE,GAChD,GAEIrc,GAEA0J,EACA4S,EACAC,EACAC,EAPAC,EAAQ5I,KAGRlO,EAAUkO,KAAKrP,OAKnBqP,MAAK9R,SAAW4D,EAAQ5D,QACxB,IAEI2a,GAEArL,EACAsL,EAEAvV,EACAwG,EAGAxK,EACAqN,EACAmM,EACA3Z,EAKA4Z,EAEAC,EACAvE,EACAwE,EApBAC,EAAYrX,EAAQgB,QAAQhH,GAG5B+F,EAAOC,EAAQwS,WAGf8E,EAAkBpJ,KAAKrP,QAAQK,iBAAiBoY,gBAOhDC,EAAW,GAEXC,EAAe3d,SAASC,eAAekG,EAAQgB,QAAQhH,GAAK,sBAM5DmF,EAASa,EAAQb,MACrB+O,MAAKuJ,YAAcvJ,KAAK9R,SAASsb,aAAc1d,GAAIqd,EAAY,YAActX,EAAO,WAgHpF,KAAK,GA/GD4X,GAEAnX,EACA6P,EAYAiG,EACA1Y,EAZAga,EAAgB7d,gBAAc,OAC9BC,GAAIgG,EAAQgB,QAAQhH,GAAK,wBACzB6d,UAAW,WACX1W,OAAQ,iEACKnB,EAAQ4B,SAAS5F,EAAI,WACpBgE,EAAQ4B,SAAS7F,EAAI,aACnBiE,EAAQ4B,SAAS3F,OAAS,YAC3B+D,EAAQ4B,SAAStG,MAAQ,QAExCwc,GAAa,EACb7Y,EAAOe,EAAQd,iBAgGf6Y,EAAS7J,KACJ3S,EAAI,EAAGA,EAAI2S,KAAK5N,YAAY9E,OAAQD,KA9F/B,SAAUA,GAGpB,GAFAuP,EAAOiN,EAAOzX,YAAY/E,GAC1BmQ,EAAQZ,EAAiB,WACrBiN,EAAOlZ,QAAQmZ,eAAiBra,oBAAkBoa,EAAOlZ,QAAQkT,eAC9DrG,EAAQ,GAAKqM,EAAOlZ,QAAQmZ,eAC5BtM,EAASqM,EAAOlZ,QAAQkT,aAAe,EAC1C,MAAO,UAEXtQ,GAAOqJ,EAAW,KAClBgN,EAAahN,EAAiB,WAC9BoM,EAAUG,EAAY,gBAAkB3L,EAAQ,eAAiBnQ,EACjEoc,EAAYI,EAAO3b,SAASsb,aAAc1d,GAAIkd,EAAU,WACxDtE,GAAOkF,EAAa7Y,EAAK2T,IAAMzT,EAAOuM,GAAOuH,UAAY,CACzD,IAAIgF,GAAkBF,EAAOlZ,QAAQwS,UAAYzO,EAAmBmV,EAAOlZ,QAAQwS,WAAa0G,EAAOlZ,QAAQ+C,QACpF,gBAAvB5B,EAAQwS,aACR/Q,EAAKnG,MAAQuG,KAAKC,IAAIL,EAAK1F,EAAI0F,EAAKnG,OAASsX,EAC7CnR,EAAKxF,OAAS4F,KAAKC,IAAIL,EAAKzF,EAAIyF,EAAKxF,QAAU2W,GAEnB,uBAA5B5S,EAAQgC,gBACRP,EAAK1F,EAAKkc,EAAgBlc,EAAIkc,EAAgB3c,MAASmG,EAAKnG,MAAQuG,KAAKC,IAAImW,EAAgBlc,EAAI0F,EAAK1F,GAErE,uBAA5BiE,EAAQgC,gBACbP,EAAKzF,EAAKic,EAAgBjc,EAAIic,EAAgBhc,OAAUwF,EAAKxF,OAAS4F,KAAKC,IAAImW,EAAgBjc,EAAIyF,EAAKzF,GAEvE,uBAA5BgE,EAAQgC,kBACbP,EAAK1F,EAAKkc,EAAgBlc,EAAIkc,EAAgB3c,MAASmG,EAAKnG,MAAQuG,KAAKC,IAAImW,EAAgBlc,EAAI0F,EAAK1F,GACtG0F,EAAKzF,EAAKic,EAAgBjc,EAAIic,EAAgBhc,OAAUwF,EAAKxF,OAAS4F,KAAKC,IAAImW,EAAgBjc,EAAIyF,EAAKzF,IAE5G+H,EAAe+T,EAAa7Y,EAAK8E,aAAe5E,EAAOuM,GAAO3H,aAC9D6S,EAAemB,EAAOnB,aAAakB,EAAYhN,GAC/CrN,EAAOmZ,EAAmB,KAC1BtZ,EAAUsZ,EAAsB,QAChC3O,EAAS6P,EAAa7Y,EAAKiZ,YAAe/Y,EAAOuM,GAAQyM,YACzD,IAAIC,OAAY,EAEhB,IADAzB,EAAamB,EAAa7Y,EAAKoZ,WAAclZ,EAAOuM,GAAQwH,WACxDxH,IAAUqM,EAAOlZ,QAAQkT,aACzB,GAAIgG,EAAOlZ,QAAQsT,iBAAkB,CAEjCvU,EAAgB,IAAMma,EAAOlZ,QAAQyZ,oBAAsB,IAC3DF,EAAYtN,EAAqB,eAAE5M,QAF1B,MAEsCN,GAC/Cwa,EAAsB,IAAV1M,EAAc,IAAM0M,EAAYA,MAG5CA,GAAYtN,EAAW,SAIvBiN,GAAOlZ,QAAQsT,mBACfrH,EAAgB,WAAI,GAExBsN,EAAYtN,EAAW,IAmB3B,IAjBAmM,EAAajP,EAAcC,EAAQ6C,EAAW,KAAGiN,EAAOlZ,UAAYuZ,EACpE9B,EAAa/W,EAAauL,GAAc,OACxCmM,GAAca,GAAcxB,GAAcA,EAAW9a,OAAS,GAAKuc,EAAOlZ,QAAQkD,gBAC7E+I,EAAgB,UACb9K,EAAQuY,UAAYtB,EAAa,OAAS,OAASA,EADlCjX,EAAQuY,UAAYtB,EAAa,OAAS,OAASA,EACJA,EACxEG,EAAaU,EAAa7Y,EAAKuZ,WAAarZ,EAAOuM,GAAO+M,YAC1DrB,EAAU1c,WAAaqd,EAAOlZ,QAAQ6Z,WAAWjL,iBAAmB2J,EAAU1c,WAC9E2V,EAASyH,EAAa7Y,EAAKoR,OAASlR,EAAOuM,GAAO2E,OAClDhW,EAAYyd,EACmB7Y,EAAK0Z,cADyB,SAAnCxZ,EAAOuM,mBAAqC,UAAgD,WAAnCvM,EAAOuM,mBACtF,YAAc,WAClBsL,EAAmBc,EAAa7Y,EAAK+X,iBAAmB7X,EAAOuM,GAAOsL,iBACtExW,EAAWsX,EAAa7Y,EAAK2Z,cAAgBzZ,EAAOuM,GAAOmN,eAC3D/N,EAAc,SAAMuF,OAAQA,EAAQ/S,QAASA,EAASG,KAAMA,GAC5DoZ,GACIiC,QAAQ,EAAO9Z,KFxeJ,gBEweyBH,QAASkZ,EAAOlZ,QACpDuB,YAAa0K,EAAMiO,YAAahB,EAAOzX,YAAa5D,QAASoO,EAAc,SAE3EiN,EAAOlZ,QAAQma,SAAU,CACXnC,EAAUhY,QAAuBgY,EAAUkC,WAAzD,IAAsEE,GAAkBlI,GAAO8F,GAAY,UAAW,eACtHA,GAAYoC,EAEhBlB,EAAOlZ,QAAQqa,QF/eA,gBE+euBrC,EAAW,SAAUsC,GACvD,IAAKA,EAAaL,OAAQ,CACtBvB,EAAW,MAAQ9V,EAAK1F,EAAI,IAAM0F,EAAKzF,EAAI,OAASyF,EAAK1F,EAAI0F,EAAKnG,OAAS,IAAMmG,EAAKzF,EAClF,OAASyF,EAAK1F,EAAI0F,EAAKnG,OAAS,KAAOmG,EAAKzF,EAAIyF,EAAKxF,QAAU,MAAQwF,EAAK1F,EAAI,KAAO0F,EAAKzF,EAAIyF,EAAKxF,QAAU,IACnH8a,EAAc,GAAIvG,IAAW0G,EAAU,YAAazZ,EAAM4S,EAAO/U,MAAO+U,EAAO1T,MAAOW,EAAS,KAAMia,EACrG,IAAIzY,GAAOgY,EAAM1a,SAASgd,SAASrC,EACnCY,GAAUzd,YAAY4E,GAClB6X,GACAG,EAAMuC,eAAepC,EAAW1V,WAAYoW,EAAWP,EAAW3V,EAAM6V,EAAiBJ,EAASzZ,EAAMpD,EAAUuD,GAElH4C,IACA2W,EAAcL,EAAMwC,eAAe9B,EAAcN,EAASzV,EAAMuV,EAAkBxW,EAAUsK,EAAMgN,GAClGF,EAAc1d,YAAYid,IAE9BQ,EAAU5P,aAAa,aAAc+C,EAAW,MAChD6M,EAAU5P,aAAa,YAAa+O,EAAMjY,QAAQ0a,SAAWhe,EAAI,GAAGgG,YACpEuV,EAAMW,YAAYvd,YAAYyd,OAM9Bpc,EAERqc,GAAchQ,WAAWpM,OAAS,IAClCgc,EAAatd,YAAY0d,GACzB4B,uBAAqBtL,KAAKrP,QAAQmC,QAAQhH,GAAK,kBAAmB,iBAAkBmF,EAAOA,EAAO3D,OAAS,IAC3Gge,uBAAqBtL,KAAKrP,QAAQmC,QAAQhH,GAAK,iBAAkB,gBAAiBiF,IAEtFiP,KAAKrP,QAAQ4a,UAAUvf,YAAYgU,KAAKuJ,cAE5CtG,EAAY5M,UAAU8U,eAAiB,SAAU3f,EAAMwI,EAAekV,EAAW3V,EAAM6V,EAAiBJ,EAASzZ,EAAMpD,EAAUuD,GAI1G/D,SAASC,eAAeoU,KAAKrP,QAAQmC,QAAQhH,GAAK,sBAC1DkU,KAAKrP,QAAQK,gBAJxB,IAMIrD,GACA6d,EAEAC,EAIAC,EALAhT,KAGAiT,KACA5d,EAAS,CAKb,IAHA2K,GAA8C,IAA3BlN,EAAKH,QAAQ,QAAmBG,EAAKqE,MAAM,QAAU,KACxE4b,EAAazL,KAAK4L,qBAAqBrY,EAAM/H,EAAM0d,EAAWE,GAC9Dzb,EAAWpC,EAAYmN,GAAkBA,EAAe,IAAM+S,EAAW,GAAIvC,GACzElJ,KAAKrP,QAAQ0Z,UAAW,CACxB,GAAI7W,GAAYjI,EAAYC,EAAM0d,GAC9B2C,EAAmBrgB,EAAKmE,OAAO,QAAUnE,EAAKmE,OAAO,MACzD,IAAI4D,EAAKnG,MAAQoG,EAAUpG,OAASye,EAAmB,EAAG,CACtD,GAAI1e,GAAQ3B,EAAK+B,UAAUse,EAAmB,EAAGrgB,EAAK8B,QAElDwe,EAAkBvgB,EADJ,MAC6B2d,EAC/CuC,GAAW,GAAOxe,EAASsG,EAAKnG,MAAQ0e,EAAgB1e,MAnBlD,EAmBmEqe,EAAW,GAAIvC,GAAa/b,GAI7G,GADAqe,EAAelY,EAAkBC,EAAMpH,EAAUwB,EAAU,OAAQqS,KAAKrP,UACnElB,oBAAkBiJ,GAAiB,CAIpC,IAAK,GAHDoE,MACAiP,EAAQ,KACRC,KACK3e,EAAI,EAAGA,EAAIqL,EAAepL,OAAQD,IAGvCU,IADAJ,EAAWpC,EADXwgB,EAAQ9e,EAAUsG,EAAKnG,MAAQ,EAAIsL,EAAerL,GAAI6b,GACxBA,IACXnb,OACnBie,EAAUja,KAAKpE,EAASP,OACxB0P,EAAW/K,KAAKga,EAEpBN,GAAa3O,EACbnP,EAASP,MAAQuG,KAAKwT,IAAIpG,MAAM,KAAMiL,GACtCre,EAASI,OAASA,EAEtB,GAAwB,eAApBqb,GAAwD,SAApBA,GAAkD,SAApBA,EAA4B,CAC9F,IAAK,GAAIpX,GAAI,EAAGA,EAAIyZ,EAAWne,OAAQ0E,IAEnCjE,IADAJ,EAAWpC,EAAYkgB,EAAWzZ,GAAIkX,IACnBnb,OACdwF,EAAKxF,OA1CJ,EA0CwBA,GAC1B4d,EAAU5Z,KAAK0Z,EAAWzZ,GAGlC,IAAwB,SAApBoX,GAA8BqC,EAAWne,SAAWqe,EAAUre,QAAUqe,EAAUre,OAAQ,CAC1F,GAAI2e,GAAmBN,EAAUre,OAAS,EACtC4e,EAAaP,EAAUM,EAC3BC,GAAaA,EAAW3e,UAAU,EAAI2e,EAAW5e,OAAS,GAAM,MAChEqe,EAAUpD,OAAO0D,GACE,QAAfC,GACAP,EAAU5Z,KAAKma,QAKvBR,GAAWD,EACXE,EAAU5Z,KAAK2Z,EAGnBnd,GADc,GAAIgU,IAAWyG,EAAU,QAASwC,EAAa3d,EAAG2d,EAAa1d,EAAG,QAAS6d,EAAW,GAAI,GAAIjc,GAC7EwZ,EAAWA,EAAUza,OAASuR,KAAKmM,kBAAkB5c,GAAOyE,IAE/FiP,EAAY5M,UAAUqS,aAAe,SAAUkB,EAAYhN,GACvD,GAAIjM,GAAUqP,KAAKrP,QACfyb,EAAWxC,EAAajZ,EAAQK,iBAAiBzB,KAAOoB,EAAQM,OAAO2L,EAAiB,YAAGrN,KAC3F8c,EAAczC,EAAajZ,EAAQK,iBAAiB5B,QAAUuB,EAAQM,OAAO2L,EAAiB,YAAGxN,OAChGK,qBAAkB2T,GAAWkJ,oBAC1BlJ,GAAWkJ,kBAAkBhf,OAAS,IACtC8V,GAAWC,WAAaD,GAAWkJ,kBAG3C,IAAIjI,GAAahT,EAAa+R,GAAWC,WAAW,IAAY,OAC5DxN,EAAe+T,EAAajZ,EAAQK,iBAAiB6E,aACrDlF,EAAQM,OAAO2L,EAAiB,YAAG/G,YACvC,IAAIA,EAAavI,OAAS,EAAG,CACzB,GAAIif,GAAS3W,EAASC,EAAc+G,EAAW,KAAEoD,KAAKrP,QAAQ6b,qBAAsB5P,EAAW,KAAEoD,KAAKrP,QAAQ8b,qBAAsB7P,EAAW,KAAEoD,KAAKrP,QAAQS,iBAC9Jgb,GAAY3c,oBAAkB8c,EAAa,MAAsB5b,EAAQK,iBAAiBzB,KAA1Cgd,EAAa,KAC7DF,EAAcE,EAAgB,YAG9B,KAAK,GAAIlf,GAAI,EAAGA,EAAIgX,EAAW/W,OAAQD,IAC/BgX,EAAWhX,GAAmB,iBAAMuP,EAAqB,eAAE/M,MAAM,KAAK,KACtEuc,EAAY3c,oBAAkB2c,GAAwB3c,oBAAkBkB,EAAQ+b,gBAC5B/b,EAAQgc,QAAQrf,OAAS,EACzEqD,EAAQgc,QAAQtf,EAAIsD,EAAQgc,QAAQrf,QAAU,UAD9C+W,EAAWhX,GAAS,KAAEsD,EAAQ+b,gBADQN,EAMtD,QAAS7c,KAAM6c,EAAUhd,QAASid,IAKtCpJ,EAAY5M,UAAU8V,kBAAoB,SAAU1d,GAChD,GAAIme,GAAiBne,EAEjBoe,EAAWlS,EAAkBhD,EADjCiV,EAAqC,gBAAnBA,EAAoC9R,OAAOC,iBAAiBpP,SAASI,KAAM,MAAM8S,gBAAkB+N,GAGrH,OADejZ,MAAK2E,OAAoB,IAAbuU,EAAS/V,EAAuB,IAAb+V,EAAS9V,EAAuB,IAAb8V,EAASvc,GAAW,MAClE,IAAM,QAAU,SAEvC2S,EAAY5M,UAAU+U,eAAiB,SAAU9B,EAAcN,EAASzV,EAAMpH,EAAUmG,EAAUsK,EAAMgN,GACpG,GAAIkD,GACAC,EACAC,EACAza,EACA0a,EACAC,EAAatD,EAAaZ,EAAU,iBAAmBA,EAAU,kBACjEmE,EAAiBvD,EAAa,iBAAmB,iBACrD,IAAIna,oBAAkB6C,EAAoB,WAEtC,IAAK,GADDd,GAAOC,OAAOD,KAAKoL,EAAW,MACzBvP,EAAI,EAAGA,EAAImE,EAAKlE,OAAQD,IAC7BiF,EAAWA,EAAStC,QAAQ,GAAIoD,QAAO,MAAQ5B,EAAKnE,GAAK,KAAM,KAAMuP,EAAW,KAAEpL,EAAKnE,GAAGgG,YAUlG,OAPAd,GAAaF,EAAoBC,GACjCwa,EAAkBva,EAAWqK,EAAW,KAAG,KAAM,KAAMoD,KAAKrP,QAAQmC,QAAQhH,GAAKqhB,GAAgB,GACjGJ,EAAWla,EAAeia,EAAiBI,EAAYtQ,EAAW,MAClEoQ,EAAejZ,EAAegZ,EAAUzD,GACxC2D,EAAmB3Z,EAAkBC,EAAMpH,EAAU6gB,EAAc,WAAYhN,KAAKrP,SACpFoc,EAAS7gB,MAAMS,KAAOsgB,EAAiBpf,EAAI,KAC3Ckf,EAAS7gB,MAAMQ,IAAMugB,EAAiBnf,EAAI,KACnCif,GAEX9J,EAAY5M,UAAUuV,qBAAuB,SAAUrY,EAAM/H,EAAM0d,EAAWxb,GAC1E,GAAI0f,GACAlgB,EAAWqG,EAAKnG,MAAQ,EAC5B,QAAQM,GACJ,IAAK,OACD0f,GAAahU,EAAKlM,EAAUqG,EAAKxF,OAAQvC,EAAM0d,GAC/C,MACJ,KAAK,OACDkE,GAAangB,EAAUC,EAAW,EAAI1B,EAAM0d,GAC5C,MACJ,KAAK,aACDkE,EAAY7U,EAASrL,EAAU1B,EAAM0d,EACrC,MACJ,KAAK,OACDkE,EAAYvU,EAAS3L,EAAU1B,EAAM0d,GAG7C,MAAOkE,IAEJnK,KClrBPoK,GAA6B,WAK7B,QAASA,GAAYC,GACjBtN,KAAKsN,QAAUA,EA+GnB,MAzGAD,GAAYhX,UAAUkX,MAAQ,SAAU/T,GACpC,GAAIoP,GAAQ5I,IACZA,MAAKwN,YAAc1S,OAAO2S,KAAK,GAAI,QAAS,UAAY3S,OAAO4S,YAAc,UAAY5S,OAAO6S,WAAa,cAC7G3N,KAAKwN,YAAYI,OAAO,EAAG,GAC3B5N,KAAKwN,YAAYK,SAASC,OAAOC,WAAYD,OAAOE,YACpD,IAAIC,IACArD,QAAQ,EAAOsD,YAAalO,KAAKmO,eAAe3U,GAAW1I,KHR9C,cGUjBkP,MAAKsN,QAAQtC,QHVI,cGUiBiD,EAAU,WACnCA,EAASrD,QACV4C,QAAYS,EAASC,YAAatF,EAAM4E,gBASpDH,EAAYhX,UAAU8X,eAAiB,SAAU3U,GAC7C,GAAI4U,GAAMviB,gBAAc,MAiBxB,OAhBI2N,GACIA,YAAoB9H,OACpB8H,EAAS6L,QAAQ,SAAUna,GACvBkjB,EAAIpiB,YAAYmE,EAAWjF,GAAOmjB,WAAU,MAG3C7U,YAAoB8U,SACzBF,EAAIpiB,YAAYwN,EAAS6U,WAAU,IAGnCD,EAAIpiB,YAAYmE,EAAWqJ,GAAU6U,WAAU,IAInDD,EAAIpiB,YAAYgU,KAAKsN,QAAQxa,QAAQub,WAAU,IAE5CD,GAOXf,EAAYhX,UAAUkY,OAAS,SAAU3gB,EAAM4gB,EAAUC,GACrD,GAAI7F,GAAQ5I,KACRlN,EAAUjH,gBAAc,UACxBC,GAAI,aACJ4iB,OACIthB,MAAS4S,KAAKsN,QAAQqB,cAAcvhB,MAAMiG,WAC1CtF,OAAUiS,KAAKsN,QAAQqB,cAAc5gB,OAAOsF,cAGhDub,IAAeC,UAAQC,UAAUzb,WAAWhI,QAAQ,mBAAqB,EAC7EojB,GAAchf,oBAAkBgf,GAAeM,qBAAmBC,UAAYP,CAC9E,IAAIQ,GAAU,sFACVjP,KAAKsN,QAAQ/B,UAAU2D,UACvB,SACA/T,EAAML,OAAOqU,IAAIC,gBAAgB,GAAIC,MAAc,QAATzhB,GAAkBqhB,KAC3D,GAAKK,gBAAiBC,kBAAkBvP,KAAKsN,QAAQ/B,aAAe3d,KAAM,kBAC/E,IAAa,QAATA,EACAoS,KAAKwP,gBAAgBhB,EAAU5gB,EAAMuN,EAAKyT,OAEzC,CACD,GAAIa,GAAU,GAAIC,OACdC,EAAQ7c,EAAQ8c,WAAW,KAC/BH,GAAQI,kBAGJ,GAFAF,EAAMG,UAAUL,EAAS,EAAG,GAC5B3U,OAAOqU,IAAIY,gBAAgB5U,GACd,QAATvN,EAAgB,CAChB,GAAIoiB,GAAa,GAAIC,eACjBC,EAAcpd,EAAQqd,UAAU,cAAcngB,QAAQ,aAAc,qBACxEggB,GAAWI,aAAa3B,YAAcA,EACtCyB,EAAcA,EAAY/W,MAAM+W,EAAY7kB,QAAQ,KAAO,GAC3D2kB,EAAWK,MAAMC,MAAMC,SAAST,UAAU,GAAIU,aAAUN,GAAc,EAAG,EAAItH,EAAM0E,QAAQqB,cAAcvhB,MAAQ,GAAKwb,EAAM0E,QAAQqB,cAAc5gB,QAC9I6gB,IACAoB,EAAWS,KAAKjC,EAAW,QAC3BwB,EAAWU,eAIf9H,GAAM4G,gBAAgBhB,EAAU5gB,EAAMkF,EAAQqd,UAAU,aAAangB,QAAQ,YAAa,sBAAuB4e,IAGzHa,EAAQkB,IAAMxV,IAStBkS,EAAYhX,UAAUmZ,gBAAkB,SAAUhB,EAAU5gB,EAAMuN,EAAKyT,GACnE/iB,gBAAc,KACV6iB,OACIkC,SAAYpC,EAAW,IAAM5gB,EAAKijB,oBAClCnU,KAAQvB,KAEb2V,cAAc,GAAIC,YAAWnC,EAAa,QAAU,QACnDoC,KAAMlW,OACNmW,SAAS,EACTC,YAAY,MAGb7D,MJxHX,SAAW8D,GAEPA,EAAMC,eACF/kB,KAAM,OACNC,WAAY,SACZmC,MAAO,UACPlC,UAAW,SACXC,WAAY,6BAEjB2kB,UAAUA,YKVb,IAAI1R,IAAwC,WACxC,GAAIC,GAAgB,SAAUtD,EAAG9L,GAI7B,OAHAoP,EAAgBjO,OAAOkO,iBAChBC,uBAA2BlO,QAAS,SAAU0K,EAAG9L,GAAK8L,EAAEwD,UAAYtP,IACvE,SAAU8L,EAAG9L,GAAK,IAAK,GAAIuP,KAAKvP,GAAOA,EAAEwP,eAAeD,KAAIzD,EAAEyD,GAAKvP,EAAEuP,MACpDzD,EAAG9L,GAE5B,OAAO,UAAU8L,EAAG9L,GAEhB,QAASyP,KAAOC,KAAKC,YAAc7D,EADnCsD,EAActD,EAAG9L,GAEjB8L,EAAE/F,UAAkB,OAAN/F,EAAamB,OAAOyO,OAAO5P,IAAMyP,EAAG1J,UAAY/F,EAAE+F,UAAW,GAAI0J,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQnG,EAAKoG,GAC7E,GAA2HlE,GAAvHmE,EAAIC,UAAUlT,OAAQwJ,EAAIyJ,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7O,OAAOgP,yBAAyBJ,EAAQnG,GAAOoG,CACrH,IAAuB,gBAAZI,UAAoD,kBAArBA,SAAQC,SAAyB7J,EAAI4J,QAAQC,SAASP,EAAYC,EAAQnG,EAAKoG,OACpH,KAAK,GAAIjT,GAAI+S,EAAW9S,OAAS,EAAGD,GAAK,EAAGA,KAAS+O,EAAIgE,EAAW/S,MAAIyJ,GAAKyJ,EAAI,EAAInE,EAAEtF,GAAKyJ,EAAI,EAAInE,EAAEiE,EAAQnG,EAAKpD,GAAKsF,EAAEiE,EAAQnG,KAASpD,EAChJ,OAAOyJ,GAAI,GAAKzJ,GAAKrF,OAAOmP,eAAeP,EAAQnG,EAAKpD,GAAIA,GAE5D+L,GAAkC,SAAUC,EAAGlQ,GAC/C,GAAImQ,KACJ,KAAK,GAAIlD,KAAKiD,GAAOrR,OAAO4E,UAAUyJ,eAAexJ,KAAKwM,EAAGjD,IAAMjN,EAAEvH,QAAQwU,GAAK,IAC9EkD,EAAElD,GAAKiD,EAAEjD,GACb,IAAS,MAALiD,GAAqD,kBAAjCrR,QAAOuR,sBAC3B,IAAK,GAAI3V,GAAI,EAAGwS,EAAIpO,OAAOuR,sBAAsBF,GAAIzV,EAAIwS,EAAEvS,OAAQD,IAASuF,EAAEvH,QAAQwU,EAAExS,IAAM,IAC1F0V,EAAElD,EAAExS,IAAMyV,EAAEjD,EAAExS,IACtB,OAAO0V,IA4BPsO,GAAyB,SAAUvQ,GAKnC,QAASuQ,GAAQ7iB,EAASsE,GACtB,GAAI8V,GAAQ9H,EAAOxK,KAAK0J,KAAMxR,EAASsE,IAAYkN,IAOnD,OALA4I,GAAM6F,YAAc,aAEpB7F,EAAMnF,gBAENmF,EAAMpD,oBAAqB,EACpBoD,EAwgCX,MAphCAnJ,IAAU4R,EAASvQ,GAcnBuQ,EAAQhb,UAAUib,UAAY,WAC1B,GAAI1I,GAAQ5I,IACZA,MAAK8K,SAAWA,aAChB9K,KAAKgL,QJpEK,QIoEWra,QAASqP,KAAK8K,SAAW,KAAO9K,MAAQ,WACzD4I,EAAM2I,sBACN3I,EAAM4I,eACN5I,EAAM6I,YACN7I,EAAM8I,aACN9I,EAAM+I,gBAGdN,EAAQhb,UAAUub,OAAS,WACvBxO,GAAWC,WAAa,KACxBD,GAAWkJ,kBAAoB,KAC/BlJ,GAAWyO,cAAgB,KAC3B7R,KAAK8R,yBACL9R,KAAK+R,cACL/R,KAAKwK,WAAa9L,GAAcsB,KAAKrB,OACrCqB,KAAKgS,eACLhS,KAAKiS,YAAYjS,KAAKkS,cAAe,QAAS,KAAM,MAC/CziB,oBAAkB2T,GAAWC,cAC9BD,GAAWkJ,kBAAoBlJ,GAAWC,YAE9CrD,KAAKmS,sBAITd,EAAQhb,UAAU8b,mBAAqB,WACnC,GACIC,GACAC,EACAC,EACAC,EAJA3J,EAAQ5I,IAKRA,MAAKwS,qBAAsBC,gBAC3BL,EAAapS,KAAKwS,WAClBH,EAAcrS,KAAK0S,gBAAiBC,SAAQ3S,KAAK0S,MAAQ,GAAIC,SAC3CP,EAAWQ,aAAaP,GAC9BQ,KAAK,SAAUjgB,GACvBgW,EAAM4J,WAAa5f,EAAU,OAC7BgW,EAAMkK,2BAGL9S,KAAKwS,qBAAsBhQ,KAChC+P,EAAYvS,KAAKwS,YACjBF,EAAa,GAAIS,QAAKR,EAAU3P,YAAa2P,EAAU3kB,KAAM2kB,EAAU9P,MAAO8P,EAAU7P,cAC7EsQ,UAAY,SAAUC,GAC7BrK,EAAM4J,WAAaU,KAAKC,MAAM,IAAMF,EAAO,KAAK,GAChDrK,EAAMkK,yBAEVR,EAAWc,KAAKb,EAAU5P,WAG1B3C,KAAK8S,yBAGbzB,EAAQhb,UAAUyc,sBAAwB,WACtC9S,KAAKqT,iBACDrT,KAAKtC,qBAAuBsC,KAAK4D,eAAe0P,SAChDtT,KAAKtC,oBAAoB6V,eAE7BvT,KAAK7N,OAAO+Q,qBACZlD,KAAKlN,QAAQ9G,YAAYgU,KAAKuL,WAC9BvL,KAAKwT,gBACLxT,KAAKgL,QJ3HO,UI2HWra,QAASqP,KAAK8K,SAAW,KAAO9K,OACvDA,KAAKyT,kBAETpC,EAAQhb,UAAUob,UAAY,WAC1B,GAAIzR,KAAKuL,UAAW,CAChB,KAAOvL,KAAKuL,UAAU7R,WAAWpM,OAAS,GACtC0S,KAAKuL,UAAUlX,YAAY2L,KAAKuL,UAAUmI,aAEzC1T,KAAKuL,UAAUoI,iBAAmB3T,KAAKuL,UAAUnX,YAClDwF,SAAOoG,KAAKuL,WAGhBvL,KAAKhP,iBAAiB0Z,eACtBkJ,sBAAoB5T,KAAKlN,QAAQhH,GAAK,iBAAkB,gBAE5D,KAAK,GAAIuB,GAAI,EAAGA,EAAI2S,KAAK/O,OAAO3D,OAAQD,IAChC2S,KAAK/O,OAAO5D,GAAGsd,gBACfiJ,sBAAoB5T,KAAKlN,QAAQhH,GAAK,kBAAmB,iBAGjE,IAAI+nB,GAAiB7T,KAAKlN,QAAQ/F,YAC9B+mB,EAAkB9T,KAAKlN,QAAQ9F,YACnCgT,MAAK2O,cAAgB,GAAI7hB,IAAK7B,EAAe+U,KAAK5S,MAAOymB,IAAmBA,GAAkB,IAAK5oB,EAAe+U,KAAKjS,OAAQ+lB,IAAoBA,GAAmB,KACtK9T,KAAKuL,UAAYvL,KAAK9R,SAASujB,WAC3B3lB,GAAIkU,KAAKlN,QAAQhH,GAAK,OACtBsB,MAAO4S,KAAK2O,cAAcvhB,MAC1BW,OAAQiS,KAAK2O,cAAc5gB,UAMnCsjB,EAAQhb,UAAUkb,oBAAsB,WACpC,GAAwB,KAApBvR,KAAKlN,QAAQhH,GAAW,CACxB,GAAIgR,GAAanR,SAAS2R,uBAAuB,aAAahQ,MAC9D0S,MAAKlN,QAAQhH,GAAK,mBAAqBgR,EAE3CkD,KAAK9R,SAAW,GAAIsB,eAAYwQ,KAAKlN,QAAQhH,IAC7CkU,KAAK7N,OAAS,GAAI8Q,IAAYjD,OAElCqR,EAAQhb,UAAUyb,uBAAyB,WACvC,GAAIxI,GAAe3d,SAASC,eAAeoU,KAAKlN,QAAQhH,GAAK,qBAI7D,IAHIwd,GAAgBA,EAAayK,kBAAoB,GACjDzK,EAAalV,WAAWC,YAAYiV,GAEpC7Z,oBAAkB9D,SAASC,eAAeoU,KAAKlN,QAAQhH,GAAK,uBAAwB,CACpF,GAAIkoB,GAAmBnoB,gBAAc,OACjCC,GAAIkU,KAAKlN,QAAQhH,GAAK,qBACtBmH,OAAQ,iCAEZ+M,MAAKlN,QAAQ9G,YAAYgoB,KAGjC3C,EAAQhb,UAAUmd,cAAgB,WAC1BxT,KAAKtC,qBAAuBsC,KAAK4D,eAAe0P,SAAWtT,KAAKtC,oBAAoBuW,aAAejU,KAAK7N,OAAOoX,aAC/GvJ,KAAKuL,UAAU2I,aAAalU,KAAK7N,OAAOoX,YAAavJ,KAAKtC,oBAAoBuW,cAOtF5C,EAAQhb,UAAU2b,aAAe,WAC7B,GAAI5kB,GAAQ4S,KAAKmC,OAAO/U,MACpB+mB,EAAgBnU,KAAKuL,UAAU7Y,cAAc,IAAMsN,KAAKlN,QAAQhH,GAAK,kBACzE,KAAKkU,KAAKmC,OAAO/U,MAAQ,GAAM4S,KAAKoU,YAAcpU,KAAKwK,WAAW3L,kBAAqBpP,oBAAkB0kB,GAAgB,CACrH,GAAIE,GAAa,GAAInS,IAAWlC,KAAKlN,QAAQhH,GAAK,kBAAmBkU,KAAKoU,YAAcpU,KAAKwK,WAAW3L,gBAAiBmB,KAAKmC,OAAQ,EAAG,GAAIF,IAAK7U,EAAQ,EAAGA,EAAQ,EAAG4S,KAAK2O,cAAcvhB,MAAQA,EAAO4S,KAAK2O,cAAc5gB,OAASX,GACtO4S,MAAKuL,UAAUvf,YAAYgU,KAAK9R,SAASomB,cAAcD,QAElDF,IACLA,EAActa,aAAa,OAAQmG,KAAKoU,YAAcpU,KAAKwK,WAAW3L,kBAG9EwS,EAAQhb,UAAU4b,YAAc,SAAUsC,EAAO3mB,EAAM4mB,EAAQC,GAC3D,GACI1mB,GADA7B,EAAQqoB,EAAMrL,UAGd9b,EAAS4S,KAAK2O,cAAcvhB,MAAQ4S,KAAK0U,OAAOC,MAAQ3U,KAAK0U,OAAO/nB,IAGxE,IAFA4nB,EAAMrL,UAAU1c,WAAawT,KAAKwK,WAAWhe,YAAc+nB,EAAMrL,UAAU1c,WAC3E+nB,EAAMrL,UAAU7c,KAAO2T,KAAKwK,WAAWpe,UAAYmoB,EAAMrL,UAAU7c,KAC/DkoB,EAAM/oB,KAAM,CACRiE,oBAAkBglB,KAClBA,EAAWzU,KAAK9R,SAASsb,aAAc1d,GAAIkU,KAAKlN,QAAQhH,GAAK,iBAEjE,IAAI8oB,GAAe3nB,EAASG,EAAOmnB,EAAM/oB,KAAMU,GAC3C2oB,EAActpB,EAAYqpB,EAAc1oB,GAExC4oB,EAAatnB,EADLiC,oBAAkB+kB,GAAW,GAAIvS,IAAKjC,KAAK0U,OAAO/nB,KAAMqT,KAAK0U,OAAOhoB,IAAKsT,KAAK2O,cAAcvhB,MAAO4S,KAAK2O,cAAc5gB,QAAUymB,EACxGD,EAAM7mB,UAAWmnB,EAAajnB,GAC9DY,EAAU,GAAI+T,IAAWvC,KAAKlN,QAAQhH,GAAK,YAAc8B,EAAMknB,EAAWjnB,EAAGinB,EAAWhnB,EAAG,QAAS8mB,GACpGG,EAAc,GAAI9S,IAAK6S,EAAWjnB,EAAGinB,EAAWhnB,EAAG+mB,EAAYznB,MAAOynB,EAAY9mB,QAClF+E,EAAUvE,EAAkBC,EAAStC,EAAOA,EAAMuC,QAAmB,UAATb,EAAmBoS,KAAKwK,WAAW1L,eAAiBkB,KAAKwK,WAAWzL,mBAAoB0V,EACxJ3hB,GAAQ+G,aAAa,aAAc0a,EAAMS,aAAeT,EAAM/oB,MAC9DsH,EAAQ+G,aAAa,YAAamG,KAAKqL,UAAqB,UAATzd,EAAmB,EAAI,IAAIyF,aAChE,UAATzF,IAAqB2mB,EAAMU,iBAAiBzpB,MAAmB,aAAToC,KACvDG,EAAUiS,KAAK2O,cAAc5gB,OAASgnB,EAAYjnB,EAlBvC,GAkB0DkS,KAAK0U,OAAOQ,OACjFlV,KAAKtM,SAAW,GAAIuO,IAAKjC,KAAK0U,OAAO/nB,KAAMooB,EAAYjnB,EAnB5C,GAmB8DV,EAAOW,IAEvE,aAATH,GAAuB2mB,EAAMU,iBAAiBzpB,KAC9CwU,KAAKiS,YAAYsC,EAAMU,iBAAkB,WAAYF,EAAaN,GAGlEzU,KAAKuL,UAAUvf,YAAYyoB,OAI/B1mB,GAAUiS,KAAK2O,cAAc5gB,OAASiS,KAAK0U,OAAOhoB,IAAMsT,KAAK0U,OAAOQ,OACpElV,KAAKtM,SAAW,GAAIuO,IAAKjC,KAAK0U,OAAO/nB,KAAMqT,KAAK0U,OAAOhoB,IAAKU,EAAOW,IAG3EsjB,EAAQhb,UAAUgd,eAAiB,WAC/B,GACIziB,GADAgY,EAAQ5I,IAGZ,IADAA,KAAKwS,WAAaxS,KAAKwS,YAClB/iB,oBAAkBuQ,KAAKwS,aAAexS,KAAKwS,WAAWllB,OAAS,GAAK0S,KAAK5O,gBAAiB,CAQ3F,GAPAgS,GAAWC,cACXrD,KAAKwS,WAAW2C,IAAI,SAAU7jB,GAC1BA,EAAKsX,EAAMxX,iBAAoBE,EAAKsX,EAAMxX,iBAAoBE,EAAKsX,EAAMxX,iBAAiBiC,WACtF/B,EAAKsX,EAAMxX,mBAEnB4O,KAAKhP,iBAAiBG,UAAY6O,KAAKhP,iBAAiBG,WAAa6O,KAAK5O,gBAC1E4O,KAAKoV,0BACsB,IAAvBpV,KAAK/O,OAAO3D,OAAc,CAC1B,GAAI+nB,GAAS,GAAI5jB,OACjB4jB,GAAc,MAAI,EAClBzkB,EAAOoP,KAAKhP,iBAAiBG,UAC7BkkB,EAAOzkB,KACP,KAASvD,EAAI,EAAGA,EAAI2S,KAAKwS,WAAWllB,OAAQD,IAAK,CAC7C,GAAI+W,GAAQ/S,EAAa2O,KAAKwS,WAAWnlB,IAAY,MACjD2S,MAAKwF,oBAAsBpB,GAASA,EAAM9W,OAAS,EACnD8W,EAAMiB,QAAQ,SAAUiQ,EAAaC,GAC7BD,EAAY1kB,IACZykB,EAAOzkB,GAAMmB,MACTwR,WAAY,EAAGzS,KAAMwkB,EAAY1kB,GAAO4kB,eAAgBF,EAAY1kB,GAAMyC,WAC1E/B,KAAMgkB,EAAaG,OAAQH,EAAY1M,EAAMxX,qBAMrD4O,KAAKwS,WAAWnlB,GAAGuD,IACnBykB,EAAOzkB,GAAMmB,MACTwR,WAAY,EAAGzS,KAAMkP,KAAKwS,WAAWnlB,GAAGuD,GAAO4kB,eAAgBxV,KAAKwS,WAAWnlB,GAAGuD,GAAMyC,WAAY/B,KAAM0O,KAAKwS,WAAWnlB,GAC1HooB,OAAQzV,KAAKwS,WAAWnlB,GAAG2S,KAAK5O,mBAKhDgS,GAAWC,WAAWtR,KAAKsjB,OAE1B,CACD,GAAIrV,KAAKwF,mBAAoB,CACzBpC,GAAWyO,iBACXzO,GAAWyO,cAAgBlO,YAAW3D,KAAKwS,WAAYpP,GAAWyO,eAAe,EACjF,KAAK,GAAIxkB,GAAI,EAAGA,EAAI+V,GAAWyO,cAAcvkB,OAAQD,IACjD2S,KAAK0V,wBAAwBtS,GAAWyO,cAAcxkB,GAAIA,EAE9D+V,IAAWC,WAAaD,GAAWyO,kBAGnC7R,MAAK2V,sBACDvS,GAAWC,WAAW/V,OAAS,GAC/B0S,KAAK4V,iBAAiBxS,GAAWC,WAAW/V,OAAS,EAG7DsD,GAAOoP,KAAK/O,OAAO,GAAGC,UAErB8O,KAAKwF,oBACNxF,KAAK6V,gBAAgBzS,GAAWC,WAAW,GAAGzS,GAAO,YAIjEygB,EAAQhb,UAAU+e,wBAA0B,WACxC,GAAIhR,EACJpE,MAAKwS,WAAaxS,KAAKwS,UACvB,KAAK,GAAInlB,GAAI,EAAGA,EAAI2S,KAAKwS,WAAWllB,OAAQD,IAAK,CAE7C,IADA+W,EAAQ/S,EAAa2O,KAAKwS,WAAWnlB,IAAY,SACpC+W,EAAM9W,OAAQ,CACvB0S,KAAKwF,oBAAqB,CAC1B,OAEKnY,IAAM2S,KAAKwS,WAAWllB,OAAS,IACpC0S,KAAKwF,oBAAqB,KAItC6L,EAAQhb,UAAUqf,wBAA0B,SAAUpkB,EAAM2L,GACxD,GACI6Y,GAGAC,EAIA7b,EARA0O,EAAQ5I,KAGRmE,EAAU,GAAI1S,QAEdb,EAAOoP,KAAKhP,iBAAiBG,UAAY6O,KAAKhP,iBAAiBG,UAAY6O,KAAK5O,eAMpF,IAFA+S,EAAU9S,EAAaC,IACvBwkB,EAAY3R,EAAUA,EAAgB,OAAI,OACzB2R,EAAUxoB,OAAS,EAAG,CACnC4M,EAAMiK,EAAa,GACnB,KAAK,GAAI9W,GAAI,EAAGA,EAAI2S,KAAK/O,OAAO3D,OAAQD,IAChC6M,IAAQ8F,KAAK/O,OAAO5D,GAAG6D,YACf8O,KAAK/O,OAAO5D,GACpB0oB,EAAa1oB,EAGrB,KAAK,GAAI2E,GAAI,EAAGA,EAAI8jB,EAAUxoB,OAAQ0E,IAAK,CACvC8jB,EAAU9jB,GAAS,KAAI8jB,EAAU9jB,GAAGpB,GACpCklB,EAAU9jB,GAAmB,gBAAoB,IAAf+jB,EAAmBD,EAAU9jB,GAAS,KACpEV,EAAqB,eAAI,IAAMwkB,EAAU9jB,GAAS,MAAK,EAC3D,IAAIgkB,GAAiBF,EAAU9jB,GAAmB,eAC9CikB,MAAa,EACbD,GAAermB,OAAO,KAAO,IAC7BsmB,EAAaD,EAAenmB,MAAM,KAAKvC,OAAS,GAEpDwoB,EAAU9jB,GAAe,WAAIvC,oBAAkBsmB,GAAcE,IAAejW,KAAK/O,OAAO3D,OAClF0S,KAAK/O,OAAO3D,OAAS2oB,EAAaF,EACrB,IAAfA,IACAD,EAAU9jB,GAAW,OAAIV,GAE7BwkB,EAAU9jB,GAAc,UAAIkI,EAC5B4b,EAAU9jB,GAAS,KAAI8jB,EAAU9jB,GACjC8jB,EAAU9jB,GAAc,WAAI,EAC5B8jB,EAAU9jB,GAAW,OAAI8jB,EAAU9jB,GAAGgO,KAAK5O,iBAE/C0kB,EAAUzQ,QAAQ,SAAUiQ,GACxB1M,EAAM8M,wBAAwBJ,EAAarY,KAGnD,GAAIA,IAAcmG,GAAWyO,cAAcvkB,OAAS,EAAG,CAEnD,IAAK,GADD4oB,GAAa9S,GAAWyO,cAAc,GAAG7R,KAAK/O,OAAO,GAAGC,WACnDgM,EAAI,EAAGA,EAAIkG,GAAWyO,cAAcvkB,OAAQ4P,IACjD4Y,EAAYzkB,EAAa+R,GAAWyO,cAAc3U,IAAY,OACpD,IAANA,GAAW4Y,IACXA,EAAUzQ,QAAQ,SAAUiQ,GAAeY,EAAWnkB,KAAKujB,KAC3DlS,GAAWyO,cAActJ,OAAOrL,EAAG,GACnCA,GAAK,EAGbgZ,GAAa9S,GAAWyO,cAAc,GAAG7R,KAAK/O,OAAO,GAAGC,UACxD,KAAK,GAAIilB,GAAI,EAAGA,EAAID,EAAW5oB,OAAQ6oB,IACnChS,EAAQnE,KAAK/O,OAAO,GAAGC,WAAaglB,EACpCA,EAAWC,GAAW,OAAIhS,IAOtCkN,EAAQhb,UAAUkX,MAAQ,SAAUzhB,GACd,GAAIuhB,IAAYrN,MACtBuN,MAAMzhB,IAOtBulB,EAAQhb,UAAUkY,OAAS,SAAU3gB,EAAM4gB,EAAUC,GACjC,GAAIpB,IAAYrN,MACtBuO,OAAO3gB,EAAM4gB,EAAUC,IAGrC4C,EAAQhb,UAAUsf,oBAAsB,WACpC3V,KAAKwS,WAAaxS,KAAKwS,UAIvB,KACK,GAJDthB,GAEAklB,KAEK/oB,EAAI,EAAGA,EAAI2S,KAAK/O,OAAO3D,OAAS,EAAGD,IAAK,CAC7C6D,EAAY8O,KAAK/O,OAAO5D,GAAK2S,KAAK/O,OAAO5D,GAAG6D,UAAY8O,KAAKhP,iBAAiBG,SAC9E,IAAIklB,GAAQ,GAAI5kB,OAChB4kB,GAAa,MAAIhpB,EACjBgpB,EAAMnlB,MACNkS,GAAWC,WAAWtR,KAAKskB,EAC3B,KAAK,GAAIrkB,GAAI,EAAGA,EAAIgO,KAAKwS,WAAWllB,OAAQ0E,IAAK,CAC7C,GAAIsjB,MACAgB,EAAY,EAChB,IAAItW,KAAKwS,WAAWxgB,GAAGd,GAAY,CAC/B,GAAIqlB,GAASvW,KAAKwS,WAAWxgB,GAAGd,EAChC,IAAU,IAAN7D,EACA,IAAK,GAAI6P,GAAI,EAAGA,GAAK7P,EAAG6P,IAAK,CACzB,GAAIsZ,GAAmBxW,KAAK/O,OAAOiM,GAAK8C,KAAK/O,OAAOiM,GAAGhM,UAAYA,CACnEolB,IAActW,KAAKwS,WAAWxgB,GAAGwkB,IAAuBtZ,IAAM7P,EAAK,GAAK,KAG1E+oB,EAAW9oB,OAAS,IACG,IADC8oB,EAAW/qB,QAAQirB,GACjCC,KACZjB,EAAkB,KAAIiB,EACtBjB,EAA4B,gBAAK,GAA0BiB,GAAU,GACrEjB,EAAwB,WAAIjoB,EAC5BioB,EAAuB,WAAI,EAC3BA,EAAuB,UAAIpkB,EAC3BokB,EAAkB,KAAItV,KAAKwS,WAAWxgB,GACtCoR,GAAWC,WAAWD,GAAWC,WAAW/V,OAAS,GAAG4D,GAAWa,KAAKujB,GACxEc,EAAWrkB,KAAK,GAA0BwkB,QAM9DlF,EAAQhb,UAAUuf,iBAAmB,SAAUa,GAM3C,IAAK,GALDC,GACAC,EAAc3W,KAAK/O,OAAOwlB,GAASzW,KAAK/O,OAAOwlB,GAAOvlB,UAAY8O,KAAKhP,iBAAiBG,UACxFylB,EAAW5W,KAAK/O,OAAOwlB,EAAQ,GAAGvlB,UAClCokB,EAAclS,GAAWC,WAAWoT,GAAOE,GAC3CE,EAAezT,GAAWC,WAAWoT,EAAQ,GAAGG,GAC3CvpB,EAAI,EAAGA,EAAIioB,EAAYhoB,OAAQD,IAAK,CACzCqpB,EAAcpB,EAAYjoB,GAAmB,cAC7C,KAAK,GAAI2E,GAAI,EAAGA,EAAI6kB,EAAavpB,OAAQ0E,IAErC,GADA6kB,EAAa7kB,GAAG2kB,GAAelnB,oBAAkBonB,EAAa7kB,GAAG2kB,OAAqBE,EAAa7kB,GAAG2kB,IACtC,IAA5DD,EAAYrrB,QAAQwrB,EAAa7kB,GAAmB,gBAAW,CAC3DvC,oBAAkB6lB,EAAYjoB,GAAW,UACzCioB,EAAYjoB,GAAW,OAAIwpB,EAAa7kB,IAE5C6kB,EAAa7kB,GAAG2kB,GAAa5kB,KAAKujB,EAAYjoB,GAC9C,QAIZ2S,KAAK6V,gBAAgBzS,GAAWC,WAAWD,GAAWC,WAAW/V,OAAS,GAAGqpB,GAAc,SAC3FvT,GAAWC,WAAWkF,OAAOkO,EAAO,GAC/BA,EAAQ,EAAK,GACdzW,KAAK4V,iBAAiBa,EAAQ,IAGtCpF,EAAQhb,UAAUwf,gBAAkB,SAAUnlB,EAAa9C,GAyBvD,IAAK,GAvBDwX,GAIAvV,EACA2T,EANAoF,EAAQ5I,KAOR8W,EAAW,GAAIrlB,QAgBfoY,EAAS7J,KACJ3S,EAAI,EAAGA,EAAIqD,EAAYpD,OAAQD,KAhB1B,SAAUA,GACpB+X,EAAc,EACd5B,EAAY9S,EAAYrD,GAAc,UACtCwC,EAAQa,EAAYrD,GAAmB,eAAEwC,MAAM,KAC/Cga,EAAO2I,WAAWnN,QAAQ,SAAU/T,GAC5Bf,EAAeV,EAAOa,EAAYrD,GAAmB,eAAGiE,EAAMsX,KAC9DxD,GAAe2R,WAAWzlB,EAAKsX,EAAMxX,qBAGhC,WAATxD,IACAkpB,EAAStT,GAAa9S,EACtBA,EAAYrD,GAAW,OAAIypB,GAE/BpmB,EAAYrD,GAAW,OAAI+X,GAInB/X,IAMhBgkB,EAAQhb,UAAUmb,aAAe,WAC7BwF,eAAapd,OAAOoG,KAAKlN,QAAS,QAASkN,KAAKiX,gBAChDD,eAAapd,OAAOoG,KAAKlN,QAAS,WAAYkN,KAAKkX,sBACnDF,eAAapd,OAAOoG,KAAKlN,QAAS,cAAekN,KAAKmX,qBACtDH,eAAapd,OAAOoG,KAAKlN,QAAS+b,UAAQuI,gBAAiBpX,KAAKqX,oBAChEL,eAAapd,OAAOoG,KAAKlN,QAAS+b,UAAQyI,eAAgBtX,KAAKuX,oBAC/DP,eAAapd,OAAOoG,KAAKlN,QAAS+b,UAAQ2I,cAAexX,KAAKyX,mBAC9DT,eAAapd,OAAOoG,KAAKlN,QAAS,0BAA2BkN,KAAK0X,qBAClE5c,OAAO6c,oBAAoB,SAAU3X,KAAK4X,kBAK9CvG,EAAQhb,UAAUqb,WAAa,WAC3BsF,eAAa1G,IAAItQ,KAAKlN,QAAS,QAASkN,KAAKiX,eAAgBjX,MAC7DgX,eAAa1G,IAAItQ,KAAKlN,QAAS,WAAYkN,KAAKkX,qBAAsBlX,MACtEgX,eAAa1G,IAAItQ,KAAKlN,QAAS,cAAekN,KAAKmX,oBAAqBnX,MACxEgX,eAAa1G,IAAItQ,KAAKlN,QAAS+b,UAAQuI,gBAAiBpX,KAAKqX,mBAAoBrX,MACjFgX,eAAa1G,IAAItQ,KAAKlN,QAAS+b,UAAQyI,eAAgBtX,KAAKuX,mBAAoBvX,MAChFgX,eAAa1G,IAAItQ,KAAKlN,QAAS+b,UAAQ2I,cAAexX,KAAKyX,kBAAmBzX,MAC9EgX,eAAa1G,IAAItQ,KAAKlN,QAAS,0BAA2BkN,KAAK0X,oBAAqB1X,MACpFlF,OAAO+c,iBAAiB,SAAU7X,KAAK4X,gBAAgBE,KAAK9X,QAKhEqR,EAAQhb,UAAUsb,WAAa,WAC3B3R,KAAK3F,KAAO,GAAI0d,yBAKpB1G,EAAQhb,UAAU0b,YAAc,WAC5B/R,KAAKlN,QAAQ+G,aAAa,aAAcmG,KAAKgV,aAAe,mBAC5DhV,KAAKlN,QAAQ+G,aAAa,WAAYmG,KAAKqL,SAAShY,aAKxDge,EAAQhb,UAAUuhB,gBAAkB,SAAUhlB,GAC1C,GAAIgW,GAAQ5I,KACRiT,GACAniB,KJ1bQ,SI2bR8Z,QAAQ,EACRoN,aAAchY,KAAK2O,cACnBsJ,YAAa,GAAInrB,IAAK,EAAG,GACzB6D,QAASqP,KAAK8K,SAAW,KAAO9K,KAEhCA,MAAK6N,UACLqK,aAAalY,KAAK6N,UAElB7N,KAAKlN,QAAQ6G,UAAUwe,SAAS,eAChCnY,KAAK6N,SAAWuK,WAAW,WACvBxP,EAAM4I,eACN5I,EAAM6I,YACN7I,EAAMyP,YAAa,EACnBzP,EAAM8I,aACNuB,EAAKgF,YAAcrP,EAAM+F,cACzB/F,EAAMoC,QJ1cF,SI0ckBiI,EAAM,WACxBrK,EAAMgJ,YAEX,OAGXP,EAAQhb,UAAU4gB,eAAiB,SAAUrkB,GACzC,GAEI+V,GACA2P,EAFAC,EADY3lB,EAAEyN,OACOvU,GAGrB0sB,GAAc5N,QAAQ,EAAO9Z,KJnftB,QImfmCH,QAASqP,KAAMyY,WAAY7lB,GACrE8lB,GAAoB9N,QAAQ,EAAO9Z,KJpf5B,QIofyC2nB,WAAY7lB,EAEhE,IADAoN,KAAKgL,QJrfM,QIqfShL,KAAK8K,SAAW4N,EAAkBF,GAClDD,EAASltB,QAAQ,gBAAkB,EAAG,CAOtC,GANAuH,EAAE+lB,iBACFL,EAAYvB,WAAWwB,EAAS1oB,MAAM,KAAK,IAC3C8Y,GACIiC,QAAQ,EAAO9Z,KJpgBR,YIogByBH,QAASqP,KAAMpD,KAAMoD,KAAK7N,OAAOC,YAAYkmB,GAAYG,WAAY7lB,EACrG2Q,WAAYvD,KAAK7N,OAAOC,YAAYkmB,GAAuB,WAAG9U,UAAWxD,KAAK7N,OAAOC,YAAYkmB,GAAiB,MAElHtY,KAAK8K,SAAU,CACf,GAAIxZ,IACAiS,WAAYoF,EAAU/L,KAAiB,WACvC4G,UAAWmF,EAAU/L,KAAgB,UACrCgc,UAAWjQ,EAAU/L,KAAgB,UACrCgN,WAAYjB,EAAU/L,KAAiB,WACvCic,SAAUlQ,EAAU/L,KAAe,SACnC4Y,eAAgB7M,EAAU/L,KAAqB,eAC/C9L,KAAM6X,EAAU/L,KAAW,KAC3BpO,QAASma,EAAU/L,KAAc,QACjCrJ,KAAMoV,EAAU/L,KAAW,KAE/B+L,GAAU/L,KAAOtL,CACHqX,GAAUhY,OACxBgY,GADmD9F,GAAO8F,GAAY,YAG1E3I,KAAKgL,QJvhBM,YIuhBarC,GAE5B,GACImQ,GADAC,GAAM,GAAIC,OAAOC,iBAEhBxpB,qBAAkBuQ,KAAKkZ,gBACnBzpB,oBAAkBqpB,IAAoBC,EAAMD,EAAkB,KAC/D9Y,KAAKkX,qBAAqBtkB,GAE9BkmB,EAAkBC,IAG1B1H,EAAQhb,UAAU6gB,qBAAuB,SAAUtkB,GAC/C,GAAIumB,IAAoBvO,QAAQ,EAAO9Z,KJphBtB,cIohByCH,QAASqP,KAAMyY,WAAY7lB,GACjFwmB,GAA0BxO,QAAQ,EAAO9Z,KJrhB5B,cIqhB+C2nB,WAAY7lB,EAC5EoN,MAAKgL,QJthBY,cIshBShL,KAAK8K,SAAWsO,EAAwBD,IAGtE9H,EAAQhb,UAAU8gB,oBAAsB,SAAUvkB,GAC9C,GAAIymB,IAAmBzO,QAAQ,EAAO9Z,KJrhBtB,aIqhBwCH,QAASqP,KAAMyY,WAAY7lB,GAC/E0mB,GAAyB1O,QAAQ,EAAO9Z,KJthB5B,aIshB8C2nB,WAAY7lB,EAC1EoN,MAAKgL,QJvhBW,aIuhBShL,KAAK8K,SAAWwO,EAAuBD,IAGpEhI,EAAQhb,UAAUghB,mBAAqB,SAAUzkB,GACzCA,EAAEyN,OAAOvU,GAAGT,QAAQ,gBAAkB,IACtC2U,KAAKuZ,WAAY,GAErBvZ,KAAKwZ,OAAO3K,UAAQuI,gBAAiBxkB,IAEzCye,EAAQhb,UAAUkhB,mBAAqB,SAAU3kB,GAC7C,GAEI+V,GACA/L,EAFA2b,EADY3lB,EAAEyN,OACOvU,GAGrB2tB,GAAa7O,QAAQ,EAAO9Z,KJhiBjB,YIgiBkCH,QAASqP,KAAMyY,WAAY7lB,GACxE8mB,GAAmB9O,QAAQ,EAAO9Z,KJjiBvB,YIiiBwC2nB,WAAY7lB,EACnEoN,MAAKgL,QJliBU,YIkiBShL,KAAK8K,SAAW4O,EAAiBD,EACzD,IAAIrR,EACJ,IAAImQ,EAASltB,QAAQ,gBAAkB,EAAG,CAMtC,GALAuR,EAAOoD,KAAK7N,OAAOC,YAAY2kB,WAAWwB,EAAS1oB,MAAM,KAAK,KAC9DuY,EAAa/W,EAAauL,GAAc,OACxCoD,KAAKlN,QAAQ5G,MAAMytB,QAAW/c,EAAiB,YAAKwL,GAAcA,EAAW9a,OAAS,GAAK0S,KAAKnM,gBAC5F,UAAY,OAChB8U,GAAciC,QAAQ,EAAO9Z,KJ7jBnB,WI6jBmCH,QAASqP,KAAMpD,KAAMA,EAAM6b,WAAY7lB,GAChFoN,KAAK8K,SAAU,CACf,GAAIxZ,IACAsY,WAAYjB,EAAU/L,KAAiB,WACvC2G,WAAYoF,EAAU/L,KAAiB,WACvC4G,UAAWmF,EAAU/L,KAAgB,UACrCgc,UAAWjQ,EAAU/L,KAAgB,UACrCic,SAAUlQ,EAAU/L,KAAe,SACnC4Y,eAAgB7M,EAAU/L,KAAqB,eAC/C9L,KAAM6X,EAAU/L,KAAW,KAC3BrJ,KAAMoV,EAAU/L,KAAW,KAC3BpO,QAASma,EAAU/L,KAAc,QAErC+L,GAAU/L,KAAOtL,CACHqX,GAAUhY,OACxBgY,GADmD9F,GAAO8F,GAAY,YAG1E3I,KAAKgL,QJ9kBK,WI8kBarC,GAE3B3I,KAAKwZ,OAAO3K,UAAQyI,eAAgB1kB,IAExCye,EAAQhb,UAAUujB,4BAA8B,SAAUC,EAAWjd,GAOjE,IAAK,GALDkd,GACA5c,EACA1R,EAEAuuB,EADcnd,EAAqB,eACX/M,MAAM,KACzBmK,EAAK,EAAGggB,EAAKvoB,OAAOD,KAAKuoB,GAAY/f,EAAKggB,EAAG1sB,OAAQ0M,IAEtD+f,EADJ7c,EAAI8c,EAAGhgB,MACc6f,IACjBC,EAAaxuB,SAAS4R,EAAG,IACzB1R,EAAOquB,EAGf,QAASC,WAAYA,EAAYG,kBAAmBzuB,EAAMuuB,UAAWA,IAEzE1I,EAAQhb,UAAU6jB,iCAAmC,SAAUL,EAAWM,EAAkBvd,EAAMwd,GAS9F,IAAK,GALD5uB,GAEA6uB,EACAC,EAFAza,EAAI,EAGJ0a,EAAiBva,KAAK7N,OAAOC,YAAY,GAAmB,eAAEvC,MAAM,KAAKvC,OACpEktB,EAAI,EAAGA,EAAID,EAAgBC,IAChCF,EAAc,IAANE,EAAUL,EAA4B,UAAEK,GAAKF,EAAQ,IAAMH,EAA4B,UAAEK,EAErG3a,GAAI0a,EAAiB,EAAIA,EAAiB1a,CAC1C,KAAK,GAAI7F,GAAK,EAAGggB,EAAKvoB,OAAe,OAAEuO,KAAK7N,OAAOC,aAAc4H,EAAKggB,EAAG1sB,OAAQ0M,KAC7EqgB,EAAaL,EAAGhgB,IACgC,eAAEnK,MAAM,KACrC,KAAOsqB,EAA4B,UAAE,KACpD3uB,EAAa,IAANqU,EAAUpQ,oBAAkB6qB,GAASA,EAAQH,EAA4B,UAAEta,GAC9Eua,EAAcE,EAAQA,EAAQ,IAAMH,EAA4B,UAAEta,MACzDwa,EAA2B,iBACpCra,KAAKyD,aAAa1R,MAAOjB,KAAMupB,EAA2B,eAAG/oB,KAAM+oB,IAEnED,GAAc,IADdva,GAESjD,EAAiB,aAEtB0d,EADA9uB,EAAOA,EAAO,IAAM2uB,EAA4B,UAAEta,IAMlE,OAAOua,IAEX/I,EAAQhb,UAAUokB,uCAAyC,SAAUN,EAAkBvd,EAAMvP,GACzF,GAAIqtB,GACAC,EAAe,GAAIlpB,OAcvB,OAbQ0oB,GAA6B,WAAI,IAC/Bna,KAAKyD,aAAapW,GAAS,KAAc,aAC/CqtB,EAAkB1a,KAAKyD,aAAapW,GAAS,KAAU,QAC5B,WAAI,EAC/BstB,EAAaD,EAAgB1a,KAAKyD,aAAapW,GAAS,KAAa,aAC9DqtB,GAEP1a,KAAKyD,aAAa8E,OAAOlb,EAAG2S,KAAKyD,aAAanW,SAEzC6sB,EAA6B,aAAOna,KAAKyD,aAAanW,OAAS,GACjE6sB,EAA6B,aAAMvd,EAAiB,aACvD+d,EAAa/d,EAAgB,YAAMA,IAEhC+d,GAGXtJ,EAAQhb,UAAUohB,kBAAoB,SAAU7kB,GAC5C,GAGIuQ,GACAyX,EACAC,EAEArd,EAEAZ,EAGAkd,EAEAK,EACAW,EAfAlS,EAAQ5I,KACR+a,EAAYnoB,EAAEyN,OACdkY,EAAWwC,EAAUjvB,GAIrBsuB,GAAc,EAEdO,EAAe,GAAIlpB,QAGnBupB,EAAWhb,KAAKlN,QAAQhH,GAAK,YAAckU,KAAKsE,WAAa,UAE7D2W,EAAajb,KAAKlN,QAAQhH,GAAK,uBAGnC,IAAIysB,EAASltB,QAAQ,gBAAkB,GAAK2U,KAAKnM,kBAAoBmM,KAAKkb,eAAgB,CACtFtoB,EAAE+lB,iBACFnb,EAAQuZ,WAAWwB,EAAS1oB,MAAM,KAAK,IACvC+M,EAAOoD,KAAK7N,OAAOC,YAAYoL,EAC/B,IAAIqc,GAAYkB,EAAU9uB,SAQ1B,IAPI+T,KAAKiE,mBACLkW,EAAmBna,KAAK4Z,4BAA4BC,EAAWjd,GAC/Dkd,EAAaK,EAA6B,WACrCna,KAAK8J,gBAA8C,IAA7B+P,EAAUlqB,OAAO,SACxCyqB,EAAcpa,KAAKka,iCAAiCL,EAAWM,EAAkBvd,EAAMwd,KAGpE,IAAvBpa,KAAK/O,OAAO3D,SAAiBsP,EAAiB,YAAKvL,EAAauL,GAAc,QAC9EvL,EAAauL,GAAc,OAAEtP,OAAS,EAAG,CACzC,GAAI0S,KAAKyD,aAAanW,OAAS,EAAG,CAC9BsP,EAAOwd,EAAcpa,KAAKyD,aAAazD,KAAKyD,aAAanW,OAAS,GAAS,KAAIsP,CAC/E,KAAK,GAAIvP,GAAI,EAAGA,EAAI2S,KAAKyD,aAAanW,OAAQD,IAAK,CAC/C,IAAKoC,oBAAkBqqB,GAAa,CAChC,GAAIqB,GAAcnb,KAAKyD,aAAanW,MAEpC,IADAqtB,EAAe3a,KAAKya,uCAAuCN,EAAkBvd,EAAMvP,GAC/E8tB,IAAgBnb,KAAKyD,aAAanW,OAAQ,CAC1CD,GAAK,CACL,QAGR,GAAIuP,EAAqB,iBAAMoD,KAAKyD,aAAapW,GAAS,OAAM+sB,GAAe3qB,oBAAkBqqB,GAAa,CAC/E,IAAvBld,EAAiB,YAAWA,EAAa,OAAEA,EAAgB,oBAAclL,QACzEkL,EAAgB,WAAMA,EAAkB,UACnCA,EAAgB,UAIjB+d,EAAa/d,EAAgB,YAAMA,GAHnC+d,EAAe/d,EAAa,SAOhCA,EAAgB,WAAI,EACpBA,EAAa,OAAa,WAAI,EAC9BA,EAAOA,EAAa,OACpB+d,EAAa/d,EAAgB,YAAMA,IAEvCoD,KAAKyD,aAAa8E,OAAOlb,EAAG,GAC5BA,GAAK,CACL,OAEKA,IAAM2S,KAAKyD,aAAanW,OAAS,GAAKmC,oBAAkBqqB,KAC7Dld,EAAgB,WAAI,EACpB+d,EAAa/d,EAAgB,YAAMA,SAK3CA,GAAgB,WAAI,EACpB+d,EAAa/d,EAAgB,YAAMA,EAUvC,IARAge,GACIhQ,QAAQ,EAAO9Z,KJ5vBX,aI4vB6BH,QAASqP,KAAMpD,KAAM+d,EAAc7nB,QAASioB,EAC7ExX,WAAYvD,KAAKiE,kBAAiD,IAA7BjE,KAAKyD,aAAanW,SAAiBmC,oBAAkBqqB,GACtF9Z,KAAKyD,aAAazD,KAAKyD,aAAanW,OAAS,GAAS,KAAc,WAAIsP,EAAiB,WAC7F4G,UAAWxD,KAAKiE,kBAAiD,IAA7BjE,KAAKyD,aAAanW,SAAiBmC,oBAAkBqqB,GACrF9Z,KAAKyD,aAAazD,KAAKyD,aAAanW,OAAS,GAAS,KAAQ,KAAIsP,EAAW,KACjFwe,WAAwB,IAAZxoB,EAAEyoB,MAA4BjT,WAAY,MAEtDpI,KAAK8K,SAAU,CACD8P,EAAWjqB,OACzBiqB,GADoD/X,GAAO+X,GAAa,YAG5E5a,KAAKgL,QJvwBG,aIuwBiB4P,EAAY,SAAU3P,GAG3C,GAFArC,EAAM/E,aAAejH,EAAgB,WAAKnN,oBAAkBqqB,GAAcld,EAAiB,YACrFnN,oBAAkBqqB,IAAelR,EAAM3E,kBAAoBrH,EAAgB,UAAKkd,EAAa,MAC9F7O,EAAaL,OAAQ,CACtB,GAAIjf,SAASC,eAAeovB,GAAW,CACnC,GAAIM,GAAiB3vB,SAASC,eAAeovB,EAC7CM,GAAelnB,WAAWC,YAAYinB,GAsB1C,GApBAnY,EAAYQ,YAAWiF,EAAMlV,SAAUyP,GAAW,GAC9CyF,EAAMhF,eAAe0P,UAAY7jB,oBAAkBmZ,EAAMlL,uBACpDjO,oBAAkBkrB,KACnB/R,EAAMlL,oBAAoBuW,YAAYsH,YAAc,GACpD3S,EAAMlL,oBAAoBuW,YAAc,KACxCrL,EAAMlL,oBAAoB8d,eAAiB,EAC3C5S,EAAMlL,oBAAoB+d,gBAAkB,EACxC7S,EAAM3E,mBAAqBxU,oBAAkBqqB,GAC7ClR,EAAM8S,oBACF5qB,KAAM8X,EAAMnF,aAAamF,EAAMnF,aAAanW,OAAS,GAAS,KAAkB,eAChFgE,KAAMsX,EAAMnF,aAAamF,EAAMnF,aAAanW,OAAS,GAAS,MAIlEsb,EAAM8S,oBAAuB5qB,KAAM8L,EAAqB,eAAGtL,KAAMsL,GAErEgM,EAAMlL,oBAAoB6V,gBAE9BpQ,EAAa1T,oBAAkBmZ,EAAMzF,WAA+BA,EAAlByF,EAAMzF,WAExDxX,SAASC,eAAeqvB,GAAa,CACrC,GAAIU,GAAiBhwB,SAASC,eAAeqvB,EAC7CU,GAAevnB,WAAWC,YAAYsnB,GAErClsB,oBAAkBwb,EAAa7C,aAAgB6C,EAAaL,QAI7DhC,EAAMzW,OAAO2R,qBAAqB6W,EAAcxX,GAChDyF,EAAMzW,OAAO4R,kBAAkB4W,IAJ/B/R,EAAMzW,OAAOgW,gBAAgB8C,EAAa7C,eAQtDyS,GAAajQ,QAAQ,EAAO9Z,KJ3yBtB,WI2yBsCH,QAASqP,KAAM5N,YAAa4N,KAAK7N,OAAOC,aACpF0oB,GAAmBlQ,QAAQ,EAAO9Z,KJ5yB5B,WI4yB4CsB,YAAa4N,KAAK7N,OAAOC,aAC3E4N,KAAKgL,QJ7yBC,WI6yBiBhL,KAAK8K,SAAWgQ,EAAiBD,IAE/CT,GAAe3qB,oBAAkBqqB,IAClC9Z,KAAKyD,aAAa1R,MAAOjB,KAAM8L,EAAqB,eAAGtL,KAAMsL,KAK7EoD,KAAKuZ,WAAY,EACjBvZ,KAAKwZ,OAAO3K,UAAQ2I,cAAe5kB,IAEvCye,EAAQhb,UAAUqhB,oBAAsB,SAAU9kB,GAC1CoN,KAAK4b,sBACL5b,KAAK4b,qBAAqBC,gBAE1B7b,KAAKtC,qBACLsC,KAAKtC,oBAAoBoe,2BAE7BviB,EAAiB5N,SAAS2R,uBAAuB,oBAAqB,mBAAoB0C,MACtFA,KAAK+b,yBACLlf,EAAYmD,KAAK+b,uBAAuBC,yBAA0B,aAClEhc,KAAK+b,uBAAuBE,YAAc,KAQlD5K,EAAQhb,UAAU6lB,gBAAkB,WAChC,GAAIC,KAyBJ,OAxBInc,MAAKoc,gBAAgB9I,SACrB6I,EAAQpqB,MACJsqB,OAAQ,iBACRpJ,MAAOjT,QAGXA,KAAKsc,kBAAkBC,QACvBJ,EAAQpqB,MACJsqB,OAAQ,mBACRpJ,MAAOjT,QAGXA,KAAKwc,kBAAkBD,QACvBJ,EAAQpqB,MACJsqB,OAAQ,mBACRpJ,MAAOjT,QAGXA,KAAK4D,eAAe0P,SACpB6I,EAAQpqB,MACJsqB,OAAQ,gBACRpJ,MAAOjT,QAGRmc,GAMX9K,EAAQhb,UAAUomB,kBAAoB,SAAUC,EAASC,GAErD,IAAK,GADD/K,IAAS,EACJ5X,EAAK,EAAGggB,EAAKvoB,OAAOD,KAAKkrB,GAAU1iB,EAAKggB,EAAG1sB,OAAQ0M,IAExD,OADWggB,EAAGhgB,IAEV,IAAK,aACDgG,KAAKgS,cACL,MACJ,KAAK,SACL,IAAK,QACL,IAAK,aACL,IAAK,SACL,IAAK,gBACL,IAAK,kBACL,IAAK,mBACL,IAAK,iBACL,IAAK,aACDJ,GAAS,EAIjBA,IACA5R,KAAKyR,YACLzR,KAAK4R,WAMbP,EAAQhb,UAAUumB,cAAgB,WAC9B,MAAO,WAKXvL,EAAQhb,UAAUqa,QAAU,WACxB1Q,KAAKwR,eACL1Q,EAAOzK,UAAUqa,QAAQpa,KAAK0J,OAMlCqR,EAAQhb,UAAUwmB,eAAiB,WAC/B,MAAO,IAEX1c,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,YAAS,IAC/B8J,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,aAAU,IAChC8J,IACImB,aAAYT,KACbwQ,EAAQhb,UAAW,aAAU,IAChC8J,IACImB,aAAYJ,KACbmQ,EAAQhb,UAAW,aAAU,IAChC8J,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,iBAAc,IACpC8J,IACIa,WAAS,aACVqQ,EAAQhb,UAAW,YAAS,IAC/B8J,IACImB,aAAYC,KACb8P,EAAQhb,UAAW,oBAAiB,IACvC8J,IACIa,WAAS,eACVqQ,EAAQhb,UAAW,iBAAc,IACpC8J,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,iBAAc,IACpC8J,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,YAAS,IAC/B8J,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,sBAAmB,IACzC8J,IACIa,WAAS,KACVqQ,EAAQhb,UAAW,0BAAuB,IAC7C8J,IACIa,WAAS,KACVqQ,EAAQhb,UAAW,0BAAuB,IAC7C8J,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,qBAAkB,IACxC8J,IACIa,gBACDqQ,EAAQhb,UAAW,cAAW,IACjC8J,IACIa,WAAS,uBACVqQ,EAAQhb,UAAW,sBAAmB,IACzC8J,IACIa,YAAS,IACVqQ,EAAQhb,UAAW,sBAAmB,IACzC8J,IACIa,YAAS,IACVqQ,EAAQhb,UAAW,uBAAoB,IAC1C8J,IACIa,WAAS,QACVqQ,EAAQhb,UAAW,0BAAuB,IAC7C8J,IACIa,YAAS,IACVqQ,EAAQhb,UAAW,oBAAiB,IACvC8J,IACImB,aAAYI,KACb2P,EAAQhb,UAAW,uBAAoB,IAC1C8J,IACImB,aAAYK,KACb0P,EAAQhb,UAAW,uBAAoB,IAC1C8J,IACIyB,gBAAeI,KAChBqP,EAAQhb,UAAW,aAAU,IAChC8J,IACImB,aAAYS,KACbsP,EAAQhb,UAAW,wBAAqB,IAC3C8J,IACImB,aAAYQ,KACbuP,EAAQhb,UAAW,wBAAqB,IAC3C8J,IACImB,aAAYO,KACbwP,EAAQhb,UAAW,sBAAmB,IACzC8J,IACImB,aAAYG,KACb4P,EAAQhb,UAAW,qBAAkB,IACxC8J,IACIa,YAAS,IACVqQ,EAAQhb,UAAW,2BAAwB,IAC9C8J,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,kBAAe,IACrC8J,IACIa,WAAS,IACVqQ,EAAQhb,UAAW,eAAY,IAClC8J,IACIa,WAAS,OACVqQ,EAAQhb,UAAW,aAAU,IAChC8J,IACI2c,WACDzL,EAAQhb,UAAW,WAAQ,IAC9B8J,IACI2c,WACDzL,EAAQhb,UAAW,kBAAe,IACrC8J,IACI2c,WACDzL,EAAQhb,UAAW,aAAU,IAChC8J,IACI2c,WACDzL,EAAQhb,UAAW,oBAAiB,IACvC8J,IACI2c,WACDzL,EAAQhb,UAAW,iBAAc,IACpC8J,IACI2c,WACDzL,EAAQhb,UAAW,eAAY,IAClC8J,IACI2c,WACDzL,EAAQhb,UAAW,mBAAgB,IACtC8J,IACI2c,WACDzL,EAAQhb,UAAW,oBAAiB,IACvC8J,IACI2c,WACDzL,EAAQhb,UAAW,uBAAoB,IAC1C8J,IACI2c,WACDzL,EAAQhb,UAAW,gBAAa,IACnC8J,IACI2c,WACDzL,EAAQhb,UAAW,eAAY,IAClC8J,IACI2c,WACDzL,EAAQhb,UAAW,YAAS,IAC/B8J,IACI2c,WACDzL,EAAQhb,UAAW,kBAAe,IACrC8J,IACI2c,WACDzL,EAAQhb,UAAW,iBAAc,IACpC8J,IACI2c,WACDzL,EAAQhb,UAAW,gBAAa,IACnC8J,IACI2c,WACDzL,EAAQhb,UAAW,aAAU,IAChC8J,IACI2c,WACDzL,EAAQhb,UAAW,0BAAuB,IAC7C8J,IACI2c,WACDzL,EAAQhb,UAAW,sBAAmB,IACzCgb,EAAUlR,IACN4c,yBACD1L,IAEL2L,aAKE5Z,GAA4B,WAC5B,QAASA,MAET,MAAOA,MCvlCPP,GAAkC,SAAUC,EAAGlQ,GAC/C,GAAImQ,KACJ,KAAK,GAAIlD,KAAKiD,GAAOrR,OAAO4E,UAAUyJ,eAAexJ,KAAKwM,EAAGjD,IAAMjN,EAAEvH,QAAQwU,GAAK,IAC9EkD,EAAElD,GAAKiD,EAAEjD,GACb,IAAS,MAALiD,GAAqD,kBAAjCrR,QAAOuR,sBAC3B,IAAK,GAAI3V,GAAI,EAAGwS,EAAIpO,OAAOuR,sBAAsBF,GAAIzV,EAAIwS,EAAEvS,OAAQD,IAASuF,EAAEvH,QAAQwU,EAAExS,IAAM,IAC1F0V,EAAElD,EAAExS,IAAMyV,EAAEjD,EAAExS,IACtB,OAAO0V,IAUPka,GAA+B,WAC/B,QAASA,GAActsB,GACnBqP,KAAKkd,KAAO,EACZld,KAAKmd,iBAAmB,GAAIlb,IAAK,EAAG,EAAG,EAAG,GAC1CjC,KAAKod,YAAc,EACnBpd,KAAKyb,gBAAkB,EACvBzb,KAAKwb,eAAiB,EACtBxb,KAAKqd,aAAe,EACpBrd,KAAKsd,6BACLtd,KAAKud,eAAiB,GAAItb,IAAK,EAAG,EAAG,EAAG,GACxCjC,KAAKrP,QAAUA,EACfqP,KAAK6X,mBA67BT,MAx7BAoF,GAAc5mB,UAAUkd,aAAe,WACnC,GAAI3K,GAAQ5I,IACZA,MAAKwd,8BACLxd,KAAKrC,qBACLqC,KAAKyd,eACLzd,KAAK0d,cACL1d,KAAK2d,cAAgB,EACrB3d,KAAKwb,eAAiB,EACtBxb,KAAKyb,gBAAkB,EACvBzb,KAAK4d,YAAc5d,KAAKrP,QAAQzC,SAAS2vB,aACzC7d,KAAKrP,QAAQ4a,UAAUvf,YAAYgU,KAAK4d,YACxC,IAAIjV,EAKJ,IAJAA,GACIiC,QAAQ,EAAO9Z,KLyCE,kBKzCqBH,QAASqP,KAAKrP,QAASmtB,gBAAiB9d,KAAKrP,QAAQiT,eAAezX,SAC1GA,SAAU6T,KAAKrP,QAAQiT,eAAezX,UAEtC6T,KAAKrP,QAAQma,SAAU,CACTnC,EAAUhY,OACxBgY,GADmD9F,GAAO8F,GAAY,YAG1E3I,KAAKrP,QAAQqa,QLkCQ,kBKlCiBrC,EAAW,SAAUsC,GAClDA,EAAaL,QAAUK,EAAa6S,kBAAoBlV,EAAMjY,QAAQiT,eAAezX,WACtFyc,EAAMjY,QAAQiT,eAAezX,SAAW8e,EAAa6S,iBAEzDlV,EAAMmV,wBACFnV,EAAMjL,kBAAkBrQ,OAAS,GACjCsb,EAAMoV,gBAMlBf,EAAc5mB,UAAU0nB,sBAAwB,WAC5C,GAAInV,GAAQ5I,KACRrP,EAAUqP,KAAKrP,QACfstB,EAASttB,EAAQiT,cAMrB,IALA5D,KAAKke,4BAA4B9a,GAAWC,WAAW,KAClDrD,KAAKrP,QAAQgc,QAAQrf,OAAS,IAAMmC,oBAAkBuQ,KAAKrP,QAAQ+b,kBAC/B,IAAlC1M,KAAKrC,kBAAkBrQ,QAC1B0S,KAAKme,uBAAuB/a,GAAWC,WAAW,GAAI,UAEtDrD,KAAKrC,kBAAkBrQ,OAAS,EAAG,CACnC,GAEInB,GAAW8xB,EAAO9xB,SAClBiyB,EAAcH,EAAO1J,MAAM/oB,KAC3B6yB,EAAiBJ,EAAOK,WACxBC,EAAaN,EAAOpsB,KACpBgK,EAAS,EACTC,EAAS,EACT0iB,EAAQ,EACRC,EAAQ,EACR7iB,EAAcqiB,EAAOriB,YACrBD,EAAasiB,EAAOtiB,WACpB+iB,KACAlT,KACAmT,EAAwC,SAAvBV,EAAOxP,YAAyC,QAAbtiB,GAAmC,WAAbA,GACzD,SAAbA,GAAuBwE,EAAQge,cAAcvhB,OAASuD,EAAQge,cAAc5gB,OAC9E,aAAe,WAAckwB,EAAOxP,YAItCmQ,EAAeX,EAAO7wB,MAAME,OAAS,EAAM2wB,EAAO7wB,MAAM/B,QAAQ,MAAQ,EAAMsF,EAAQge,cAAcvhB,MAAQ,IAC1G2pB,WAAWkH,EAAO7wB,OAAS2pB,WAAWkH,EAAO7wB,OAAS,KACxDyxB,EAAgBZ,EAAOlwB,OAAOT,OAAS,EAAM2wB,EAAOlwB,OAAO1C,QAAQ,MAAQ,EAC1EsF,EAAQge,cAAc5gB,OAAS,IAAOgpB,WAAWkH,EAAOlwB,QAAUgpB,WAAWkH,EAAOlwB,QAAU,IACnGswB,GAAe7xB,WAAamE,EAAQ6Z,WAAWhe,YAAc6xB,EAAe7xB,WAC5E6xB,EAAehyB,KAAOsE,EAAQ6Z,WAAWlL,gBAAkB+e,EAAehyB,IAC1E,IAAIyyB,GAAkBvzB,EAAY6yB,EAAaC,GAC3CU,EAAW,EACXC,EAAW,EACXC,EAAehB,EAAOgB,YAGNhB,GAAO/U,UACRlJ,KAAKrC,kBAAkBrQ,MAG1C,IAFA2wB,EAAO/U,UAAU7c,KAAOsE,EAAQ6Z,WAAWlL,gBAAkB2e,EAAO/U,UAAU7c,KAC9E4xB,EAAO/U,UAAU1c,WAAamE,EAAQ6Z,WAAWhe,YAAcyxB,EAAO/U,UAAU1c,WAC7D,YAAf+xB,EAA0B,CAC1BK,EAAenvB,oBAAkBmvB,GAAgBjuB,EAAQ+C,SAAStG,MAAQwxB,EAC1EC,EAAgBpvB,oBAAkBovB,GAAiBluB,EAAQ+C,SAAS3F,OAAS8wB,CAE7E,KAAK,GADD7sB,GAAI,EACC3E,EAAI,EAAGA,EAAI2S,KAAKrC,kBAAkBrQ,OAAQD,IAAK,CACpD,GAAI6xB,GAAalf,KAAKrC,kBAAkBtQ,EACpCoC,qBAAkBuQ,KAAK0d,WAAW1d,KAAKkd,SACvCld,KAAK0d,WAAW1d,KAAKkd,OAAUiC,KAAOnf,KAAKkd,KAAO,EAAItb,eAE1D,IAAIwd,GAAiB7zB,EAAY2zB,EAAuB,WAAGjB,EAAO/U,UAElE,IADAlJ,KAAKqd,aAAe1pB,KAAKwT,IAAInH,KAAKqd,aAAc+B,EAAehyB,OACrD,IAANC,EACA0xB,EAAWljB,EA/BL,GA+B8BF,EAAa,EACjDqjB,EAAWljB,EA/BN,GA+B4BgjB,EAAgB/wB,QAAU6N,EAAcwjB,EAAerxB,OAAS6N,EAAc,EACxGwjB,EAAerxB,OAAS,OAE9B,CACD,GAAIsxB,GAAWD,EAAerxB,OAAS6N,EAAewjB,EAAerxB,OAAS6N,CAC9E,IAAsB,eAAlB+iB,EAAgC,CAChC,GAAIW,GAAiB9T,EAAaxZ,EAAI,GAAGnE,EAAI2d,EAAaxZ,EAAI,GAAG5E,MAtD/D,GAsDsFuO,CACxF,IAAK2jB,EAAgBL,EAAeG,EAAehyB,MAASwxB,EAAa,CACrE,GAAIW,IAAiB/T,EAAaxZ,EAAI,GAAGlE,EAAK4wB,EAAc1sB,EAAI,GAAGlE,EAAK8N,EAAc,EAClF4P,EAAaxZ,EAAI,GAAGlE,EAAK4wB,EAAc1sB,EAAI,GAAGlE,EAAK8N,EAAc,GAxCxE,EAyCQ2jB,GAAgBF,EAAWR,GAC5B7e,KAAKwf,iBACLxtB,EAAI,EACJ0sB,KACAlT,KACA3P,EAASkjB,EACTjjB,EAASkjB,IAGTnjB,EAAU6iB,EAAc,GAAK,EAC7B5iB,EAAUyjB,EAAiBF,EAAU,OAIzCxjB,GAAUyjB,EAAiB3jB,EAAa,EACxCG,EAAU4iB,EAAc1sB,EAAI,GAAIlE,MAGnC,CACD,GAAI2xB,GAAgBjU,EAAaxZ,EAAI,GAAGlE,EAAI4wB,EAAc1sB,EAAI,GAAGlE,EAAK8N,EAAc,EAChF4P,EAAaxZ,EAAI,GAAGlE,EAAI4wB,EAAc1sB,EAAI,GAAGlE,EAAK8N,EAAc,CACpE,IAAK6jB,EA9DJ,GA8DiCJ,EAAWR,EAAc,CACvD,GAAIa,GAAiBlU,EAAaxZ,EAAI,GAAGnE,EAAImS,KAAKqd,aAhFpD,EAiFOqC,GAAgBT,EAAeG,EAAehyB,MAASwxB,GACxD/iB,EAASkjB,EACTjjB,EAASkjB,EACTxT,KACAkT,KACA1e,KAAKwf,iBACLxtB,EAAI,IAGJ6J,EAAS6jB,EAAiB/jB,EAAa,EACvCG,EAAU4iB,EAAc,GAAK,OAIjC7iB,GAAS6iB,EAAc1sB,EAAI,GAAGnE,EAC9BiO,EAAS2jB,EA/EZ,GA+E0C7jB,EAAc,GAIjE4iB,EAAQ3iB,EAAUF,EAAa,EAAKsjB,EACpCR,EAAQ3iB,EAAUsjB,EAAerxB,OAAS,EAC1C2wB,EAAc3sB,MAAOlE,EAAGgO,EAAQ/N,EAAGgO,IACnC0P,EAAazZ,MAAOlE,EAAG2wB,EAAO1wB,EAAG2wB,EAAOrxB,MAAOgyB,EAAehyB,MAAOW,OAASqxB,EAAerxB,OAAS,IACtGiS,KAAK0d,WAAW1d,KAAKkd,MAAkB,WAAEnrB,MACrC4tB,YAAaT,EAAuB,WAAGpsB,QAASosB,EAA4B,gBAC5EU,OAAS/xB,EAAGgO,EAAQ/N,EAAGgO,GACvB+jB,MAAQhyB,EAAG2wB,EAAO1wB,EAAG2wB,GACrBqB,KAAMZ,EAAuB,WAC7Ba,KAAMb,EAAuB,WAC7Bjd,MACIpU,EAAG6wB,EAAc1sB,GAAGnE,EAAK8N,EAAa,EACtC7N,EAAI4wB,EAAc1sB,GAAGlE,EAAK8N,EAAc,EAAO6iB,EAAQW,EAAerxB,OACjE2wB,EAAc1sB,GAAGlE,EAAK8N,EAAc,EAAO6iB,EAAQW,EAAerxB,OACvEX,MAAOuG,KAAKC,IAAK8qB,EAAc1sB,GAAGnE,EAAK8N,EAAa,GAAO6iB,EAAQY,EAAehyB,QAClFW,OAAU6N,EAAcwjB,EAAerxB,OAAU6N,EAAcwjB,EAAerxB,UAGtFiE,IAEJ,GAAI8K,GAAakD,KAAK0d,WAAW,GAAe,UAChD5gB,GAAWuI,QAAQ,SAAU2a,EAAWxiB,GACpC,GAAIyiB,GAAa,GAAIhe,IAAK+d,EAAgB,KAAK,EAAGA,EAAgB,KAAK,EAAGA,EAAgB,KAAS,MAAGA,EAAgB,KAAU,OAClH,KAAVxiB,IACAuhB,EAAWkB,EAAWpyB,EACtBmxB,EAAWiB,EAAWnyB,GAE1B8a,EAAM4S,eAAiB7nB,KAAKwT,IAAIyB,EAAM4S,eAAgB7nB,KAAKC,IAAImrB,GAAYkB,EAAWpyB,EAAIoyB,EAAW7yB,SACrGwb,EAAM6S,gBAAkB9nB,KAAKwT,IAAIyB,EAAM6S,gBAAiB9nB,KAAKC,IAAIorB,GAAYiB,EAAWnyB,EAAImyB,EAAWlyB,YAE3G6wB,EAAgB5e,KAAKwb,eAAiBoD,EAAe5e,KAAKwb,eAAiBoD,EAC3EC,EAAiB7e,KAAKyb,gBAAkBoD,EAAgB7e,KAAKyb,gBAAkBoD,EAC/E7e,KAAKud,gBACD1vB,EAAGiP,EAAW,GAAS,KAAK,EAAGhP,EAAGgP,EAAW,GAAS,KAAK,EAC3D1P,MAAOwxB,EAAa7wB,OAAQ8wB,OAG/B,CACD,GACIqB,GACAC,EAFAC,EAAkBnC,EAAO/U,UAGzBmX,EAAiBrgB,KAAKrC,kBAAkBrQ,MAC5C4yB,GAAiC,eAAlBvB,EAAmClvB,oBAAkBmvB,GAAiBjuB,EAAQ+C,SAAStG,MAAQizB,EACzGzB,EAAcyB,EAAmB5wB,oBAAkBmvB,GAhJ1C,GAgJwEA,EACtFuB,EAAkC,eAAlBxB,EAAmClvB,oBAAkBovB,GAjJvD,GAiJsFA,EAC/FpvB,oBAAkBovB,GAAkBluB,EAAQ+C,SAAS3F,OAASsyB,EAAmBxB,EAAewB,EACrGtB,EAAW,EACXC,EAAWF,EAAgB/wB,OAjIjB,EAyIV,KAAK,GANDuyB,GAAYrC,EAAOxT,cACnB8V,EAAa,EACbC,EAAa,EACbC,EAAcxC,EAAOyC,iBACrBC,EAAgB,EAChBC,EAAe,EACVvzB,EAAI,EAAGA,EAAI2S,KAAKrC,kBAAkBrQ,OAAQD,IAAK,CACpD0xB,EAA8B,eAAlBJ,EAAmCI,EAAWmB,EAAenB,EACzEC,EAA8B,eAAlBL,EAAkCK,EAAYA,EAAWmB,CACrE,IAAIU,GAAa7gB,KAAKrC,kBAAkBtQ,GAAe,WACnDyzB,EAAe,GAAIh0B,IAAK,EAAG,EACX,UAAhB2zB,EACAK,EAAev1B,EAAYs1B,EAAYT,GAElB,SAAhBK,EAELK,EAAev1B,EADfs1B,EAAa5zB,EAA4B,eAAlB0xB,EAAiCuB,EAAcC,EAAeU,EAAYT,GAC1DA,GAGvCS,EAAa,GAEjBF,EAAgBhtB,KAAKwT,IAAIwZ,EAAeG,EAAa/yB,QACrD6yB,EAAejtB,KAAKwT,IAAIyZ,EAAcE,EAAa1zB,OAC/C0zB,EAAa1zB,MAAQ,GAAK0zB,EAAa/yB,OAAS,IAC1B,eAAlB4wB,GACAH,EAAQO,EAAYmB,EAAc,EAClCzB,EAAuB,UAAd6B,EAA0BtB,EAAWmB,EAAgBW,EAAa/yB,OAAS,EA3B5E,GA4BHixB,EA5BG,KA+BRR,EAAuB,UAAd8B,EAAyBvB,EAAY+B,EAAa1zB,MAAQ,EA/B3D,GAgCD2xB,EAAWmB,EAAcY,EAAa1zB,MAAQ,EAhC7C,GAiCRqxB,EAAQO,EAAYmB,EAAe,EAAMW,EAAa/yB,OAAS,IAG7D,IAANV,IACAkzB,EAAgC,eAAlB5B,EAAkCI,EAA0B,UAAduB,EACxD9B,EAASsC,EAAa1zB,MAAQ,EAAK2xB,EACvCyB,EAAgC,eAAlB7B,EAAiD,UAAd2B,EAAyBtB,EACtEP,EAASqC,EAAa/yB,OAAS,EAAKixB,GAExC3xB,IAAMgzB,EAAiB,IACvBzB,EAAiC,eAAlBD,EAAkChrB,KAAKC,IAAKmrB,EAAWmB,EAAeK,GAChFL,EAAcU,EA5CP,GA6CZ/B,EAAkC,eAAlBF,EAAmCwB,EAAgBQ,EAAgB,EA7CvE,GA8CRhtB,KAAKC,IAAKorB,EAAWmB,EAAgBK,IAE7CxgB,KAAKwd,2BAA2BzrB,MAC5BxC,KAAMyQ,KAAKrC,kBAAkBtQ,GAAe,WAAGQ,EAAGkxB,EAAUjxB,EAAGkxB,EAC/D5xB,MAAO8yB,EAAanyB,OAAQoyB,EAAcrtB,QAASkN,KAAKrC,kBAAkBtQ,GAAoB,gBAC9F7B,KAAMq1B,EAAYrC,MAAOA,EAAOC,MAAOA,EACvCsC,UAAWD,EAAa1zB,MAAO4zB,WAAYF,EAAa/yB,OACxDuD,KAAM0O,KAAKrC,kBAAkBtQ,GAAe,aAGpD2S,KAAKud,gBAAmB1vB,EAAG0yB,EAAYzyB,EAAG0yB,EAAYpzB,MAAOwxB,EAAa7wB,OAAQ8wB,MAI9F5B,EAAc5mB,UAAUmpB,eAAiB,WACrCxf,KAAKkd,OACDztB,oBAAkBuQ,KAAK0d,WAAW1d,KAAKkd,SACvCld,KAAK0d,WAAW1d,KAAKkd,OAAUiC,KAAOnf,KAAKkd,KAAO,EAAItb,iBAG9Dqb,EAAc5mB,UAAU6nB,4BAA8B,SAAU5sB,GAC5D,GAAI8S,GAAQ/S,EAAaC,GAAc,MACvC,IAAI8S,GAASA,EAAM9W,OAAS,IACxB0S,KAAKihB,qBAAqB7c,GACtBpE,KAAKrP,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,GAAID,GAAI,EAAGA,EAAI+W,EAAM9W,OAAQD,IAC9B2S,KAAKke,4BAA4B9Z,EAAM/W,KAKvD4vB,EAAc5mB,UAAU8nB,uBAAyB,SAAU7sB,EAAM1D,GAC7D,GAAIwW,GACA8c,CACJ,KAAKzxB,oBAAkBuQ,KAAKrP,QAAQ8S,eACS,IAArCzD,KAAKrP,QAAQ8S,aAAanW,SAAiBmC,oBAAkBuQ,KAAKrP,QAAQ2S,iBAAiBE,YACxF/T,oBAAkBuQ,KAAKrP,QAAQ+qB,oBAElC,IAAK,GADD9pB,GAAQP,EAAaC,GAAc,OAC9B4L,EAAI,EAAGA,EAAItL,EAAMtE,OAAQ4P,IAC9B,GAAItL,EAAMsL,GAAS,OAAM8C,KAAKrP,QAAQ2S,iBAAiBE,UAAW,CAC9D5R,EAAMsL,GAAc,WAAKtL,EAAMsL,GAAc,UAC7C5L,EAAOM,EAAMsL,GACb8C,KAAKrP,QAAQkT,aAAe7D,KAAKrP,QAAQ2S,iBAAiBC,WAC1D2d,EAAkBlhB,KAAKrP,QAAQgc,QAAQrf,OAAS,EAAI0S,KAAKrP,QAAQgc,QAAQzP,EAAI8C,KAAKrP,QAAQgc,QAAQrf,QAC9FsE,EAAMsL,GAAS,KAAE8C,KAAKrP,QAAQ+b,eAClC,OAKhB,GAAI1M,KAAKrP,QAAQkD,kBAAoBpE,oBAAkBuQ,KAAKrP,QAAQ+qB,oBAAqB,CACrF,GAAI1oB,GAAegN,KAAKrP,QAAQ+qB,kBAChCwF,GAAkBluB,EAAmB,KAAW,QAAQ,KAEpDoR,EADApR,EAAmB,KAAa,UACxB3B,EAAa2B,EAAmB,MAAW,OAI3C3B,EADY2B,EAAmB,KAAU,QACL,WAIhDoR,GAAQ/S,EAAaC,GAAc,MAEvC,IACI6vB,EACJ,IAAI/c,GAASA,EAAM9W,OAAS,EAAG,CAC3B,IAAK,GAAID,GAAI,EAAGA,EAAI+W,EAAM9W,OAAQD,KAC1BoC,oBAAkB2U,EAAM/W,GAAS,KAAE2S,KAAKrP,QAAQiT,eAAewd,kBAC/Dhd,EAAM/W,GAAS,KAAE2S,KAAKrP,QAAQiT,eAAewd,mBAC7CD,EAAa/c,EAAM/W,GAAS,KAAE2S,KAAKrP,QAAQiT,eAAeyd,WACtDjd,EAAM/W,GAAS,KAAE2S,KAAKrP,QAAQiT,eAAeyd,WAAajd,EAAM/W,GAAS,OAC/D2S,KAAKrP,QAAQiT,eAAe0d,uBACtCthB,KAAKuhB,iBAAiBvhB,KAAKrC,kBAAmBwjB,IAE9CnhB,KAAKrC,kBAAkB5L,MACnBovB,WAAYA,EACZK,WAAYxhB,KAAKrP,QAAQgc,QAAQrf,OAAS,EAAKmC,oBAAkBuQ,KAAKrP,QAAQkT,cACtD7D,KAAKrP,QAAQgc,QAAQtf,EAAI2S,KAAKrP,QAAQgc,QAAQrf,QAAhE4zB,EACF9c,EAAM/W,GAAS,KAAE2S,KAAKrP,QAAQ+b,gBAClC+U,cACA5I,SAAUzU,EAAM/W,GAAW,SAM3C,IADA2S,KAAKrC,kBAAkB4H,KAAKjM,GACxB0G,KAAKrP,QAAQgc,QAAQrf,OAAS,EAC9B,IAAK,GAAI0E,GAAI,EAAGA,EAAIgO,KAAKrC,kBAAkBrQ,OAAQ0E,IAC/CgO,KAAKrC,kBAAkB3L,GAAe,WAAKvC,oBAAkBuQ,KAAKrP,QAAQkT,cAClD7D,KAAKrP,QAAQgc,QAAQ3a,EAAIgO,KAAKrP,QAAQgc,QAAQrf,QAAhE4zB,IAMtBjE,EAAc5mB,UAAU4qB,qBAAuB,SAAU3vB,GACrD,GAAIowB,GACAnyB,EACAoH,EACA2e,EACAuL,EAEAjX,EAEA/T,EACA0N,EAGAzN,EAEA6rB,EACAC,EACAC,EACAC,EACAC,EACA9rB,EACA+rB,EAGAC,EACAC,EACAC,EAlBAC,GAAkB,EAGlBrxB,EAAOiP,KAAKrP,QAAQK,iBACpBC,EAAS+O,KAAKrP,QAAQM,OAEtB9E,EAAW6T,KAAKrP,QAAQiT,eAAezX,SAQvCk2B,GAAiB,EACjBC,EAAc,CAIlBtiB,MAAKuiB,iBAAmB,IACxB,KAAK,GAAIl1B,GAAI,EAAGA,EAAIiE,EAAKhE,OAAQD,IAAK,CAClCkC,EAAO,GACP0G,GAAe,EACf+rB,GAAU,EACVK,GAAiB,EACjB/M,EAAchkB,EAAKjE,GAAS,KAC5BkW,EAAajS,EAAKjE,GAAe,UAGjC,KAAK,GAAI2M,GAAK,EAAGwoB,EADjB3sB,GADA+T,EAA6C,IAA/B5J,KAAKrP,QAAQM,OAAO3D,QAAgBiW,IAAevD,KAAKrP,QAAQM,OAAO3D,QACzDyD,EAAK8E,aAAe5E,EAAOsS,GAAY1N,aACnBmE,EAAKwoB,EAAel1B,OAAQ0M,IAAM,CAC9E,GAAIpE,GAAW4sB,EAAexoB,EAuB9B,IAtBA2nB,EAAkB,KAClBhrB,EAAaO,OAAOoe,EAAYtV,KAAKrP,QAAQ8b,sBAC7C3W,EAAawf,EAAYtV,KAAKrP,QAAQ6b,qBACtC5W,EAAS1K,MAASuE,oBAAkBmG,EAAS1K,OAAqC0K,EAAS1K,MAArC0K,EAAS1K,MAAMmI,YAChE5D,oBAAkBmG,EAASO,QAAU1G,oBAAkBmG,EAASQ,KACjEO,GAAcf,EAASO,MAAQQ,GAAcf,EAASQ,IAAMR,EAAS6sB,YACrEL,GAAkB,EAClBJ,GAAU,EACVF,EAAclsB,EAASO,KAAO,MAAQP,EAASQ,GAC/CyqB,EAAcpxB,oBAAkBmG,EAASzI,OAA0ByI,EAASO,KAAO,MAAQP,EAASQ,GAAlDR,EAASzI,MAC3DoC,EAAOE,oBAAkBmG,EAASnH,OAASc,EAAOqG,EAASnH,MAC3DizB,EAAY1hB,KAAK0iB,mBAAmBZ,KAE9BryB,oBAAkBmG,EAAS1K,QAAU4K,IAAeF,EAAS1K,OAAS0K,EAAS6sB,aACrFL,GAAkB,EAClBnsB,GAAe,EACf6rB,EAAclsB,EAAS1K,MAAMmI,WAC7BwtB,EAAcpxB,oBAAkBmG,EAASzI,OAA0ByI,EAAS1K,MAAMmI,WAAhCuC,EAASzI,MAC3DoC,EAAOE,oBAAkBmG,EAASnH,OAASc,EACY,mBAAnDkC,OAAO4E,UAAUhD,SAASiD,KAAKV,EAASnH,OAA8BmH,EAASnH,MAAM,GAAKmH,EAASnH,MACvGizB,EAAY1hB,KAAK0iB,mBAAmBZ,IAEpCM,GAAmB3yB,oBAAkBmG,EAAS1K,QAAU0K,EAASa,YAAcb,EAASY,YAChD,gBAArCwJ,KAAKrP,QAAQiT,eAAe/R,KAAwB,CACvD,GAAI8wB,MACAC,MAAW,EAEf,IADAP,GAAiB,EACsC,mBAAnD5wB,OAAO4E,UAAUhD,SAASiD,KAAKV,EAASnH,OACxC,IAAK,GAAIo0B,GAAI,EAAGA,EAAIjtB,EAASnH,MAAMnB,OAAQu1B,IAAK,CAGxCC,GAAeC,WADDF,GADA,KAAOjtB,EAASnH,MAAMnB,OAAS,IACb,KACM+F,WAAY5E,MAAOmH,EAASnH,MAAMo0B,GAC5EF,GAAO5wB,KAAK+wB,OAGf,CACD,GAAIA,IAAeC,UAAW,KAAMt0B,MAAOc,GACvCyzB,GAAeD,UAAW,OAAQt0B,MAAOc,EAC7CozB,GAAO5wB,KAAK+wB,GACZH,EAAO5wB,KAAKixB,GAEhBpB,EAAkB,QAAbz1B,GAAmC,WAAbA,EAAwB,OAAS,KAC5D01B,EAAkB,QAAb11B,GAAmC,WAAbA,EAAwB,KAAO,OAC1Dy2B,GACI92B,GAAI,cAAgByX,EAAa,eAAiBvD,KAAK2d,cAAe9V,GAAI,KAAMD,GAAI,KAAMga,GAAIA,EAAIC,GAAIA,GAE1GF,EAAkB3hB,KAAKrP,QAAQzC,SAAS+0B,aAAa,iBAAkBL,EAAUD,GAAQjpB,WAAW,GAC7C,mBAAnDjI,OAAO4E,UAAUhD,SAASiD,KAAKV,EAASnH,SACxCkzB,EAAgBjoB,WAAW,GAAGG,aAAa,eAAgBjE,EAASY,WAAWnD,YAC/EsuB,EAAgBjoB,WAAW,GAAGG,aAAa,eAAgBjE,EAASa,WAAWpD,aAEnF2M,KAAK4d,YAAY5xB,YAAY21B,GAC7B3hB,KAAK2d,gBAEToE,IAAc/hB,KAAKrP,QAAQiT,eAAe0d,uBACtCthB,KAAKuhB,iBAAiBvhB,KAAKrC,kBAAmBkjB,GAC9Ca,GAAaA,EAAmB,SAAKU,IAAoBL,GACzDK,GAAkB,EAClB7yB,EAA4D,mBAAnDkC,OAAO4E,UAAUhD,SAASiD,KAAKV,EAASnH,QAAiCgB,oBAAkBkyB,IAC7FlyB,oBAAkBmG,EAAS1K,OAAS8U,KAAKkjB,oBAAoBttB,EAAU0sB,GAAe/yB,EAC7FyQ,KAAKrC,kBAAkB5L,MACnB+vB,YAAaA,EACbX,WAAYN,EAAYW,WAAYjyB,EAAMkyB,cAC1CE,gBAAkBlyB,oBAAkBkyB,GAAqClyB,oBAAkBmG,EAAS1K,OAC9F8U,KAAKmjB,qBAAuB,KADqBxB,EACf7wB,KAAMQ,EAAKjE,GAAS,KAC5D+B,QAAS4Q,KAAKrP,QAAQiT,eAAexU,QAAS+N,YAAa6C,KAAKrP,QAAQiT,eAAezB,OAAO1T,MAC9F2O,YAAa4C,KAAKrP,QAAQiT,eAAezB,OAAO/U,QAEpD4S,KAAKrC,kBAAkBqC,KAAKrC,kBAAkBrQ,OAAS,GAAe,WAAEyE,KAAKT,EAAKjE,IAClFi1B,KAEKF,IAAoBL,IACzBK,GAAkB,EAClBpiB,KAAKrC,kBAAkB+jB,EAAiB,OAAe,WAAE3vB,KAAKT,EAAKjE,KAElE20B,GAAYK,GAAmBpsB,GAC5BxG,oBAAkBmG,EAASO,OAAS1G,oBAAkBmG,EAASQ,KAC5D3G,oBAAkBmG,EAASY,aAC9B/G,oBAAkBmG,EAASa,aAAehH,oBAAkBmG,EAAS1K,SACpEuE,oBAAkBmG,EAASnH,SAC5BwzB,EAA+D,mBAAnDxwB,OAAO4E,UAAUhD,SAASiD,KAAKV,EAASnH,OAC9CmH,EAASnH,MAAM,GAAKmH,EAASnH,MACnCyzB,EAAezyB,oBAAkBmG,EAASzI,OAA0B,SAAjByI,EAASzI,MACxDsC,oBAAkBuQ,KAAKuiB,oBACvBviB,KAAKrC,kBAAkB5L,MACnB+vB,YAAaI,EAAaT,cAC1BN,WAAYe,EAAaV,WAAYS,IAEzCE,EAAaniB,KAAKrC,kBAAkBrQ,OACpC0S,KAAKuiB,iBAAmBviB,KAAKrC,kBAAkBwkB,EAAa,GAC5DG,KAEJtiB,KAAKrC,kBAAkBwkB,EAAa,GAAe,WAAEpwB,KAAKT,EAAKjE,QAMnF4vB,EAAc5mB,UAAUkrB,iBAAmB,SAAUvjB,EAAkBxS,GAEnE,IAAK,GADDu2B,IAAc,EACT10B,EAAI,EAAGA,EAAI2Q,EAAiB1Q,OAAQD,IACzC,GAAI2Q,EAAiB3Q,GAAe,aAAM7B,EAAM,CAC5Cu2B,GAAc,CACd,OAMR,MAAOA,IAEX9E,EAAc5mB,UAAUqsB,mBAAqB,SAAU7B,GACnD,GAAIuC,GACAC,CACJ,IAAsC,IAAlCrjB,KAAKrC,kBAAkBrQ,OACvB81B,GAAiB,MAGjB,KAAK,GAAIpxB,GAAI,EAAGA,EAAIgO,KAAKrC,kBAAkBrQ,OAAQ0E,IAAK,CACpD,GAAI6uB,IAAe7gB,KAAKrC,kBAAkB3L,GAAgB,YAAG,CACzDoxB,GAAiB,EACjBC,EAAYrxB,CACZ,OAEKA,IAAMgO,KAAKrC,kBAAkBrQ,OAAS,IAC3C81B,GAAiB,GAI7B,OAASE,QAASF,EAAgBl4B,MAAOm4B,IAM7CpG,EAAc5mB,UAAU2nB,WAAa,WACjC,GAGIzuB,GAEAoyB,EALAhxB,EAAUqP,KAAKrP,QACfstB,EAASttB,EAAQiT,eACjBgO,EAASjhB,EAAQzC,SAIjBq1B,EAAWtF,EAAO/U,SAItB,IAHAlJ,KAAKiU,YAAcrC,EAAOpI,aAAc1d,GAAI6E,EAAQmC,QAAQhH,GAAK,kBACjEkU,KAAKwjB,qBACLxjB,KAAKyjB,oBACe,YAAhBxF,EAAOpsB,KACPmO,KAAK0jB,eAAe1jB,KAAKod,iBAGzB,KAAK,GAAI/vB,GAAI,EAAGA,EAAI2S,KAAKwd,2BAA2BlwB,OAAQD,IAAK,CAC7D,GAAIs2B,GAAShzB,EAAQmC,QAAQhH,GAAK,iBAAmBuB,EACjDu2B,EAASjzB,EAAQmC,QAAQhH,GAAK,iBAAmBuB,EAAI,QACrDuP,EAAOoD,KAAKwd,2BAA2BnwB,EAE3CkC,IADAoyB,EAAkB/kB,EAAc,SACP,QAAU+kB,EAAgB71B,GAAK,IAAM8Q,EAAW,IACzE,IAAI4X,GAAS,GAAIvS,IAAKrF,EAAQ,EAAGA,EAAQ,EAAGA,EAAY,MAAGA,EAAa,QACpE4O,EAAe,GAAIxd,IAAS4O,EAAY,MAAGA,EAAY,OACvDinB,EAAc,GAAI3hB,IAAWyhB,EAAQp0B,EAAM0uB,EAAO6F,YAAa7F,EAAO7uB,QAASolB,EAC/ExU,MAAKrP,QAAQ0Z,YAC2B,SAApC1Z,EAAQiT,eAAezX,UAA2D,UAApCwE,EAAQiT,eAAezX,UAC7B,SAApCwE,EAAQiT,eAAezX,UACpB6T,KAAKrP,QAAQge,cAAcvhB,OAAS4S,KAAKrP,QAAQge,cAAc5gB,QACtE81B,EAAY/1B,EAAKkS,KAAK+jB,UAAUj2B,EAAIkS,KAAKmd,iBAAiBrvB,EAAIkS,KAAKmd,iBAAiBpvB,QAC7EiS,KAAK+jB,UAAUj2B,EAAI+1B,EAAY91B,QAAU4F,KAAKC,IAAIoM,KAAKmd,iBAAiBrvB,EAAI+1B,EAAY/1B,GAC/F0d,EAAa1d,EAAKkS,KAAK+jB,UAAUj2B,EAAIkS,KAAKmd,iBAAiBrvB,EAAIkS,KAAKmd,iBAAiBpvB,OAC9EiS,KAAK+jB,YAAgBnnB,EAAiB,WAAI,EAC3CjJ,KAAKC,IAAIoM,KAAKmd,iBAAiBrvB,EAAI0d,EAAa1d,KAGtD+1B,EAAYh2B,EAAKmS,KAAK+jB,UAAUl2B,EAAImS,KAAKmd,iBAAiBtvB,EAAImS,KAAKmd,iBAAiB/vB,OAC7E4S,KAAK+jB,UAAUl2B,EAAIg2B,EAAYz2B,OAChCuG,KAAKC,IAAIoM,KAAKmd,iBAAiBtvB,EAAIg2B,EAAYh2B,GACrD2d,EAAa3d,EAAKmS,KAAK+jB,UAAUl2B,EAAImS,KAAKmd,iBAAiBtvB,EAAImS,KAAKmd,iBAAiB/vB,MAC/E4S,KAAK+jB,UAAUl2B,EAAI8F,KAAKC,IAAIoM,KAAKmd,iBAAiBtvB,EAAI2d,EAAa3d,KAIjFU,EADc,GAAIgU,IAAWqhB,EAAQpY,EAAa3d,EAAG2d,EAAa1d,EAAG,SAAU8O,EAAW,KAAG,GAAI,IAClE2mB,EAAUA,EAAS90B,OAASuR,KAAKrP,QAAQ6Z,WAAWrL,gBAAiBa,KAAKiU,aACzGjU,KAAKiU,YAAYjoB,YAAY4lB,EAAO0C,cAAcuP,MAI9D5G,EAAc5mB,UAAU2tB,yBAA2B,SAAUlnB,EAAYmnB,EAAStzB,EAASstB,GACvF,GAAIS,GAAgB5hB,EAAkB,MAClC0O,EAAe1O,EAAiB,KAEhCnP,EAAWpC,EADEuR,EAAwB,YACFmhB,EAAO/U,UAa9C,OAZAwV,GAAc7wB,EAAKmS,KAAK+jB,UAAUl2B,EAAImS,KAAKmd,iBAAiBtvB,EAAImS,KAAKmd,iBAAiB/vB,OAC/E4S,KAAK+jB,UAAUl2B,EAAIo2B,GAAWtwB,KAAKC,IAAIoM,KAAKmd,iBAAiBtvB,EAAI6wB,EAAc7wB,GACtF2d,EAAa3d,EAAKmS,KAAK+jB,UAAUl2B,EAAImS,KAAKmd,iBAAiBtvB,EAAImS,KAAKmd,iBAAiB/vB,OAC9E4S,KAAK+jB,UAAUl2B,EAAIF,EAASP,MAAQ62B,GAAWtwB,KAAKC,IAAIoM,KAAKmd,iBAAiBtvB,EAAI2d,EAAa3d,IAC9D,SAApC8C,EAAQiT,eAAezX,UAA2D,UAApCwE,EAAQiT,eAAezX,UAC7B,SAApCwE,EAAQiT,eAAezX,UACpB6T,KAAKrP,QAAQge,cAAcvhB,OAAS4S,KAAKrP,QAAQge,cAAc5gB,UACtE2wB,EAAc5wB,EAAKkS,KAAK+jB,UAAUj2B,EAAIkS,KAAKmd,iBAAiBrvB,EAAIkS,KAAKmd,iBAAiBpvB,OAChFiS,KAAK+jB,UAAUj2B,EAAI6F,KAAKC,IAAID,KAAKC,IAAIoM,KAAKmd,iBAAiBrvB,GAAK4wB,EAAc5wB,GAAMmwB,EAAOriB,YAAc,EAC/G4P,EAAa1d,EAAKkS,KAAK+jB,UAAUj2B,EAAIkS,KAAKmd,iBAAiBrvB,EAAIkS,KAAKmd,iBAAiBpvB,OAC/EiS,KAAK+jB,UAAUj2B,EAAI6F,KAAKC,IAAID,KAAKC,IAAIoM,KAAKmd,iBAAiBrvB,GAAK0d,EAAa1d,KAE9E4wB,cAAeA,EAAelT,aAAcA,IAGzDyR,EAAc5mB,UAAUqtB,eAAiB,SAAUxG,GAC/C,GAKIgH,GACAC,EAIAxb,EAVAC,EAAQ5I,KACRrP,EAAUqP,KAAKrP,QAEfstB,EAASttB,EAAQiT,eACjBwgB,EAAY,GAAIt3B,IAAKmxB,EAAOtiB,WAAYsiB,EAAOriB,aAI/CgW,EAASjhB,EAAQzC,SACjB41B,EAAc7F,EAAO6F,WAEzB,IAAI5G,GAAQ,GAAKA,EAAOld,KAAK0d,WAAWpwB,OAAQ,CACxC3B,SAASC,eAAeoU,KAAKiU,YAAYnoB,KACzCH,SAASC,eAAeoU,KAAKiU,YAAYnoB,IAAI8N,QAmCjD,KAAK,GAjCDyqB,GAAkC,mBAAjBpG,EAAO/iB,OAA+C,iBAAjB+iB,EAAO/iB,OAA6C,UAAjB+iB,EAAO/iB,MAChGopB,EAAgBD,EAAgB50B,oBAAkBwuB,EAAO1uB,MAAQ,UAAY0uB,EAAO1uB,KAAOu0B,EAAYr1B,MACvG81B,EAAgBF,GAAuC,IAAtBP,EAAY12B,MAAe,EAAwB02B,EAAY12B,MA8BhGyc,EAAS7J,KACJ3S,EAAI,EAAGA,EAAI2S,KAAK0d,WAAWR,GAAkB,WAAE5vB,OAAQD,KA9BlD,SAAUA,GACpB,GAAIyP,GAAa+M,EAAO6T,WAAWR,GAAkB,WAAE7vB,GACnDyQ,EAAgB8T,EAAOpI,aAAc1d,GAAI6E,EAAQmC,QAAQhH,GAAK,iBAAmBuB,IACjFwzB,EAAa/jB,EAAwB,YACrC0nB,EAAU7zB,EAAQmC,QAAQhH,GAAK,uBAAyBuB,EACxDu2B,EAASjzB,EAAQmC,QAAQhH,GAAK,sBAAwBuB,EACtDqxB,EAAgB5hB,EAAkB,MAClC0O,EAAe1O,EAAiB,IAUpC,IATInM,EAAQ0Z,YACR8Z,EAAoBta,EAAOma,yBAAyBlnB,EAzBlD,GAyBuEnM,EAASstB,GAClFS,EAAgByF,EAAiC,cACjD3Y,EAAe2Y,EAAgC,cAEnDxb,GACIiC,QAAQ,EAAO9Z,KL/iBF,sBK+iB6BH,QAASA,EAASpB,KAAMuN,EAAiB,KACnF5B,MAAO+iB,EAAO/iB,MAAOupB,SAAUxG,EAAOwG,UAEtC5a,EAAOlZ,QAAQma,SAAU,CACTnC,EAAUhY,OAA1B,IAAmCoa,GAAkBlI,GAAO8F,GAAY,WACxEA,GAAYoC,EAEhBlB,EAAOlZ,QAAQqa,QLtjBE,sBKsjB2BrC,EAAW,SAAUsC,GAC7D,GAAI9c,GAAgB,GAAImU,IAAWkiB,EAASvZ,EAAa1b,KAAMg1B,EAAeF,EAAgBvnB,EAAiB,KAAIwnB,EAAerG,EAAO7uB,QAAS,GAClJ0O,GAAc9R,YAAYiP,EAAWyjB,EAAezT,EAAa/P,MAAOkpB,EAAWnZ,EAAawZ,SAAUt2B,EAAe0yB,IAEzHtyB,EADA21B,EAAc,GAAI3hB,IAAWqhB,EAAQpY,EAAa3d,EAAG2d,EAAa1d,EAAG,QAAS+yB,EAAY,GAAI,IAC/D5C,EAAO/U,UAAW+U,EAAO/U,UAAUza,OAASma,EAAMjY,QAAQ6Z,WAAWrL,gBAAiBrB,GACrH8K,EAAMqL,YAAYjoB,YAAY8R,MAK1BzQ,EAEZ,IAAIq3B,OAAc,EAGlB,IAAkB,IAAd1kB,KAAKkd,KAAY,CACjB,GAAIyH,GAAczH,EAAO,EAAK,IAAMld,KAAK0d,WAAWpwB,OAChDs3B,EAAa3G,EAAO/U,UACpB2b,EAAiBt5B,EAAYo5B,EAAYC,GACzCE,EAAa9kB,KAAKud,eAAe1vB,EAAImS,KAAKud,eAAenwB,MAASy3B,EAAez3B,SAxD/E,GA0DF23B,EAAc/kB,KAAKud,eAAe1vB,EAAImS,KAAKud,eAAenwB,MAC1D43B,EAAQhlB,KAAKud,eAAezvB,EAAIkS,KAAKud,eAAexvB,WA3DlD,GA4DFk3B,EAAYF,EA5DV,GA4DgCF,EAAez3B,MAAQ,GAC7Ds3B,GAAc9S,EAAOpI,aAAc1d,GAAI6E,EAAQmC,QAAQhH,GAAK,wBAC5D,IAAIo5B,GAAkBtT,EAAOpI,aAAc1d,GAAI6E,EAAQmC,QAAQhH,GAAK,8BAChEq5B,EAAmBvT,EAAOpI,aAAc1d,GAAI6E,EAAQmC,QAAQhH,GAAK,+BACjEs5B,EAAY,MAAQL,EAAa,IAAMC,EAAO,OAASD,EAhErD,IAgE2E,KAAOC,KACpF,OAASD,EAjEP,IAiE6B,KAAOC,KAAiB,MACvDK,EAAW,MAAQP,EAAY,IAAME,EAAO,OAASF,EAlEnD,IAkEwE,KAAOE,KACjF,OAASF,EAnEP,IAmE4B,KAAOE,KAAiB,MACtDM,EAAkB,GAAIhjB,IAAW3R,EAAQmC,QAAQhH,GAAK,aAAc,UAAW,EAAG,UAAW,EAAG,GAAIu5B,EACxGH,GAAgBl5B,YAAY4lB,EAAO1G,SAASoa,GAC5C,IAAIC,GAAsB,GAAIrjB,IAAWvR,EAAQmC,QAAQhH,GAAK,kBAAmB,iBAAmB,EAAG,GAAImW,IAAK6iB,IAA0BE,KAAsB53B,GAAW62B,IAAc,GACzLiB,GAAgBl5B,YAAY4lB,EAAO0C,cAAciR,IACjDvlB,KAAKwlB,WAAWN,EAChB,IAAIO,GAAmB,GAAInjB,IAAW3R,EAAQmC,QAAQhH,GAAK,cAAe,UAAW,EAAG,UAAW,EAAG,GAAIs5B,EAC1GD,GAAiBn5B,YAAY4lB,EAAO1G,SAASua,GAC7C,IAAIC,GAAuB,GAAIxjB,IAAWvR,EAAQmC,QAAQhH,GAAK,mBAAoB,iBAAmB,EAAG,GAAImW,IAAM8iB,EA3E7G,GA2EmIC,IA3EnI,GAAA,IA2EoK,GAC1KG,GAAiBn5B,YAAY4lB,EAAO0C,cAAcoR,IAClD1lB,KAAKwlB,WAAWL,GAChBT,EAAY14B,YAAYk5B,GACxBR,EAAY14B,YAAYm5B,EACxB,IAAIQ,IACA75B,GAAM6E,EAAQmC,QAAQhH,GAAK,eAC3B+B,EAAKo3B,EACLn3B,EAAKk3B,EAAQH,EAAe92B,OAAS,EACrCwB,KAAQ,UACRV,YAAa,OACbC,aAAc81B,EAAWr4B,UACzBwC,cAAe61B,EAAWp4B,WAC1BwC,cAAe41B,EAAWt4B,WAC1B2C,cAAe,SACfE,UAAa,GACbC,QAAW,EACXC,oBAAqB,GAEzBq1B,GAAY14B,YAAY4lB,EAAOvjB,WAAWs3B,EAAiBhB,IAC3D3kB,KAAKiU,YAAYjoB,YAAY04B,MAIzCzH,EAAc5mB,UAAUmtB,mBAAqB,WACzC,GAAI7yB,GAAUqP,KAAKrP,QACfstB,EAASttB,EAAQiT,eACjBwa,EAAcH,EAAO1J,MAAM/oB,KAE3B0d,EAAY+U,EAAOK,WAGnB3wB,EAAWpC,EADH0B,EAAU+S,KAAKud,eAAenwB,SAAwBgxB,EAAalV,GAC7CA,EAClClJ,MAAKmd,iBAAmB,GAAIlb,IAAMjC,KAAKud,eAAe1vB,EALxC,GAKuDmS,KAAKud,eAAezvB,EAL3E,GAKyFH,EAASI,OAAUiS,KAAKud,wBAAwCvd,KAAKud,yBAAyC5vB,EAASI,QACzM,gBAAhBkwB,EAAOpsB,KAAyB,EAAmB,IAAdmO,KAAKkd,KANjC,GAMyD,GACvE,IAAI/uB,GAAgB,GAAI+T,IAAWvR,EAAQmC,QAAQhH,GAAK,iBAAkBmyB,EAAO7J,WAAY6J,EAAO9b,OAAQ,EAAGnC,KAAKmd,iBAAkB,IAClIyI,EAAej1B,EAAQzC,SAASomB,cAAcnmB,EAClDy3B,GAAa15B,MAAM25B,cAAgB,OACnC7lB,KAAKiU,YAAYjoB,YAAY45B,GAC7B5lB,KAAK8lB,mBAAmBn1B,EAASqP,KAAKmd,iBAAiB/vB,MAAO4S,KAAKmd,iBAAiBpvB,OAAQkwB,GAC5Fje,KAAKiU,YAAYpa,aAAa,YAAa,eAAiBmG,KAAK+jB,UAAUl2B,GAAOmS,KAAKmd,iBAAmB,GAAK,KAC1Gnd,KAAK+jB,UAAUj2B,GAAOkS,KAAKmd,iBAAmB,GAAK,MACxDxsB,EAAQ4a,UAAUvf,YAAYgU,KAAKiU,cAEvCgJ,EAAc5mB,UAAUotB,kBAAoB,WACxC,GAAI9yB,GAAUqP,KAAKrP,QACfstB,EAASttB,EAAQiT,eACjBsF,EAAY+U,EAAOK,WACnBF,EAAcH,EAAO1J,MAAM/oB,KAG3Bu6B,EAAY94B,EAAU+S,KAAKud,eAAenwB,SAAwBgxB,EAAalV,GAC/Evb,EAAWpC,EAAYw6B,EAAW7c,EAClCkV,IAEA7vB,EADc,GAAIgU,IAAW5R,EAAQmC,QAAQhH,GAAK,eAAiBkU,KAAKud,iBAAqBvd,KAAKud,eAAenwB,MAAQ,EAAI4S,KAAKud,eAAezvB,EAAKH,EAASI,OAAS,IAAoB,SAAUg4B,EAAW,IAClL7c,EAAWA,EAAUza,OAASuR,KAAKrP,QAAQ6Z,WAAWtL,iBAAkBc,KAAKiU,cAMpHgJ,EAAc5mB,UAAU2vB,yBAA2B,SAAUpzB,GACzD,GAAIjC,GAAUqP,KAAKrP,QACf0P,EAASzN,EAAEyN,OACX4lB,EAAgBt1B,EAAQmC,QAAQhH,GAAK,qBACzCuU,GAAWzN,EAAEhF,KAAKvC,QAAQ,UAAY,EAClCM,SAASu6B,iBAAiBtzB,EAAEuzB,eAAe,GAAGC,QAASxzB,EAAEuzB,eAAe,GAAGE,SADpChmB,CAE3C,IAAIimB,GACArI,EAASttB,EAAQiT,cACrB,IAAIvD,EAAOvU,GAAGT,QAAQ,gBAAkB,GAAK4yB,EAAO3K,SAAWtT,KAAKwd,2BAA2BlwB,OAAS,EAAG,CACvG,GAAIgoB,OAAc,GACd2K,MAAa,GAEb3uB,MAAO,GACP/B,MAAO,GACP8S,MAAS,GACTkkB,MAAc,GACdzoB,MAAgB,EACpBwoB,GAAa31B,EAAQwB,OAAOC,YAAY2kB,WAAW1W,EAAOvU,GAAG+D,MAAM,KAAK,IAExE,KAAK,GADD22B,GAAU71B,EAAQ4a,UAAU9X,wBACvBpG,EAAI,EAAGA,EAAI2S,KAAKrC,kBAAkBrQ,OAAQD,IAAK,CACpDioB,EAActV,KAAKrC,kBAAkBtQ,GAErC4yB,GADAniB,EAAgBnS,SAASC,eAAe+E,EAAQmC,QAAQhH,GAAK,iBAAmBuB,IACrDoG,uBAC3B,IAAIgzB,GAAS,GAAIxkB,IAAKtO,KAAKC,IAAIqsB,EAAWtzB,KAAO65B,EAAQ75B,MAAOgH,KAAKC,IAAIqsB,EAAWvzB,IAAM85B,EAAQ95B,KAAMuzB,EAAW7yB,MAAO6yB,EAAWlyB,OAIrI,IAHAwB,EAAOuO,EAAc4oB,aAAa,QAClCrkB,EAAS4b,EAAO6F,YAAYr1B,MAC5B83B,EAActI,EAAO6F,YAAY12B,OAC5BqC,oBAAkB6lB,EAAwB,YAAI,CAC/ChkB,EAAOgkB,EAAwB,UAC/B,KAAK,GAAItjB,GAAI,EAAGA,EAAIV,EAAKhE,OAAQ0E,IAC7B,GAAIV,EAAKU,GAAmB,iBAAMs0B,EAA2B,eAAG,CAC5DtmB,KAAK2mB,uBAAuB1I,EAAQ1uB,EAAM8S,EAAQ4jB,EAAeM,EAAaE,EAC9E,cAOhBzmB,MAAK8b,4BAGbmB,EAAc5mB,UAAUswB,uBAAyB,SAAU1I,EAAQ1uB,EAAM8S,EAAQvW,EAAIy6B,EAAahzB,GAC9F,GAAI3C,GACAiY,EACA+d,EACA5B,CAeIp0B,GAVU,gBAFsB,SAAvBqtB,EAAOxP,YAA+C,QAApBwP,EAAO9xB,UAA0C,WAApB8xB,EAAO9xB,SACjF,aAAe,WAAa8xB,EAAOxP,aAEhCwP,EAAO4I,gBASD,OAFPD,EAAOrzB,EAAK1F,EAAK0F,EAAKnG,MAAQ,GAER,KADtB43B,EAAOzxB,EAAKzF,EAAKyF,EAAY,QACM,OAASqzB,EAbxC,IAawD,KAAO5B,EAd9D,IAeD,OAAS4B,EAdT,IAcyB,KAAO5B,EAf/B,IAegD,MAP9C,OAFP4B,EAAOrzB,EAAK1F,EAAK0F,EAAKnG,MAAQ,GAER,KADtB43B,EAAOzxB,EAAKzF,GACuB,OAAS84B,EAPxC,IAOwD,KAAO5B,EAR9D,IASD,OAAS4B,EART,IAQyB,KAAO5B,EAT/B,IASgD,MAUpD/G,EAAO4I,gBASD,OAFPD,EAAOrzB,EAAK1F,GAEU,KADtBm3B,EAAOzxB,EAAKzF,EAAKyF,EAAKxF,OAAS,GACI,OAAS64B,EA3BxC,IA2BwD,KAAO5B,EA5B9D,IA6BD,OAAS4B,EA5BT,IA4ByB,KAAO5B,EA7B/B,IA6BgD,MAP9C,OAFP4B,EAAOrzB,EAAK1F,EAAK0F,EAAW,OAEN,KADtByxB,EAAOzxB,EAAKzF,EAAKyF,EAAKxF,OAAS,GACI,OAAS64B,EArBxC,IAqBwD,KAAO5B,EAtB9D,IAuBD,OAAS4B,EAtBT,IAsByB,KAAO5B,EAvB/B,IAuBgD,MAS7Dnc,EAAc,GAAIvG,IAAWxW,EAAIyD,EAAMg3B,EAAalkB,EAAQ,EAAG,GAAIzR,GACnEoP,KAAKrP,QAAQ4a,UAAUvf,YAAYgU,KAAKrP,QAAQzC,SAASgd,SAASrC,KAEtEoU,EAAc5mB,UAAUyvB,mBAAqB,SAAUn1B,EAASvD,EAAOW,EAAQkwB,GAC3E,GAAIpwB,GACAC,EAEAqV,EAEA2jB,GADJ3jB,EAAYQ,YAAWhT,EAAQ+C,SAAUyP,GAAW,IAC9BtV,EAClBk5B,EAAQ5jB,EAAUrV,EAClBwZ,EAAanE,EAAUpV,OACvBsZ,EAAYlE,EAAU/V,MACtB4L,EAAarI,EAAQge,cAAcvhB,MACnC45B,EAAcr2B,EAAQge,cAAc5gB,OACpC5B,EAA+B,SAApB8xB,EAAO9xB,SAAuB6M,EAAaguB,EAAe,QAAU,SAAW/I,EAAO9xB,QACrG,IAAwB,UAApB8xB,EAAO9xB,SACP6T,KAAK+jB,UAAY9F,EAAOxwB,aAEvB,CACD,OAAQtB,GACJ,IAAK,MACL,IAAK,SACDgX,EAAUpV,OAAUuZ,EAAavZ,EACjCF,EAAKmL,EAAa,EAAM5L,EAAQ,EAChCU,EAAkB,QAAb3B,EAAsB46B,EAASA,EAAQ5jB,EAAUpV,OAnBpD,GAoBFoV,EAAUrV,EAAkB,QAAb3B,EAAsB46B,EAAQh5B,EApB3C,GAoB8Dg5B,CAChE,MACJ,KAAK,OACL,IAAK,QACD5jB,EAAU/V,MAASia,EAAYja,EAC/BS,EAAkB,SAAb1B,EAAuB26B,EAAQA,EAAQ3jB,EAAU/V,MACtDU,EAAKk5B,EAAc,EAAMj5B,EAAS,EAClCoV,EAAUtV,EAAkB,SAAb1B,EAAuB26B,EAAQ15B,EAAQ05B,EAG9D,OAAQ7I,EAAOvwB,WACX,IAAK,OACgB,QAAbvB,GAAmC,WAAbA,EACtB0B,EAAIsV,EAAUtV,EAGdC,EAAIqV,EAAUrV,CAElB,MACJ,KAAK,MACgB,QAAb3B,GAAmC,WAAbA,EACtB0B,EAAImL,EAAa5L,EAGjBU,EAAIk5B,EAAcj5B,EAI9BiS,KAAKrP,QAAQwS,UAAYA,EACzBnD,KAAK+jB,UAAY,GAAI/1B,IAASH,EAAGC,KAGzCmvB,EAAc5mB,UAAU4wB,eAAiB,SAAUr0B,GAC/CoN,KAAKgmB,yBAAyBpzB,GAC9BslB,aAAalY,KAAKkY,cAClBlY,KAAKkY,aAAeE,WAAWpY,KAAK8b,yBAAyBhE,KAAK9X,MAAO,MAK7Eid,EAAc5mB,UAAUylB,yBAA2B,WAC/C,GAAInwB,SAASC,eAAeoU,KAAKrP,QAAQmC,QAAQhH,GAAK,uBAAwB,CAC1E,GAAIo7B,GAAkBv7B,SAASC,eAAeoU,KAAKrP,QAAQmC,QAAQhH,GAAK,sBACxEo7B,GAAgB9yB,WAAWC,YAAY6yB,KAM/CjK,EAAc5mB,UAAU8wB,eAAiB,SAAUv0B,GAC/CoN,KAAKod,YAAexqB,EAAEyN,OAAOvU,GAAGT,QAAQ,gBAAkB,EAAM2U,KAAKod,YAAc,EAC9Epd,KAAKod,YAAc,EACxBpd,KAAKge,cAKTf,EAAc5mB,UAAUmvB,WAAa,SAAU1yB,GAC3CkkB,eAAa1G,IAAIxd,EAAS+b,UAAQuI,gBAAiBpX,KAAKmnB,eAAgBnnB,OAK5Eid,EAAc5mB,UAAUwhB,iBAAmB,WACnC7X,KAAKrP,QAAQy2B,cAGjBpnB,KAAKrP,QAAQ02B,GAAGxY,UAAQyI,eAAgBtX,KAAKgmB,yBAA0BhmB,MACvEA,KAAKrP,QAAQ02B,GAAGxY,UAAQ2I,cAAexX,KAAKinB,eAAgBjnB,QAKhEid,EAAc5mB,UAAUshB,oBAAsB,WACtC3X,KAAKrP,QAAQy2B,cAGjBpnB,KAAKrP,QAAQ22B,IAAIzY,UAAQyI,eAAgBtX,KAAKgmB,0BAC9ChmB,KAAKrP,QAAQ22B,IAAIzY,UAAQ2I,cAAexX,KAAKinB,kBAKjDhK,EAAc5mB,UAAUumB,cAAgB,WACpC,MAAO,iBAOXK,EAAc5mB,UAAUqa,QAAU,SAAU/f,GAIxCqP,KAAK2X,uBAKTsF,EAAc5mB,UAAU6sB,oBAAsB,SAAUttB,EAAU0sB,GAC9D,GAAIpB,GACAqG,EAAQ,4BACZ,KAAK93B,oBAAkBmG,EAASnH,QAA6D,mBAAnDgD,OAAO4E,UAAUhD,SAASiD,KAAKV,EAASnH,OAA6B,CAC3G,GAAI+4B,GAAaxnB,KAAKrP,QAAQzC,SAAS2vB,aACnC4J,EAAmB97B,SAAS+7B,gBAAgBH,EAAO,kBAEnDp7B,EAAW6T,KAAKrP,QAAQiT,eAAezX,SACvCy1B,MAAK,GACLC,MAAK,EACTD,GAAkB,QAAbz1B,GAAmC,WAAbA,EAAwB,MAAQ,IAC3D01B,EAAkB,QAAb11B,GAAmC,WAAbA,EAAwB,IAAM,MACzDs7B,EAAiB5tB,aAAa,KAAM,UAAYyoB,GAChDmF,EAAiB5tB,aAAa,KAAM,MACpC4tB,EAAiB5tB,aAAa,KAAM,MACpC4tB,EAAiB5tB,aAAa,KAAM+nB,EAAK,KACzC6F,EAAiB5tB,aAAa,KAAMgoB,EAAK,IACzC,KAAK,GAAIvxB,GAAI,EAAGA,EAAIsF,EAASnH,MAAMnB,OAAQgD,IAAK,CAC5C,GAAIq3B,GAAc,KAAO/xB,EAASnH,MAAMnB,OAAS,GAC7Cs6B,EAAUj8B,SAAS+7B,gBAAgBH,EAAO,OAC9CK,GAAQ/tB,aAAa,SAAUvJ,EAAIq3B,EAAc,KACjDC,EAAQ/tB,aAAa,aAAcjE,EAASnH,MAAM6B,IAClDs3B,EAAQ/tB,aAAa,eAhBX,GAgBmCxG,YAC7Co0B,EAAiBz7B,YAAY47B,GAEjCJ,EAAWx7B,YAAYy7B,GACvBznB,KAAKmjB,qBAAuBsE,CAC5B,IAAIh5B,GAAQ,eAAsB6zB,EAAc,GAChDtiB,MAAK4d,YAAY5xB,YAAYy7B,GAC7BvG,EAAkBzyB,EAEtB,MAAOyyB,IAEJjE,KCn9BP4K,GAAkC,WAClC,QAASA,GAAiB/1B,GACtBkO,KAAKK,OAAS,YACdL,KAAK8nB,YAAc,YACnB9nB,KAAKgc,4BACLhc,KAAK+nB,6BACL/nB,KAAKgoB,kBACLhoB,KAAKrP,QAAUmB,EACfkO,KAAK6X,mBAoLT,MA5KAgQ,GAAiBxxB,UAAU4xB,UAAY,SAAUr1B,GAC7C,GACIs1B,GAEAvf,EAEAwf,EAEAvrB,EAEA0mB,EACA8E,EACAt1B,EACAu1B,EAZA13B,EAAUqP,KAAKrP,QAEf4nB,EAAW3lB,EAAEyN,OAAOvU,GAEpB8F,KAEA02B,EAAYtoB,KAAKrP,QAAQ2rB,kBAEzBiM,KAKAC,EAAkBxoB,KAAKrP,QAAQ83B,sBACnC,IAAIlQ,EAASltB,QAAQ,gBAAkB,KAAMm9B,GAAkBA,EAAgBE,cAAgBnQ,IAC3F,GAAIvY,KAAKic,cAAgB1D,EAAU,CAC/B6P,EAAiBz8B,SAASC,eAAe+E,EAAQmC,QAAQhH,GAAK,YAAc6E,EAAQ2T,WAAa,UACjG,IAAIqkB,GAAoBh9B,SAAS2R,uBAAuB,mBACxDV,GAAOoD,KAAKrP,QAAQwB,OAAOC,YAAY2kB,WAAWwB,EAAS1oB,MAAM,KAAK,IAClE2N,OAAQ,EACZ,IAAIwC,KAAKrP,QAAQiT,eAAe0P,QAAS,CACjCxW,EAAakD,KAAKrP,QAAQ+M,oBAAoBC,iBAElDH,GAAQD,EADOyC,KAAKrP,QAAQ+M,oBAAoBC,kBAAkBrQ,OACjCsP,EAAMjM,GACvCqP,KAAKjC,aAAoD,YAArCiC,KAAKrP,QAAQiT,eAAe/R,KAAqBlG,SAASC,eAAe,gCAAkC4R,GAAS7R,SAASC,eAAe,0BAA4B4R,GAClK,OAAtBwC,KAAKjC,cAA0ByqB,GAAkBxoB,KAAKjC,aAAa2oB,aAAa,QAAU8B,EAAgBI,eAgBrG5oB,KAAKgoB,eAAe16B,OAAS,GAAK0S,KAAKgoB,eAAehoB,KAAKgoB,eAAe16B,OAAS,GAAmB,iBAAM0S,KAAKjC,eACtHV,EAA6B2C,KAAKgc,yBAA0Bhc,KAAKgoB,eAAgBr3B,GACjFqP,KAAKic,YAAc,IAjBfuM,GAAkBxoB,KAAKjC,eAAiByqB,EAAgBzqB,aAUnDiC,KAAKgoB,eAAe16B,OAAS,GAAK0S,KAAKgoB,eAAehoB,KAAKgoB,eAAe16B,OAAS,GAAmB,iBAAM0S,KAAKjC,eACtHV,EAA6B2C,KAAKgc,yBAA0Bhc,KAAKgoB,eAAgBr3B,GACjFqP,KAAKic,YAAc,KAXnBjc,KAAKgoB,eAAej2B,MAAOi2B,eAAgBhoB,KAAKjC,eAChDlB,EAAYmD,KAAKgc,yBAA0B,aAC3Chc,KAAKgc,yBAAyBjqB,MAAOkM,UAAW+B,KAAKjC,aAAcG,QAASpB,EAAWU,GAAmB,WACtGW,WAAYrB,EAAWU,GAAgB,QAAGY,eAAgBtB,EAAWU,GAAoB,YACzFa,eAAgBvB,EAAWU,GAAoB,cAEnDT,EAASiD,KAAKjC,aAAcuqB,EAAU/4B,KAAM+4B,EAAUl5B,QAASk5B,EAAUnmB,OAAO1T,MAAO65B,EAAUnmB,OAAO/U,MAAMiG,YAC9G2M,KAAKK,OAAS,aAa1B,GADAgoB,EAAS12B,EAAoBiL,KAAU0rB,EAAUz2B,KAAMlB,IACnDqP,KAAKrP,QAAQiT,eAAe0P,WAAUkV,KAAkBxoB,KAAKjC,cAAeiC,KAAKjC,aAAa2oB,aAAa,QAAU8B,EAAgBI,iBACrI,GAAI5oB,KAAKrP,QAAQiT,eAAe0P,UAAUkV,GAAkBxoB,KAAKjC,eAAiByqB,EAAgBzqB,cA4B9FmqB,GAAmB,MA5BuG,CAC1H,IAAS76B,EAAI,EAAGA,EAAI+6B,EAAerU,kBAAmB1mB,IAAK,CACvDyF,EAAUs1B,EAAe1uB,WAAWrM,GACpCi2B,GAAU,EACV1mB,EAAOjM,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,GACxD,KAASmC,EAAI,EAAGA,EAAI22B,EAAkBr7B,OAAQ0E,IAC1C,GAAIc,EAAQhH,KAAO68B,EAAkB32B,GAAGlG,GAAI,CACxCw3B,GAAU,CACV,OAGJ+E,EAAOh9B,QAAQuR,EAAqB,iBAAM,GAAK0mB,IAC/CiF,EAAkBx2B,KAAKe,GACvBlB,EAAMG,KAAK6K,IAGnBrD,EAAiB5N,SAAS2R,uBAAuB,oBAAqB,mBAAoB3M,EAC1F,KAAK,GAAIuM,GAAI,EAAGA,EAAIqrB,EAAkBj7B,OAAQ4P,IAE1CzD,GADA3G,EAAUy1B,EAAkBrrB,IACPxD,WAAW,IAAMyI,OAAQmmB,EAAUnmB,OAAQ5S,KAAM+4B,EAAU/4B,KAAMH,QAASk5B,EAAUl5B,UACzG0D,EAAQ6G,UAAU2W,IAAI,oBACtBtQ,KAAKic,YAAc1D,CAEvB5P,IAAciC,QAAQ,EAAO9Z,KNpD1B,gBMoD+CH,QAASA,EAASiB,MAAOA,EAAO4H,SAAU+uB,GAC5FJ,GAAoBvd,QAAQ,EAAO9Z,KNrDhC,gBMqDqDc,MAAOA,EAAO4H,SAAU+uB,GAChF53B,EAAQqa,QNtDL,gBMsD4Bra,EAAQma,SAAWqd,EAAkBxf,SAQ/E,IAAI4P,EAASltB,QAAQ,kBAAoB,GAAKktB,EAASltB,QAAQ,kBAAoB,GACpF,GAAI2U,KAAKrP,QAAQiT,eAAe0P,WAAYkV,GAAkBA,EAAgBI,iBAAmBrQ,MAAqBiQ,GAAkBA,EAAgBK,gBAAkBtQ,GAAkB,CACxL,GAGIuQ,GAHAtrB,MAAQ,GACR8a,MAAY,GACZ/U,MAAa,GAEbwX,EAAYpvB,SAASC,eAAe2sB,EACf,eAArBvY,KAAK8nB,aACL9qB,EAAagD,KAAK+nB,0BAA2B,aAEjD/nB,KAAK8nB,YAAc,YACnBtqB,EAA6C,YAArCwC,KAAKrP,QAAQiT,eAAe/R,KAAqBklB,WAAWwB,EAAS1oB,MAAM,KAAK,IAAMknB,WAAWwB,EAAS1oB,MAAM,KAAK,GAI7H,KAAK,GAHD4N,GAAauC,KAAKrP,QAAQ+M,oBAAoBC,kBAAkBH,GAAmB,WAAElQ,OACrFwP,EAAakD,KAAKrP,QAAQ+M,oBAAoBC,kBAC9C2kB,EAAch3B,SAASitB,EAASA,EAASjrB,OAAS,GAAI,IACjDD,EAAI,EAAGA,EAAIoQ,EAAYpQ,IAC5B,IAAK,GAAI2E,GAAI,EAAGA,EAAIgO,KAAKrP,QAAQwB,OAAOC,YAAY9E,OAAQ0E,IACxD,GAAIgO,KAAKrP,QAAQ+M,oBAAoBC,kBAAkBH,GAAmB,WAAEnQ,GAAmB,iBAAM2S,KAAKrP,QAAQwB,OAAOC,YAAYJ,GAAmB,eAAG,CACvJsmB,EAAYtmB,EACZuR,EAAavD,KAAKrP,QAAQwB,OAAOC,YAAYJ,GAAe,UAC5D,IAAI+2B,GAAUp9B,SAASC,eAAe,yBAA2B2X,EAAa,eAAiB+U,EAAY,YACjG,KAANjrB,IACA2S,KAAK+nB,6BACLnqB,EAAeoC,KAAK+nB,0BAA2BzF,EAAatwB,EAAG+oB,EAAWgO,EAAS/oB,KAAKrP,QAAQwB,OAAOC,YAAa0K,GACpHgsB,EAAW9oB,KAAK+nB,0BAA0Bz6B,OAC1C0S,KAAK+nB,0BAA0Be,EAAW,GAAoB,iBAAME,cAExEjsB,EAASge,EAAWuN,EAAU/4B,KAAM+4B,EAAUl5B,QAASk5B,EAAUnmB,OAAO1T,MAAO65B,EAAUnmB,OAAO/U,MAAMiG,YACtG0J,EAASgsB,EAAST,EAAU/4B,KAAM+4B,EAAUl5B,QAASk5B,EAAUnmB,OAAO1T,MAAO65B,EAAUnmB,OAAO/U,MAAMiG,YACpGy1B,EAAW9oB,KAAK+nB,0BAA0Bz6B,OAC1C0S,KAAK+nB,0BAA0Be,EAAW,GAAoB,gBAAY,SAAE/2B,KAAKg3B,SAO7FP,IAAkBxoB,KAAKjC,cAAeiC,KAAKjC,aAAa2oB,aAAa,QAAU8B,EAAgBI,iBAC3FJ,EAAkBxoB,KAAKjC,eAAiByqB,EAAgBzqB,aAAuBiC,KAAKrP,QAAQiT,eAAe0P,UAC3G/Z,EAAiB5N,SAAS2R,uBAAuB,oBAAqB,mBAAoB3M,GAGxE,cAArBqP,KAAK8nB,aAA+C,cAAhB9nB,KAAKK,SAA2BL,KAAKrP,QAAQiT,eAAe0P,SAC7FkV,GAAkBxoB,KAAKjC,cAAeiC,KAAKjC,aAAa2oB,aAAa,QAAU8B,EAAgBI,iBAC3FJ,EAAkBxoB,KAAKjC,eAAiByqB,EAAgBzqB,cAAuByqB,GAAkBA,EAAgBS,gBACjHpsB,EAAYmD,KAAKgc,yBAA0B,aAC3Chc,KAAKgc,6BAIQ,cAArBhc,KAAK8nB,aAA+B9nB,KAAKrP,QAAQiT,eAAe0P,SAChEtW,EAAagD,KAAK+nB,0BAA2B,aAEjD/nB,KAAKic,YAAc,GACnBiM,GAAmB,CAEvB,OAAOA,IAKXL,EAAiBxxB,UAAUwhB,iBAAmB,WACtC7X,KAAKrP,QAAQy2B,aAGjBpnB,KAAKrP,QAAQ02B,GAAGxY,UAAQyI,eAAgBtX,KAAKioB,UAAWjoB,OAK5D6nB,EAAiBxxB,UAAUshB,oBAAsB,WACzC3X,KAAKrP,QAAQy2B,aAGjBpnB,KAAKrP,QAAQ22B,IAAIzY,UAAQyI,eAAgBtX,KAAKioB,YAKlDJ,EAAiBxxB,UAAUumB,cAAgB,WACvC,MAAO,oBAOXiL,EAAiBxxB,UAAUqa,QAAU,SAAU5e,GAC3CkO,KAAK2X,uBAEFkQ,KAMPqB,GAAkC,WAClC,QAASA,GAAiBp3B,GACtBkO,KAAKmpB,4BACLnpB,KAAKopB,6BACLppB,KAAKqpB,aAAc,EACnBrpB,KAAKipB,cAAe,EACpBjpB,KAAKrP,QAAUmB,EACfkO,KAAK6X,mBAwKT,MAlKAqR,GAAiB7yB,UAAUkjB,UAAY,SAAU3mB,GAC7C,GACI+V,GACAwf,EAIAvrB,EAGAwrB,EACAt1B,EACAu1B,EAXAtN,EAAYnoB,EAAEyN,OAGd1P,EAAUqP,KAAKrP,QACfiB,KACA2mB,EAAWwC,EAAUjvB,GAErB68B,KAKAW,EAAY34B,EAAQ6rB,kBACpB+M,EAAkBvpB,KAAKrP,QAAQorB,uBAC/Bf,EAAWrqB,EAAQmC,QAAQhH,GAAK,YAAc6E,EAAQ2T,WAAa,SACvE,IAAIiU,EAASltB,QAAQ,gBAAkB,EAEnC,GADAuH,EAAE+lB,iBACE3Y,KAAK0oB,cAAgBnQ,GAAYvY,KAAKipB,aAAc,CACpDb,EAAiBz8B,SAASC,eAAeovB,GACzCpe,EAAOjM,EAAQwB,OAAOC,YAAY2kB,WAAWwB,EAAS1oB,MAAM,KAAK,IAC7D2N,OAAQ,EACZ,IAAIwC,KAAKrP,QAAQiT,eAAe0P,QAAS,CACrCtT,KAAKqpB,aAAc,CACnB,IAAIG,GAAWxpB,KAAKrP,QAAQ+M,oBAAoBC,kBAAkBrQ,OAC9DwP,EAAakD,KAAKrP,QAAQ+M,oBAAoBC,iBAClDqC,MAAKjC,iBAAe3S,GACpByR,EAAYmD,KAAKmpB,yBAA0B,aACvCI,IACAA,EAAgBzB,YAAc,YAC9ByB,EAAgBvN,6BAEpBxe,EAAQD,EAAeisB,EAAU5sB,EAAMjM,GACvCqP,KAAKjC,aAAoD,YAArCiC,KAAKrP,QAAQiT,eAAe/R,KAAqBlG,SAASC,eAAe,gCAAkC4R,GAAS7R,SAASC,eAAe,0BAA4B4R,GAClK,OAAtBwC,KAAKjC,eACLiC,KAAK6oB,cAAgB7oB,KAAKjC,aAAa2oB,aAAa,MACpD1mB,KAAKmpB,yBAAyBp3B,MAAOkM,UAAW+B,KAAKjC,aAAcG,QAASpB,EAAWU,GAAmB,WACtGW,WAAYrB,EAAWU,GAAgB,QAAGY,eAAgBtB,EAAWU,GAAoB,YACzFa,eAAgBvB,EAAWU,GAAoB,cAEnDT,EAASiD,KAAKjC,aAAcurB,EAAU/5B,KAAM+5B,EAAUl6B,QAASk6B,EAAUnnB,OAAO1T,MAAO66B,EAAUnnB,OAAO/U,MAAMiG,aAGtHg1B,EAAS12B,EAAoBiL,KAAU0sB,EAAUz3B,KAAMlB,EACvD,KAAK,GAAItD,GAAI,EAAGA,EAAI+6B,EAAerU,kBAAmB1mB,IAClDyF,EAAUs1B,EAAe1uB,WAAWrM,GACpCuP,EAAOjM,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,IACpDw4B,EAAOh9B,QAAQuR,EAAqB,iBAAM,IAC1C+rB,EAAkB52B,KAAKe,GACvBlB,EAAMG,KAAK6K,GAGnBrD,GAAiB5N,SAAS2R,uBAAuB,oBAAqB,mBAAoB3M,GAC1FqP,KAAK0oB,YAAcnQ,CAEnB,KAAK,GADDgQ,GAAoB58B,SAAS2R,uBAAuB,oBAC/CJ,EAAI,EAAGA,EAAIyrB,EAAkBr7B,OAAQ4P,IAAK,CAE/C,GADApK,EAAU61B,EAAkBzrB,GACxBqrB,EAAkBj7B,OAAS,EAC3B,IAAK,GAAI0E,GAAI,EAAGA,EAAIu2B,EAAkBj7B,OAAQ0E,IACtCu2B,EAAkBv2B,GAAGlG,KAAOgH,EAAQhH,IACpCy8B,EAAkBv2B,GAAG2H,UAAUC,OAAO,oBAE1CH,EAAa3G,EAAQ4G,WAAW,IAAMyI,OAAQmnB,EAAUnnB,OAAQ5S,KAAM+5B,EAAU/5B,KAAMH,QAASk6B,EAAUl6B,UACzG0D,EAAQ6G,UAAU2W,IAAI,wBAI1B7W,GAAa3G,EAAQ4G,WAAW,IAAMyI,OAAQmnB,EAAUnnB,OAAQ5S,KAAM+5B,EAAU/5B,KAAMH,QAASk6B,EAAUl6B,UACzG0D,EAAQ6G,UAAU2W,IAAI,mBAE1B3H,IAAciC,QAAQ,EAAO9Z,KNtPvB,eMsP2CH,QAASA,EAASiB,MAAOA,EAAO4H,SAAUmvB,GAC3FR,GAAoBvd,QAAQ,EAAO9Z,KNvP7B,eMuPiDc,MAAOA,EAAO4H,SAAUmvB,GAC/Eh4B,EAAQqa,QNxPF,eMwPwBra,EAAQma,SAAWqd,EAAkBxf,QAIvE9L,GAAYmD,KAAKmpB,yBAA0B,aAC3CnpB,KAAKjC,iBAAe3S,GACpB4U,KAAKqpB,aAAc,EACnBrpB,KAAK6oB,cAAgB,GACrBtvB,EAAiB5N,SAAS2R,uBAAuB,oBAAqB,mBAAoB3M,GAC1FqP,KAAK0oB,YAAc,OAGtB,IAAInQ,EAASltB,QAAQ,kBAAoB,GAAKktB,EAASltB,QAAQ,kBAAoB,EAAG,CACnFyR,EAAakD,KAAKrP,QAAQ+M,oBAAoBC,iBAClD,IAAIqC,KAAKrP,QAAQiT,eAAe0P,SAAWtT,KAAK4oB,iBAAmBrQ,GAAYvY,KAAKqpB,YAAa,CAC7F,GAGII,GAHAjsB,MAAQ,GACR8a,MAAY,GACZ/U,MAAa,EAEjBvD,MAAK4oB,eAAiBrQ,EACtBvY,KAAKipB,cAAe,CACpB,IAAI3G,GAAch3B,SAASitB,EAASA,EAASjrB,OAAS,GAAI,IACtDo8B,EAAc/9B,SAASC,eAAe2sB,EAC1Cvb,GAAagD,KAAKopB,0BAA2B,aACzCG,IACAA,EAAgBzB,YAAc,aAElCtqB,EAA6C,YAArCwC,KAAKrP,QAAQiT,eAAe/R,KAAqBklB,WAAWwB,EAAS1oB,MAAM,KAAK,IAAMknB,WAAWwB,EAAS1oB,MAAM,KAAK,GAE7H,KAAK,GADD4N,GAAauC,KAAKrP,QAAQ+M,oBAAoBC,kBAAkBH,GAAmB,WAAElQ,OAChF4P,EAAI,EAAGA,EAAIO,EAAYP,IAC5B,IAAK,GAAIiZ,GAAI,EAAGA,EAAInW,KAAKrP,QAAQwB,OAAOC,YAAY9E,OAAQ6oB,IACxD,GAAInW,KAAKrP,QAAQ+M,oBAAoBC,kBAAkBH,GAAmB,WAAEN,GAAmB,iBAAM8C,KAAKrP,QAAQwB,OAAOC,YAAY+jB,GAAmB,eAAG,CACvJmC,EAAYnC,EACZ5S,EAAavD,KAAKrP,QAAQwB,OAAOC,YAAY+jB,GAAe,UAC5D,IAAI4S,GAAUp9B,SAASC,eAAe,yBAA2B2X,EAAa,eAAiB+U,EAAY,YACjG,KAANpb,IACAU,EAAeoC,KAAKopB,0BAA2B9G,EAAanM,EAAGuT,EAAaX,EAAS/oB,KAAKrP,QAAQwB,OAAOC,YAAa0K,GACtH2sB,EAAWzpB,KAAKopB,0BAA0B97B,OAC1C0S,KAAKopB,0BAA0BK,EAAW,GAAoB,iBAAMT,cAExEjsB,EAAS2sB,EAAaJ,EAAU/5B,KAAM+5B,EAAUl6B,QAASk6B,EAAUnnB,OAAO1T,MAAO66B,EAAUnnB,OAAO/U,MAAMiG,YACxG0J,EAASgsB,EAASO,EAAU/5B,KAAM+5B,EAAUl6B,QAASk6B,EAAUnnB,OAAO1T,MAAO66B,EAAUnnB,OAAO/U,MAAMiG,YACpGo2B,EAAWzpB,KAAKopB,0BAA0B97B,OAC1C0S,KAAKopB,0BAA0BK,EAAW,GAAoB,gBAAY,SAAE13B,KAAKg3B,QAM7F/rB,GAAagD,KAAKopB,0BAA2B,aACzCG,IACAA,EAAgBzB,YAAc,aAElC9nB,KAAKipB,cAAe,EACpBjpB,KAAK4oB,eAAiB,KAOlCM,EAAiB7yB,UAAUwhB,iBAAmB,WACtC7X,KAAKrP,QAAQy2B,aAGjBpnB,KAAKrP,QAAQ02B,GAAGxY,UAAQuI,gBAAiBpX,KAAKuZ,UAAWvZ,OAK7DkpB,EAAiB7yB,UAAUshB,oBAAsB,WACzC3X,KAAKrP,QAAQy2B,aAGjBpnB,KAAKrP,QAAQ22B,IAAIzY,UAAQuI,gBAAiBpX,KAAKuZ,YAKnD2P,EAAiB7yB,UAAUumB,cAAgB,WACvC,MAAO,oBAOXsM,EAAiB7yB,UAAUqa,QAAU,SAAU5e,GAC3CkO,KAAK2X,uBAEFuR,KCvXPrmB,GAAkC,SAAUC,EAAGlQ,GAC/C,GAAImQ,KACJ,KAAK,GAAIlD,KAAKiD,GAAOrR,OAAO4E,UAAUyJ,eAAexJ,KAAKwM,EAAGjD,IAAMjN,EAAEvH,QAAQwU,GAAK,IAC9EkD,EAAElD,GAAKiD,EAAEjD,GACb,IAAS,MAALiD,GAAqD,kBAAjCrR,QAAOuR,sBAC3B,IAAK,GAAI3V,GAAI,EAAGwS,EAAIpO,OAAOuR,sBAAsBF,GAAIzV,EAAIwS,EAAEvS,OAAQD,IAASuF,EAAEvH,QAAQwU,EAAExS,IAAM,IAC1F0V,EAAElD,EAAExS,IAAMyV,EAAEjD,EAAExS,IACtB,OAAO0V,IASP4mB,GAAgC,WAChC,QAASA,GAAe73B,GACpBkO,KAAKrP,QAAUmB,EACfkO,KAAKoc,gBAAkBpc,KAAKrP,QAAQyrB,gBACpCpc,KAAK4pB,UAAY5pB,KAAKrP,QAAQmC,QAAQhH,GAAK,kBAC3CkU,KAAK6X,mBAoLT,MAjLA8R,GAAetzB,UAAUwzB,cAAgB,SAAUj3B,GAC/C,GACIoC,GACAC,EACAoL,EACAypB,EACAC,EALAnhB,EAAQ5I,MAMqB,IAA7BpN,EAAEhF,KAAKvC,QAAQ,UACf2U,KAAKgqB,SAAU,EAEfh1B,GADA80B,EAAWl3B,GACMuzB,eAAe,GAAGnxB,MACnCC,EAAQ60B,EAAS3D,eAAe,GAAGlxB,MACnCoL,EAASypB,EAASzpB,SAGlBL,KAAKgqB,QAA4B,UAAlBp3B,EAAEq3B,YACjBj1B,EAAQpC,EAAEoC,MACVC,EAAQrC,EAAEqC,MACVoL,EAASzN,EAAEyN,OAEf,IAAInV,GAGAg/B,EACAz8B,EAIA08B,EAPA5R,EAAWlY,EAAOvU,GAClB8Q,KAIAwtB,KACAC,IAEJ,IAAI9R,EAASltB,QAAQ,gBAAkB,GAEnC,GADAuR,EAAOoD,KAAKrP,QAAQwB,OAAOC,YAAY2kB,WAAWwB,EAAS1oB,MAAM,KAAK,MACjEJ,oBAAkBmN,GAwCnB,GAvCgBA,EAAW,KAC3B1R,EAAQ0R,EAAa,OACrBwtB,EAAcxtB,EAAW,KACzButB,EAAavtB,EAAc,QAAQ,KAE/BytB,EADArqB,KAAKrP,QAAQ0Z,WACKvQ,EAAckG,KAAKoc,gBAAgBriB,OAAQqwB,EAAapqB,KAAKrP,UACvEyJ,EAAYlP,EAAO8U,KAAKrP,SAAW,MAAQqP,KAAKrP,QAAQS,gBAAgBiC,aAG9DyG,EAAckG,KAAKoc,gBAAgBriB,OAAQqwB,EAAapqB,KAAKrP,UACvEqP,KAAKrP,QAAQS,gBAAgBiC,WAAa,MAAQ+G,EAAYlP,EAAO8U,KAAKrP,UAElFhF,SAASC,eAAeoU,KAAK4pB,WAC7BM,EAAav+B,SAASC,eAAeoU,KAAK4pB,YAG1CM,EAAar+B,gBAAc,OACvBC,GAAIkU,KAAKrP,QAAQmC,QAAQhH,GAAK,kBAC9B6d,UAAW,sBACX1W,OAAQ,4CAEZtH,SAASC,eAAeoU,KAAKrP,QAAQmC,QAAQhH,GAAK,sBAAsBE,YAAYk+B,IAExFz8B,EAAWsH,EAAiBC,EAAOC,EAAO+K,KAAKrP,QAAQ4a,WACvD9d,EAASK,EAAKkS,KAAKoc,yBAA4B3uB,EAASK,EAAI,GAAKL,EAASK,EAC1EkS,KAAKoc,gBAAgBlT,UAAU1c,WAAawT,KAAKrP,QAAQ6Z,WAAWhe,WACpEwT,KAAKoc,gBAAgBlT,UAAUza,MAAQuR,KAAKrP,QAAQ6Z,WAAWvL,kBACxDe,KAAKoc,gBAAgBlT,UAAUza,MACtCuR,KAAKoc,gBAAgBlT,UAAU9Z,QAAU4Q,KAAKrP,QAAQ6Z,WAAWnL,oBAC1DW,KAAKoc,gBAAgBlT,UAAU9Z,QACtC26B,GACInf,QAAQ,EAAO9Z,KPxCL,mBOwC6B8L,KAAMA,EAC7CpO,SACIf,SAAUA,EAAUjC,KAAM6+B,EAAgB/4B,KAAM84B,EAChDlhB,UAAWlJ,KAAKoc,gBAAgBlT,UAAW5W,SAAU0N,KAAKoc,gBAAgB9pB,UAE9E3B,QAASqP,KAAKrP,QACdmC,QAASuN,EAAQsI,UAAW/V,GAE5BoN,KAAKrP,QAAQma,SAAU,CACvB,GAAIwf,IACA1f,QAAQ,EACRnd,SAAUs8B,EAAWv7B,QAAkB,SACvChD,KAAMu+B,EAAWv7B,QAAc,KAC/B0a,UAAW6gB,EAAWv7B,QAAmB,UACzC8C,KAAMy4B,EAAWv7B,QAAc,KAC/B8D,SAAUy3B,EAAWv7B,QAAkB,SACvCsC,KPxDM,mBO0DVkP,MAAKrP,QAAQqa,QP1DH,mBO0D6Bsf,EAAe,SAAUrX,GAC5DrK,EAAM2hB,WAAW,KAAMJ,EAAYD,EAAYI,SAInDtqB,MAAKrP,QAAQqa,QP/DH,mBO+D6B+e,EAAY,SAAU9W,GACzDrK,EAAM2hB,WAAWR,EAAYI,EAAYD,SAMrDlqB,MAAK6b,iBAGb8N,EAAetzB,UAAUk0B,WAAa,SAAUR,EAAYI,EAAYD,EAAYvhB,GAChF,GAAIiC,GACAqI,CACCxjB,qBAAkBs6B,IAMnBnf,EAASjC,EAAUiC,OACnBqI,EAAOtK,IALPiC,EADQmf,EAAWnf,OAEnBqI,EAFuCpQ,GAAOknB,GAAa,WAE1Cv7B,SAMhBoc,EAkBD5K,KAAK6b,iBAjBL7b,KAAKwqB,WAAa,GAAIC,YAClBlO,QAAQ,EACRmO,OAAQ,GACRp5B,KAAM2hB,EAAW,KACjB3gB,SAAU2gB,EAAe,SACzB0X,QAAS1X,EAAW,KACpB2X,UACAn9B,SAAUwlB,EAAe,SACzBtG,SAAUwd,GACVU,WAAY7qB,KAAKrP,QAAQ+C,SACzBwV,UAAW+J,EAAgB,UAC3B6X,gBAAkBh6B,KAAM,kBAAmBpC,OAAQsR,KAAKrP,QAAQyrB,mBAEpEpc,KAAKwqB,WAAWp7B,QAAU4Q,KAAKrP,QAAQ6Z,WAAWpL,oBAAsBY,KAAKwqB,WAAWp7B,QACxF4Q,KAAKwqB,WAAWO,SAASb,KAMjCP,EAAetzB,UAAU4wB,eAAiB,SAAUr0B,GAChDoN,KAAK6pB,cAAcj3B,GACnBslB,aAAalY,KAAKkY,cAClBlY,KAAKkY,aAAeE,WAAWpY,KAAK6b,cAAc/D,KAAK9X,MAAO,MAElE2pB,EAAetzB,UAAUwlB,cAAgB,WACrC,GAAIlwB,SAAS2R,uBAAuB,uBAAuBhQ,OAAS,EAAG,CACnE,GAAI09B,GAAmBr/B,SAAS2R,uBAAuB,uBAAuB,EAC9E0tB,GAAiB52B,WAAWC,YAAY22B,KAMhDrB,EAAetzB,UAAUwhB,iBAAmB,WACpC7X,KAAKrP,QAAQy2B,cAGjBpnB,KAAKrP,QAAQ02B,GAAGxY,UAAQyI,eAAgBtX,KAAK6pB,cAAe7pB,MAC5DA,KAAKrP,QAAQ02B,GAAGxY,UAAQ2I,cAAexX,KAAKinB,eAAgBjnB,QAKhE2pB,EAAetzB,UAAUshB,oBAAsB,WACvC3X,KAAKrP,QAAQy2B,cAGjBpnB,KAAKrP,QAAQ22B,IAAIzY,UAAQyI,eAAgBtX,KAAK6pB,eAC9C7pB,KAAKrP,QAAQ22B,IAAIzY,UAAQ2I,cAAexX,KAAKinB,kBAKjD0C,EAAetzB,UAAUumB,cAAgB,WACrC,MAAO,kBAOX+M,EAAetzB,UAAUqa,QAAU,SAAU5e,GAIzCkO,KAAK2X,uBAEFgS,WCxMXsB,IAAcC,OAAOC,GAAsBC,GAAqBC,GAAwBC,wTRMtE,gBAKE,uBAKK,8BAKE,6BAKH,wBAKF,0BAKI,+BAKC,mCAKG,+BAKP,uBAKD,mBAKH,sBAKM,2BAKD,yBAKD,kCAKU,wCAKJ,2BAKT"}