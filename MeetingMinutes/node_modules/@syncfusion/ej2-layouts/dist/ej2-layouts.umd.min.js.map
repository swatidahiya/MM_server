{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.paneSettings[i].size && this.paneSettings[i].size.indexOf('%') > -1 ?\n                    (parseInt(newValSize, 10) / 100) * this.element.offsetWidth : this.allPanes[index].offsetWidth;\n            }\n        }\n        staticPaneWidth = (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = this.element.offsetWidth - staticPaneWidth;\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed)\n                && (this.paneSettings[index].resizable && this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            if (document.activeElement.classList.contains('e-split-bar')) {\n                proxy.currentSeparator = document.activeElement;\n                proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n            }\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValue = {\n            size: this.paneSettings[index].size,\n            min: this.paneSettings[index].min,\n            max: this.paneSettings[index].max,\n            content: this.paneSettings[index].content,\n            resizable: this.paneSettings[index].resizable,\n            collapsed: collapsed,\n            collapsible: this.paneSettings[index].collapsible,\n            cssClass: this.paneSettings[index].size,\n        };\n        this.paneSettings.splice(index, 1, paneValue);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    var dragPanels = this.element.querySelectorAll('.' + drag);\n                    removeClass(dragPanels, [drag]);\n                    this.setClasses(this.panelCollection);\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","indexOf","offsetWidth","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","offsetHeight","nextPane","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","activeElement","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","splice","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","dragPanels"],"mappings":"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"}