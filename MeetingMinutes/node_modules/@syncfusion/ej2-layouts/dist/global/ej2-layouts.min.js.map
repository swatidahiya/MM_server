{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.paneSettings[i].size && this.paneSettings[i].size.indexOf('%') > -1 ?\n                    (parseInt(newValSize, 10) / 100) * this.element.offsetWidth : this.allPanes[index].offsetWidth;\n            }\n        }\n        staticPaneWidth = (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = this.element.offsetWidth - staticPaneWidth;\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed)\n                && (this.paneSettings[index].resizable && this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            if (document.activeElement.classList.contains('e-split-bar')) {\n                proxy.currentSeparator = document.activeElement;\n                proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n            }\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValue = {\n            size: this.paneSettings[index].size,\n            min: this.paneSettings[index].min,\n            max: this.paneSettings[index].max,\n            content: this.paneSettings[index].content,\n            resizable: this.paneSettings[index].resizable,\n            collapsed: collapsed,\n            collapsible: this.paneSettings[index].collapsible,\n            cssClass: this.paneSettings[index].size,\n        };\n        this.paneSettings.splice(index, 1, paneValue);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    var dragPanels = this.element.querySelectorAll('.' + drag);\n                    removeClass(dragPanels, [drag]);\n                    this.setClasses(this.panelCollection);\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","indexOf","offsetWidth","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","offsetHeight","nextPane","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","activeElement","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","splice","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","drag","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","dragPanels","keyEntity"],"mappings":"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"}