import { isNullOrUndefined } from '@syncfusion/ej2-base';
import * as events from '../base/constant';
import { editAction } from './crud-actions';
export function batchSaveAction(control) {
    var i;
    var batchChanges = control.getBatchChanges();
    var addedRecords = 'addedRecords';
    if (batchChanges[addedRecords].length) {
        for (i = 0; i < batchChanges[addedRecords].length; i++) {
            control.notify(events.crudAction, { value: batchChanges[addedRecords][i], action: 'batchsave' });
        }
    }
}
export function beforeBatchSaveAction(e, control) {
    var changeRecords = 'changedRecords';
    var changedRecords = e.batchChanges[changeRecords];
    if (e.batchChanges[changeRecords].length) {
        var selectedIndex = void 0;
        var addRowIndex = void 0;
        var columnName = void 0;
        var isSelfReference = !isNullOrUndefined(control.parentIdMapping);
        for (var i = 0; i < changedRecords.length; i++) {
            editAction({ value: changedRecords[i], action: 'edit' }, control, isSelfReference, addRowIndex, selectedIndex, columnName);
        }
    }
}
