{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/rowdragdrop.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            if (control.editSettings.mode === 'Batch') {\n                treeData.splice(treeData.length, 0, value);\n            }\n            else {\n                treeData.unshift(value);\n            }\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex]);\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        if (parentData.childRecords.indexOf(child) === -1) {\n            parentData.childRecords.push(child);\n        }\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nexport function batchSaveAction(control) {\n    var i;\n    var batchChanges = control.getBatchChanges();\n    var addedRecords = 'addedRecords';\n    if (batchChanges[addedRecords].length) {\n        for (i = 0; i < batchChanges[addedRecords].length; i++) {\n            control.notify(events.crudAction, { value: batchChanges[addedRecords][i], action: 'batchsave' });\n        }\n    }\n}\nexport function beforeBatchSaveAction(e, control) {\n    var changeRecords = 'changedRecords';\n    var changedRecords = e.batchChanges[changeRecords];\n    if (e.batchChanges[changeRecords].length) {\n        var selectedIndex = void 0;\n        var addRowIndex = void 0;\n        var columnName = void 0;\n        var isSelfReference = !isNullOrUndefined(control.parentIdMapping);\n        for (var i = 0; i < changedRecords.length; i++) {\n            editAction({ value: changedRecords[i], action: 'edit' }, control, isSelfReference, addRowIndex, selectedIndex, columnName);\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor, addClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var childSummary;\n        for (var i = 0; i < summaryLength; i++) {\n            if (this.parent.aggregates[i].showChildSummary) {\n                childSummary = true;\n                break;\n            }\n        }\n        if (childSummary) {\n            var checkedLen = this.parent.getSelectedRowIndexes().length;\n            var totalRecords = [];\n            var isSummaryRow = 'isSummaryRow';\n            for (var i = 0; i < this.parent.getCurrentViewRecords().length; i++) {\n                if (!this.parent.getCurrentViewRecords()[i][isSummaryRow]) {\n                    totalRecords.push(this.parent.getCurrentViewRecords()[i]);\n                }\n            }\n            if (checkedLen === totalRecords.length) {\n                var getCheckAllBox = 'getCheckAllBox';\n                var spanEle = this.parent.grid.selectionModule[getCheckAllBox]().nextElementSibling;\n                removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                addClass([spanEle], ['e-check']);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                for (var i = 0; i < childData.length; i++) {\n                    if (childData[i].hasChildRecords) {\n                        this.updateParentSelection(childData[i]);\n                    }\n                    else {\n                        this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                    }\n                }\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            if (args.row.querySelector('.e-gridchkbox')) {\n                args.row.querySelector('.e-gridchkbox').innerHTML = '';\n            }\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                if (_this.parent.grid.aggregates.length > 0) {\n                    var gridQuery = getObject('query', e);\n                    var result_1 = 'result';\n                    if (isNullOrUndefined(gridQuery)) {\n                        gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                    }\n                    if (!isNullOrUndefined(gridQuery)) {\n                        var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                        e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                    }\n                }\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        this.grid[destroyTemplate] = function (args) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', this.gridRendered, this);\n        }\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        if (!isBlazor() || !this.isServerRendered) {\n            var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n            var gridColumn = void 0;\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (!isBlazor() || prop !== 'edit') {\n                        gridColumn[prop] = gridColumns[i][prop];\n                    }\n                }\n                this.columnModel.push(new Column(gridColumn));\n            }\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        if (!isBlazor() || !this.isServerRendered) {\n            this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n            this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n            this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n            this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n        }\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { beforeBatchSaveAction, batchSaveAction } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && this.parent.editSettings.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeColumnIndexValue = void 0;\n            if (this.parent.allowRowDragAndDrop) {\n                treeColumnIndexValue = this.parent.treeColumnIndex + 1;\n            }\n            else {\n                treeColumnIndexValue = this.parent.treeColumnIndex;\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[treeColumnIndexValue],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            var targetElement = 'targetElement';\n            if (!isNullOrUndefined(this.parent[targetElement])) {\n                var row = this.parent[targetElement].closest('tr');\n                this.parent.collapseRow(row);\n                this.parent[targetElement] = null;\n            }\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                if (records[index].expanded) {\n                    index += findChildrenRecords(records[index]).length;\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    Edit.prototype.beforeBatchSave = function (e) {\n        beforeBatchSaveAction(e, this.parent);\n    };\n    Edit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            batchSaveAction(this.parent);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(this.parent, getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            if (!isNullOrUndefined(spanContent.children) && spanContent.children.length >= 1\n                && spanContent.children[0].classList.contains('e-treecolumn-container')) {\n                spanContent.children[0].style.display = 'inline-block';\n                spanContent.children[0].style.verticalAlign = 'middle';\n                ele.style.display = 'inline-block';\n            }\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                        break;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","batchSaveAction","notify","events.crudAction","beforeBatchSaveAction","changedRecords","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","crudAction","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","childSummary","summaryLength","aggregates","showChildSummary","checkedLen","getSelectedRowIndexes","totalRecords","spanEle","selectionModule","removeClass","addClass","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","container","containerELe","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","checkedRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","updatedData","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","rows","getContentTable","slice","call","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","ej2Grids","gridRendered","setBlazorGUID","bindGridEvents","gridObserver","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","cellEdit","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","toolbarClick","callBackPromise","toolbarargs","cancel","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","promise","beforeBatchSave","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","toString","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","f","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","document","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","tObj","saveCell","dropIndex","getToolbar","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","Resize","GridResize","fName","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","beginAdd","keyPressed","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","batchSave","beforeStartEdit","beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeColumnIndexValue","form","parentNode","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","parentIndex","data2","treecell","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","childIndex","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","setVirtualHeight","getRowHeight","contents","scrollTop","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","content","scrollHeight","upScroll","offset","top","downScroll","vHeight","getBoundingClientRect","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","scrollLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","left","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","dropPosition","dropRows","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","removeChild","spanContent","paddingLeft","verticalAlign","errorelem","border","box","body","docElem","documentElement","window","pageYOffset","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","recordLevel","childItem","deletedRow","removeRecords","flatParentData","removeChildItem","idz","recordIndex_1","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze"],"mappings":"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"}