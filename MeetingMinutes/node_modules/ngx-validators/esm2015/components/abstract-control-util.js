export class AbstractControlUtil {
    static isNotPresent(control) {
        const value = control.value;
        if (value === undefined || value === null) {
            return true;
        }
        return value !== "" ? false : true;
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static addError(control, errorId, value) {
        if (!control.errors) {
            control.setErrors({ [errorId]: value });
        }
        else if (!control.hasError(errorId)) {
            control.errors[errorId] = value;
        }
    }
    static removeError(control, errorId) {
        if (control.errors && control.hasError(errorId)) {
            if (Object.keys(control.errors).length > 1) {
                delete control.errors[errorId];
            }
            else {
                control.setErrors(null);
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtY29udHJvbC11dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXZhbGlkYXRvcnMvIiwic291cmNlcyI6WyJjb21wb25lbnRzL2Fic3RyYWN0LWNvbnRyb2wtdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLE9BQU8sbUJBQW1CO0lBQzlCLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBd0I7UUFDMUMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUM1QixJQUFJLEtBQUssS0FBSyxTQUFTLElBQUksS0FBSyxLQUFLLElBQUksRUFBRTtZQUN6QyxPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNyQyxDQUFDO0lBRUQsOERBQThEO0lBQzlELE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBd0IsRUFBRSxPQUFlLEVBQUUsS0FBVTtRQUNuRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRTtZQUNuQixPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ3pDO2FBQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDckMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUM7U0FDakM7SUFDSCxDQUFDO0lBRUQsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUF3QixFQUFFLE9BQWU7UUFDMUQsSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDL0MsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUMxQyxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDaEM7aUJBQU07Z0JBQ0wsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN6QjtTQUNGO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5cbmV4cG9ydCBjbGFzcyBBYnN0cmFjdENvbnRyb2xVdGlsIHtcbiAgc3RhdGljIGlzTm90UHJlc2VudChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiBib29sZWFuIHtcbiAgICBjb25zdCB2YWx1ZSA9IGNvbnRyb2wudmFsdWU7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUgIT09IFwiXCIgPyBmYWxzZSA6IHRydWU7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBzdGF0aWMgYWRkRXJyb3IoY29udHJvbDogQWJzdHJhY3RDb250cm9sLCBlcnJvcklkOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBpZiAoIWNvbnRyb2wuZXJyb3JzKSB7XG4gICAgICBjb250cm9sLnNldEVycm9ycyh7IFtlcnJvcklkXTogdmFsdWUgfSk7XG4gICAgfSBlbHNlIGlmICghY29udHJvbC5oYXNFcnJvcihlcnJvcklkKSkge1xuICAgICAgY29udHJvbC5lcnJvcnNbZXJyb3JJZF0gPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgcmVtb3ZlRXJyb3IoY29udHJvbDogQWJzdHJhY3RDb250cm9sLCBlcnJvcklkOiBzdHJpbmcpIHtcbiAgICBpZiAoY29udHJvbC5lcnJvcnMgJiYgY29udHJvbC5oYXNFcnJvcihlcnJvcklkKSkge1xuICAgICAgaWYgKE9iamVjdC5rZXlzKGNvbnRyb2wuZXJyb3JzKS5sZW5ndGggPiAxKSB7XG4gICAgICAgIGRlbGV0ZSBjb250cm9sLmVycm9yc1tlcnJvcklkXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnRyb2wuc2V0RXJyb3JzKG51bGwpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19