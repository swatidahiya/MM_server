import * as tslib_1 from "tslib";
import { Directive, Input, forwardRef } from "@angular/core";
import { NG_VALIDATORS } from "@angular/forms";
import { CreditCardValidators } from "./creditcard-validators";
var CreditCardValidatorDirective = /** @class */ (function () {
    function CreditCardValidatorDirective() {
        this.creditCard = "all";
    }
    CreditCardValidatorDirective_1 = CreditCardValidatorDirective;
    CreditCardValidatorDirective.prototype.ngOnInit = function () {
        this.setCreditcardValidator(this.creditCard);
    };
    CreditCardValidatorDirective.prototype.setCreditcardValidator = function (type) {
        switch (type) {
            case "all":
                this.validator = CreditCardValidators.isCreditCard;
                break;
            case "americanExpress":
                this.validator = CreditCardValidators.americanExpress;
                break;
            case "dinersclub":
                this.validator = CreditCardValidators.dinersclub;
                break;
            case "discover":
                this.validator = CreditCardValidators.discover;
                break;
            case "jcb":
                this.validator = CreditCardValidators.jcb;
                break;
            case "maestro":
                this.validator = CreditCardValidators.maestro;
                break;
            case "mastercard":
                this.validator = CreditCardValidators.mastercard;
                break;
            case "visa":
                this.validator = CreditCardValidators.visa;
                break;
            default:
                this.validator = CreditCardValidators.isCreditCard;
                break;
        }
    };
    CreditCardValidatorDirective.prototype.ngOnChanges = function (changes) {
        if (changes.creditCard && !changes.creditCard.isFirstChange()) {
            this.setCreditcardValidator(changes.creditCard.currentValue);
            this.onChange();
        }
    };
    CreditCardValidatorDirective.prototype.validate = function (c) {
        return this.validator(c);
    };
    CreditCardValidatorDirective.prototype.registerOnValidatorChange = function (fn) {
        this.onChange = fn;
    };
    var CreditCardValidatorDirective_1;
    tslib_1.__decorate([
        Input()
    ], CreditCardValidatorDirective.prototype, "creditCard", void 0);
    CreditCardValidatorDirective = CreditCardValidatorDirective_1 = tslib_1.__decorate([
        Directive({
            selector: "[creditCard][formControlName],[creditCard][formControl],[creditCard][ngModel]",
            providers: [
                {
                    provide: NG_VALIDATORS,
                    // eslint-disable-next-line @typescript-eslint/no-use-before-define
                    useExisting: forwardRef(function () { return CreditCardValidatorDirective_1; }),
                    multi: true,
                },
            ],
        })
    ], CreditCardValidatorDirective);
    return CreditCardValidatorDirective;
}());
export { CreditCardValidatorDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlZGl0Y2FyZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtdmFsaWRhdG9ycy8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY3JlZGl0Y2FyZC9jcmVkaXRjYXJkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFvQyxNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQUUsYUFBYSxFQUE2RCxNQUFNLGdCQUFnQixDQUFDO0FBRTFHLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBYS9EO0lBWEE7UUFZVyxlQUFVLEdBQUcsS0FBSyxDQUFDO0lBdUQ5QixDQUFDO3FDQXhEWSw0QkFBNEI7SUFNdkMsK0NBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELDZEQUFzQixHQUF0QixVQUF1QixJQUFZO1FBQ2pDLFFBQVEsSUFBSSxFQUFFO1lBQ1osS0FBSyxLQUFLO2dCQUNSLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsWUFBWSxDQUFDO2dCQUNuRCxNQUFNO1lBQ1IsS0FBSyxpQkFBaUI7Z0JBQ3BCLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsZUFBZSxDQUFDO2dCQUN0RCxNQUFNO1lBQ1IsS0FBSyxZQUFZO2dCQUNmLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsVUFBVSxDQUFDO2dCQUNqRCxNQUFNO1lBQ1IsS0FBSyxVQUFVO2dCQUNiLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsUUFBUSxDQUFDO2dCQUMvQyxNQUFNO1lBQ1IsS0FBSyxLQUFLO2dCQUNSLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsR0FBRyxDQUFDO2dCQUMxQyxNQUFNO1lBQ1IsS0FBSyxTQUFTO2dCQUNaLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsT0FBTyxDQUFDO2dCQUM5QyxNQUFNO1lBQ1IsS0FBSyxZQUFZO2dCQUNmLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsVUFBVSxDQUFDO2dCQUNqRCxNQUFNO1lBQ1IsS0FBSyxNQUFNO2dCQUNULElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsSUFBSSxDQUFDO2dCQUMzQyxNQUFNO1lBQ1I7Z0JBQ0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxvQkFBb0IsQ0FBQyxZQUFZLENBQUM7Z0JBQ25ELE1BQU07U0FDVDtJQUNILENBQUM7SUFFRCxrREFBVyxHQUFYLFVBQVksT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsVUFBVSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsRUFBRTtZQUM3RCxJQUFJLENBQUMsc0JBQXNCLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUM3RCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7SUFDSCxDQUFDO0lBRUQsK0NBQVEsR0FBUixVQUFTLENBQWtCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsZ0VBQXlCLEdBQXpCLFVBQTBCLEVBQWM7UUFDdEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDckIsQ0FBQzs7SUF0RFE7UUFBUixLQUFLLEVBQUU7b0VBQW9CO0lBRGpCLDRCQUE0QjtRQVh4QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsK0VBQStFO1lBQ3pGLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsYUFBYTtvQkFDdEIsbUVBQW1FO29CQUNuRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSw4QkFBNEIsRUFBNUIsQ0FBNEIsQ0FBQztvQkFDM0QsS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtTQUNGLENBQUM7T0FDVyw0QkFBNEIsQ0F3RHhDO0lBQUQsbUNBQUM7Q0FBQSxBQXhERCxJQXdEQztTQXhEWSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBmb3J3YXJkUmVmLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcyB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBOR19WQUxJREFUT1JTLCBWYWxpZGF0b3IsIFZhbGlkYXRvckZuLCBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcblxuaW1wb3J0IHsgQ3JlZGl0Q2FyZFZhbGlkYXRvcnMgfSBmcm9tIFwiLi9jcmVkaXRjYXJkLXZhbGlkYXRvcnNcIjtcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBcIltjcmVkaXRDYXJkXVtmb3JtQ29udHJvbE5hbWVdLFtjcmVkaXRDYXJkXVtmb3JtQ29udHJvbF0sW2NyZWRpdENhcmRdW25nTW9kZWxdXCIsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBDcmVkaXRDYXJkVmFsaWRhdG9yRGlyZWN0aXZlKSxcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIENyZWRpdENhcmRWYWxpZGF0b3JEaXJlY3RpdmUgaW1wbGVtZW50cyBWYWxpZGF0b3IsIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgY3JlZGl0Q2FyZCA9IFwiYWxsXCI7XG5cbiAgcHJpdmF0ZSB2YWxpZGF0b3I6IFZhbGlkYXRvckZuO1xuICBwcml2YXRlIG9uQ2hhbmdlOiAoKSA9PiB2b2lkO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0Q3JlZGl0Y2FyZFZhbGlkYXRvcih0aGlzLmNyZWRpdENhcmQpO1xuICB9XG5cbiAgc2V0Q3JlZGl0Y2FyZFZhbGlkYXRvcih0eXBlOiBzdHJpbmcpIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgXCJhbGxcIjpcbiAgICAgICAgdGhpcy52YWxpZGF0b3IgPSBDcmVkaXRDYXJkVmFsaWRhdG9ycy5pc0NyZWRpdENhcmQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImFtZXJpY2FuRXhwcmVzc1wiOlxuICAgICAgICB0aGlzLnZhbGlkYXRvciA9IENyZWRpdENhcmRWYWxpZGF0b3JzLmFtZXJpY2FuRXhwcmVzcztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiZGluZXJzY2x1YlwiOlxuICAgICAgICB0aGlzLnZhbGlkYXRvciA9IENyZWRpdENhcmRWYWxpZGF0b3JzLmRpbmVyc2NsdWI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImRpc2NvdmVyXCI6XG4gICAgICAgIHRoaXMudmFsaWRhdG9yID0gQ3JlZGl0Q2FyZFZhbGlkYXRvcnMuZGlzY292ZXI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImpjYlwiOlxuICAgICAgICB0aGlzLnZhbGlkYXRvciA9IENyZWRpdENhcmRWYWxpZGF0b3JzLmpjYjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwibWFlc3Ryb1wiOlxuICAgICAgICB0aGlzLnZhbGlkYXRvciA9IENyZWRpdENhcmRWYWxpZGF0b3JzLm1hZXN0cm87XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIm1hc3RlcmNhcmRcIjpcbiAgICAgICAgdGhpcy52YWxpZGF0b3IgPSBDcmVkaXRDYXJkVmFsaWRhdG9ycy5tYXN0ZXJjYXJkO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJ2aXNhXCI6XG4gICAgICAgIHRoaXMudmFsaWRhdG9yID0gQ3JlZGl0Q2FyZFZhbGlkYXRvcnMudmlzYTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aGlzLnZhbGlkYXRvciA9IENyZWRpdENhcmRWYWxpZGF0b3JzLmlzQ3JlZGl0Q2FyZDtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLmNyZWRpdENhcmQgJiYgIWNoYW5nZXMuY3JlZGl0Q2FyZC5pc0ZpcnN0Q2hhbmdlKCkpIHtcbiAgICAgIHRoaXMuc2V0Q3JlZGl0Y2FyZFZhbGlkYXRvcihjaGFuZ2VzLmNyZWRpdENhcmQuY3VycmVudFZhbHVlKTtcbiAgICAgIHRoaXMub25DaGFuZ2UoKTtcbiAgICB9XG4gIH1cblxuICB2YWxpZGF0ZShjOiBBYnN0cmFjdENvbnRyb2wpOiBWYWxpZGF0aW9uRXJyb3JzIHtcbiAgICByZXR1cm4gdGhpcy52YWxpZGF0b3IoYyk7XG4gIH1cblxuICByZWdpc3Rlck9uVmFsaWRhdG9yQ2hhbmdlKGZuOiAoKSA9PiB2b2lkKTogdm9pZCB7XG4gICAgdGhpcy5vbkNoYW5nZSA9IGZuO1xuICB9XG59XG4iXX0=