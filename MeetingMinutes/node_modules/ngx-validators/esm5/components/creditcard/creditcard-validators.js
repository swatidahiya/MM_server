import { AbstractControlUtil } from "./../abstract-control-util";
var visaRegex = "^(?:4[0-9]{12})(?:[0-9]{3})?$";
var americanExpressRegex = "^(?:3[47][0-9]{13})$";
var maestroRegex = "^(?:(?:5[0678]\\d\\d|6304|6390|67\\d\\d)\\d{8,15})$";
var jcbRegex = "^(?:(?:2131|1800|35\\d{3})\\d{11})$";
var discoverRegex = "^(?:6(?:011|5[0-9]{2})(?:[0-9]{12}))$";
var dinersclubRegex = "^(?:3(?:0[0-5]|[68][0-9])[0-9]{11})$";
var mastercardRegex = "^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$";
var CreditCardValidators = /** @class */ (function () {
    function CreditCardValidators() {
    }
    CreditCardValidators.isCreditCard = function (control) {
        if (AbstractControlUtil.isNotPresent(control))
            return undefined;
        if (new RegExp(americanExpressRegex +
            "|" +
            visaRegex +
            "|" +
            maestroRegex +
            "|" +
            jcbRegex +
            "|" +
            discoverRegex +
            "|" +
            mastercardRegex +
            "|" +
            dinersclubRegex).test(control.value)) {
            return undefined;
        }
        return { creditcard: true };
    };
    CreditCardValidators.americanExpress = function (control) {
        if (AbstractControlUtil.isNotPresent(control))
            return undefined;
        if (new RegExp(americanExpressRegex).test(control.value)) {
            return undefined;
        }
        return { americanExpress: true };
    };
    CreditCardValidators.dinersclub = function (control) {
        if (AbstractControlUtil.isNotPresent(control))
            return undefined;
        if (new RegExp(dinersclubRegex).test(control.value)) {
            return undefined;
        }
        return { dinersclub: true };
    };
    CreditCardValidators.discover = function (control) {
        if (AbstractControlUtil.isNotPresent(control))
            return undefined;
        if (new RegExp(discoverRegex).test(control.value)) {
            return undefined;
        }
        return { discover: true };
    };
    CreditCardValidators.jcb = function (control) {
        if (AbstractControlUtil.isNotPresent(control))
            return undefined;
        if (new RegExp(jcbRegex).test(control.value)) {
            return undefined;
        }
        return { jcb: true };
    };
    CreditCardValidators.maestro = function (control) {
        if (AbstractControlUtil.isNotPresent(control))
            return undefined;
        if (new RegExp(maestroRegex).test(control.value)) {
            return undefined;
        }
        return { maestro: true };
    };
    CreditCardValidators.mastercard = function (control) {
        if (AbstractControlUtil.isNotPresent(control))
            return undefined;
        if (new RegExp(mastercardRegex).test(control.value)) {
            return undefined;
        }
        return { mastercard: true };
    };
    CreditCardValidators.visa = function (control) {
        if (AbstractControlUtil.isNotPresent(control))
            return undefined;
        if (new RegExp(visaRegex).test(control.value)) {
            return undefined;
        }
        return { visa: true };
    };
    return CreditCardValidators;
}());
export { CreditCardValidators };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlZGl0Y2FyZC12YWxpZGF0b3JzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXZhbGlkYXRvcnMvIiwic291cmNlcyI6WyJjb21wb25lbnRzL2NyZWRpdGNhcmQvY3JlZGl0Y2FyZC12YWxpZGF0b3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWpFLElBQU0sU0FBUyxHQUFHLCtCQUErQixDQUFDO0FBQ2xELElBQU0sb0JBQW9CLEdBQUcsc0JBQXNCLENBQUM7QUFDcEQsSUFBTSxZQUFZLEdBQUcscURBQXFELENBQUM7QUFDM0UsSUFBTSxRQUFRLEdBQUcscUNBQXFDLENBQUM7QUFDdkQsSUFBTSxhQUFhLEdBQUcsdUNBQXVDLENBQUM7QUFDOUQsSUFBTSxlQUFlLEdBQUcsc0NBQXNDLENBQUM7QUFDL0QsSUFBTSxlQUFlLEdBQUcscUZBQXFGLENBQUM7QUFFOUc7SUFBQTtJQThFQSxDQUFDO0lBN0VlLGlDQUFZLEdBQTFCLFVBQTJCLE9BQXdCO1FBQ2pELElBQUksbUJBQW1CLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQ2hFLElBQ0UsSUFBSSxNQUFNLENBQ1Isb0JBQW9CO1lBQ2xCLEdBQUc7WUFDSCxTQUFTO1lBQ1QsR0FBRztZQUNILFlBQVk7WUFDWixHQUFHO1lBQ0gsUUFBUTtZQUNSLEdBQUc7WUFDSCxhQUFhO1lBQ2IsR0FBRztZQUNILGVBQWU7WUFDZixHQUFHO1lBQ0gsZUFBZSxDQUNsQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQ3JCO1lBQ0EsT0FBTyxTQUFTLENBQUM7U0FDbEI7UUFDRCxPQUFPLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFYSxvQ0FBZSxHQUE3QixVQUE4QixPQUF3QjtRQUNwRCxJQUFJLG1CQUFtQixDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUM7WUFBRSxPQUFPLFNBQVMsQ0FBQztRQUNoRSxJQUFJLElBQUksTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN4RCxPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDbkMsQ0FBQztJQUVhLCtCQUFVLEdBQXhCLFVBQXlCLE9BQXdCO1FBQy9DLElBQUksbUJBQW1CLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQ2hFLElBQUksSUFBSSxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNuRCxPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVhLDZCQUFRLEdBQXRCLFVBQXVCLE9BQXdCO1FBQzdDLElBQUksbUJBQW1CLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQ2hFLElBQUksSUFBSSxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNqRCxPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUNhLHdCQUFHLEdBQWpCLFVBQWtCLE9BQXdCO1FBQ3hDLElBQUksbUJBQW1CLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQ2hFLElBQUksSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUM1QyxPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUNhLDRCQUFPLEdBQXJCLFVBQXNCLE9BQXdCO1FBQzVDLElBQUksbUJBQW1CLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQ2hFLElBQUksSUFBSSxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNoRCxPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVhLCtCQUFVLEdBQXhCLFVBQXlCLE9BQXdCO1FBQy9DLElBQUksbUJBQW1CLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQ2hFLElBQUksSUFBSSxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNuRCxPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVhLHlCQUFJLEdBQWxCLFVBQW1CLE9BQXdCO1FBQ3pDLElBQUksbUJBQW1CLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQ2hFLElBQUksSUFBSSxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUM3QyxPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUNILDJCQUFDO0FBQUQsQ0FBQyxBQTlFRCxJQThFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sVXRpbCB9IGZyb20gXCIuLy4uL2Fic3RyYWN0LWNvbnRyb2wtdXRpbFwiO1xuXG5jb25zdCB2aXNhUmVnZXggPSBcIl4oPzo0WzAtOV17MTJ9KSg/OlswLTldezN9KT8kXCI7XG5jb25zdCBhbWVyaWNhbkV4cHJlc3NSZWdleCA9IFwiXig/OjNbNDddWzAtOV17MTN9KSRcIjtcbmNvbnN0IG1hZXN0cm9SZWdleCA9IFwiXig/Oig/OjVbMDY3OF1cXFxcZFxcXFxkfDYzMDR8NjM5MHw2N1xcXFxkXFxcXGQpXFxcXGR7OCwxNX0pJFwiO1xuY29uc3QgamNiUmVnZXggPSBcIl4oPzooPzoyMTMxfDE4MDB8MzVcXFxcZHszfSlcXFxcZHsxMX0pJFwiO1xuY29uc3QgZGlzY292ZXJSZWdleCA9IFwiXig/OjYoPzowMTF8NVswLTldezJ9KSg/OlswLTldezEyfSkpJFwiO1xuY29uc3QgZGluZXJzY2x1YlJlZ2V4ID0gXCJeKD86Myg/OjBbMC01XXxbNjhdWzAtOV0pWzAtOV17MTF9KSRcIjtcbmNvbnN0IG1hc3RlcmNhcmRSZWdleCA9IFwiXig/OjVbMS01XVswLTldezJ9fDIyMlsxLTldfDIyWzMtOV1bMC05XXwyWzMtNl1bMC05XXsyfXwyN1swMV1bMC05XXwyNzIwKVswLTldezEyfSRcIjtcblxuZXhwb3J0IGNsYXNzIENyZWRpdENhcmRWYWxpZGF0b3JzIHtcbiAgcHVibGljIHN0YXRpYyBpc0NyZWRpdENhcmQoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBib29sZWFuIH0ge1xuICAgIGlmIChBYnN0cmFjdENvbnRyb2xVdGlsLmlzTm90UHJlc2VudChjb250cm9sKSkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICBpZiAoXG4gICAgICBuZXcgUmVnRXhwKFxuICAgICAgICBhbWVyaWNhbkV4cHJlc3NSZWdleCArXG4gICAgICAgICAgXCJ8XCIgK1xuICAgICAgICAgIHZpc2FSZWdleCArXG4gICAgICAgICAgXCJ8XCIgK1xuICAgICAgICAgIG1hZXN0cm9SZWdleCArXG4gICAgICAgICAgXCJ8XCIgK1xuICAgICAgICAgIGpjYlJlZ2V4ICtcbiAgICAgICAgICBcInxcIiArXG4gICAgICAgICAgZGlzY292ZXJSZWdleCArXG4gICAgICAgICAgXCJ8XCIgK1xuICAgICAgICAgIG1hc3RlcmNhcmRSZWdleCArXG4gICAgICAgICAgXCJ8XCIgK1xuICAgICAgICAgIGRpbmVyc2NsdWJSZWdleFxuICAgICAgKS50ZXN0KGNvbnRyb2wudmFsdWUpXG4gICAgKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4geyBjcmVkaXRjYXJkOiB0cnVlIH07XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGFtZXJpY2FuRXhwcmVzcyhjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfSB7XG4gICAgaWYgKEFic3RyYWN0Q29udHJvbFV0aWwuaXNOb3RQcmVzZW50KGNvbnRyb2wpKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGlmIChuZXcgUmVnRXhwKGFtZXJpY2FuRXhwcmVzc1JlZ2V4KS50ZXN0KGNvbnRyb2wudmFsdWUpKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4geyBhbWVyaWNhbkV4cHJlc3M6IHRydWUgfTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZGluZXJzY2x1Yihjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfSB7XG4gICAgaWYgKEFic3RyYWN0Q29udHJvbFV0aWwuaXNOb3RQcmVzZW50KGNvbnRyb2wpKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGlmIChuZXcgUmVnRXhwKGRpbmVyc2NsdWJSZWdleCkudGVzdChjb250cm9sLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHsgZGluZXJzY2x1YjogdHJ1ZSB9O1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBkaXNjb3Zlcihjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfSB7XG4gICAgaWYgKEFic3RyYWN0Q29udHJvbFV0aWwuaXNOb3RQcmVzZW50KGNvbnRyb2wpKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGlmIChuZXcgUmVnRXhwKGRpc2NvdmVyUmVnZXgpLnRlc3QoY29udHJvbC52YWx1ZSkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiB7IGRpc2NvdmVyOiB0cnVlIH07XG4gIH1cbiAgcHVibGljIHN0YXRpYyBqY2IoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBib29sZWFuIH0ge1xuICAgIGlmIChBYnN0cmFjdENvbnRyb2xVdGlsLmlzTm90UHJlc2VudChjb250cm9sKSkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICBpZiAobmV3IFJlZ0V4cChqY2JSZWdleCkudGVzdChjb250cm9sLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHsgamNiOiB0cnVlIH07XG4gIH1cbiAgcHVibGljIHN0YXRpYyBtYWVzdHJvKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IHsgW2tleTogc3RyaW5nXTogYm9vbGVhbiB9IHtcbiAgICBpZiAoQWJzdHJhY3RDb250cm9sVXRpbC5pc05vdFByZXNlbnQoY29udHJvbCkpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgaWYgKG5ldyBSZWdFeHAobWFlc3Ryb1JlZ2V4KS50ZXN0KGNvbnRyb2wudmFsdWUpKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4geyBtYWVzdHJvOiB0cnVlIH07XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIG1hc3RlcmNhcmQoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBib29sZWFuIH0ge1xuICAgIGlmIChBYnN0cmFjdENvbnRyb2xVdGlsLmlzTm90UHJlc2VudChjb250cm9sKSkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICBpZiAobmV3IFJlZ0V4cChtYXN0ZXJjYXJkUmVnZXgpLnRlc3QoY29udHJvbC52YWx1ZSkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiB7IG1hc3RlcmNhcmQ6IHRydWUgfTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgdmlzYShjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfSB7XG4gICAgaWYgKEFic3RyYWN0Q29udHJvbFV0aWwuaXNOb3RQcmVzZW50KGNvbnRyb2wpKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGlmIChuZXcgUmVnRXhwKHZpc2FSZWdleCkudGVzdChjb250cm9sLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHsgdmlzYTogdHJ1ZSB9O1xuICB9XG59XG4iXX0=