import * as tslib_1 from "tslib";
import { EmptyStringValidatorDirective, IsInRangeValidatorDirective, IsNumberValidatorDirective, MaxValidatorDirective, MinValidatorDirective, WhiteSpaceValidatorDirective, } from "./universal/universal.directive";
import { NgModule } from "@angular/core";
import { CreditCardValidatorDirective } from "./creditcard/creditcard.directive";
import { EmailValidatorDirective, EmailSuggestValidatorDirective } from "./email/email.directive";
import { PasswordValidatorDirective } from "./password/password.directive";
import { EqualToDirective } from "./equal-to/equal-to.directive";
var ValidatorsModule = /** @class */ (function () {
    function ValidatorsModule() {
    }
    ValidatorsModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                CreditCardValidatorDirective,
                EmailValidatorDirective,
                EmailSuggestValidatorDirective,
                PasswordValidatorDirective,
                IsInRangeValidatorDirective,
                IsNumberValidatorDirective,
                MaxValidatorDirective,
                MinValidatorDirective,
                WhiteSpaceValidatorDirective,
                EmptyStringValidatorDirective,
                EqualToDirective,
            ],
            exports: [
                CreditCardValidatorDirective,
                EmailValidatorDirective,
                EmailSuggestValidatorDirective,
                PasswordValidatorDirective,
                IsInRangeValidatorDirective,
                IsNumberValidatorDirective,
                MaxValidatorDirective,
                MinValidatorDirective,
                WhiteSpaceValidatorDirective,
                EmptyStringValidatorDirective,
                EqualToDirective,
            ],
        })
    ], ValidatorsModule);
    return ValidatorsModule;
}());
export { ValidatorsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdG9ycy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtdmFsaWRhdG9ycy8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvdmFsaWRhdG9ycy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCw2QkFBNkIsRUFDN0IsMkJBQTJCLEVBQzNCLDBCQUEwQixFQUMxQixxQkFBcUIsRUFDckIscUJBQXFCLEVBQ3JCLDRCQUE0QixHQUM3QixNQUFNLGlDQUFpQyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDakYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLDhCQUE4QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEcsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDM0UsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUE4QmpFO0lBQUE7SUFBK0IsQ0FBQztJQUFuQixnQkFBZ0I7UUE1QjVCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWiw0QkFBNEI7Z0JBQzVCLHVCQUF1QjtnQkFDdkIsOEJBQThCO2dCQUM5QiwwQkFBMEI7Z0JBQzFCLDJCQUEyQjtnQkFDM0IsMEJBQTBCO2dCQUMxQixxQkFBcUI7Z0JBQ3JCLHFCQUFxQjtnQkFDckIsNEJBQTRCO2dCQUM1Qiw2QkFBNkI7Z0JBQzdCLGdCQUFnQjthQUNqQjtZQUNELE9BQU8sRUFBRTtnQkFDUCw0QkFBNEI7Z0JBQzVCLHVCQUF1QjtnQkFDdkIsOEJBQThCO2dCQUM5QiwwQkFBMEI7Z0JBQzFCLDJCQUEyQjtnQkFDM0IsMEJBQTBCO2dCQUMxQixxQkFBcUI7Z0JBQ3JCLHFCQUFxQjtnQkFDckIsNEJBQTRCO2dCQUM1Qiw2QkFBNkI7Z0JBQzdCLGdCQUFnQjthQUNqQjtTQUNGLENBQUM7T0FDVyxnQkFBZ0IsQ0FBRztJQUFELHVCQUFDO0NBQUEsQUFBaEMsSUFBZ0M7U0FBbkIsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRW1wdHlTdHJpbmdWYWxpZGF0b3JEaXJlY3RpdmUsXG4gIElzSW5SYW5nZVZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgSXNOdW1iZXJWYWxpZGF0b3JEaXJlY3RpdmUsXG4gIE1heFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgTWluVmFsaWRhdG9yRGlyZWN0aXZlLFxuICBXaGl0ZVNwYWNlVmFsaWRhdG9yRGlyZWN0aXZlLFxufSBmcm9tIFwiLi91bml2ZXJzYWwvdW5pdmVyc2FsLmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5pbXBvcnQgeyBDcmVkaXRDYXJkVmFsaWRhdG9yRGlyZWN0aXZlIH0gZnJvbSBcIi4vY3JlZGl0Y2FyZC9jcmVkaXRjYXJkLmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHsgRW1haWxWYWxpZGF0b3JEaXJlY3RpdmUsIEVtYWlsU3VnZ2VzdFZhbGlkYXRvckRpcmVjdGl2ZSB9IGZyb20gXCIuL2VtYWlsL2VtYWlsLmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHsgUGFzc3dvcmRWYWxpZGF0b3JEaXJlY3RpdmUgfSBmcm9tIFwiLi9wYXNzd29yZC9wYXNzd29yZC5kaXJlY3RpdmVcIjtcbmltcG9ydCB7IEVxdWFsVG9EaXJlY3RpdmUgfSBmcm9tIFwiLi9lcXVhbC10by9lcXVhbC10by5kaXJlY3RpdmVcIjtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgQ3JlZGl0Q2FyZFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBFbWFpbFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBFbWFpbFN1Z2dlc3RWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgUGFzc3dvcmRWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgSXNJblJhbmdlVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgIElzTnVtYmVyVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgIE1heFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBNaW5WYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgV2hpdGVTcGFjZVZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBFbXB0eVN0cmluZ1ZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBFcXVhbFRvRGlyZWN0aXZlLFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgQ3JlZGl0Q2FyZFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBFbWFpbFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBFbWFpbFN1Z2dlc3RWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgUGFzc3dvcmRWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgSXNJblJhbmdlVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgIElzTnVtYmVyVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgIE1heFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBNaW5WYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgV2hpdGVTcGFjZVZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBFbXB0eVN0cmluZ1ZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBFcXVhbFRvRGlyZWN0aXZlLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBWYWxpZGF0b3JzTW9kdWxlIHt9XG4iXX0=