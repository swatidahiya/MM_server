import { OnInit, OnChanges, SimpleChanges } from "@angular/core";
import { AbstractControl, Validator, ValidationErrors } from "@angular/forms";
export declare class WhiteSpaceValidatorDirective implements Validator, OnInit {
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): ValidationErrors;
}
export declare class EmptyStringValidatorDirective implements Validator, OnInit {
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): ValidationErrors;
}
export declare class IsNumberValidatorDirective implements Validator, OnInit {
    private validator;
    ngOnInit(): void;
    validate(c: AbstractControl): ValidationErrors;
}
export declare class IsInRangeValidatorDirective implements Validator, OnInit, OnChanges {
    minValue: number;
    maxValue: number;
    private validator;
    private onChange;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    validate(c: AbstractControl): ValidationErrors;
    registerOnValidatorChange(fn: () => void): void;
}
export declare class MaxValidatorDirective implements Validator, OnInit, OnChanges {
    max: number;
    private validator;
    private onChange;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    validate(c: AbstractControl): ValidationErrors;
    registerOnValidatorChange(fn: () => void): void;
}
export declare class MinValidatorDirective implements Validator, OnInit, OnChanges {
    min: number;
    private validator;
    private onChange;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    validate(c: AbstractControl): ValidationErrors;
    registerOnValidatorChange(fn: () => void): void;
}
