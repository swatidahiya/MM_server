import { OnInit, EventEmitter, ElementRef } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { ChatAdapter } from './core/chat-adapter';
import { IChatGroupAdapter } from './core/chat-group-adapter';
import { User } from "./core/user";
import { ParticipantResponse } from "./core/participant-response";
import { Message } from "./core/message";
import { MessageType } from "./core/message-type.enum";
import { Window } from "./core/window";
import { ChatParticipantStatus } from "./core/chat-participant-status.enum";
import { Localization } from './core/localization';
import { IChatController } from './core/chat-controller';
import { IFileUploadAdapter } from './core/file-upload-adapter';
import { Theme } from './core/theme.enum';
import { IChatOption } from './core/chat-option';
import { ChatParticipantType } from "./core/chat-participant-type.enum";
import { IChatParticipant } from "./core/chat-participant";
export declare class NgChat implements OnInit, IChatController {
    private _httpClient;
    constructor(_httpClient: HttpClient);
    ChatParticipantType: typeof ChatParticipantType;
    ChatParticipantStatus: typeof ChatParticipantStatus;
    MessageType: typeof MessageType;
    private _isDisabled;
    isDisabled: boolean;
    adapter: ChatAdapter;
    groupAdapter: IChatGroupAdapter;
    userId: any;
    isCollapsed: boolean;
    maximizeWindowOnNewMessage: boolean;
    pollFriendsList: boolean;
    pollingInterval: number;
    historyEnabled: boolean;
    emojisEnabled: boolean;
    linkfyEnabled: boolean;
    audioEnabled: boolean;
    searchEnabled: boolean;
    audioSource: string;
    persistWindowsState: boolean;
    title: string;
    messagePlaceholder: string;
    searchPlaceholder: string;
    browserNotificationsEnabled: boolean;
    browserNotificationIconSource: string;
    browserNotificationTitle: string;
    historyPageSize: number;
    localization: Localization;
    hideFriendsList: boolean;
    hideFriendsListOnUnsupportedViewport: boolean;
    fileUploadUrl: string;
    theme: Theme;
    customTheme: string;
    messageDatePipeFormat: string;
    showMessageDate: boolean;
    isViewportOnMobileEnabled: boolean;
    onParticipantClicked: EventEmitter<IChatParticipant>;
    onParticipantChatOpened: EventEmitter<IChatParticipant>;
    onParticipantChatClosed: EventEmitter<IChatParticipant>;
    onMessagesSeen: EventEmitter<Message[]>;
    private browserNotificationsBootstrapped;
    hasPagedHistory: boolean;
    private statusDescription;
    private audioFile;
    searchInput: string;
    protected participants: IChatParticipant[];
    protected participantsResponse: ParticipantResponse[];
    private participantsInteractedWith;
    currentActiveOption: IChatOption | null;
    protected selectedUsersFromFriendsList: User[];
    private pollingIntervalWindowInstance;
    defaultWindowOptions(currentWindow: Window): IChatOption[];
    private readonly localStorageKey;
    readonly filteredParticipants: IChatParticipant[];
    windowSizeFactor: number;
    friendsListWidth: number;
    private viewPortTotalArea;
    unsupportedViewport: boolean;
    fileUploadersInUse: string[];
    fileUploadAdapter: IFileUploadAdapter;
    windows: Window[];
    isBootstrapped: boolean;
    chatMessageClusters: any;
    chatWindowInputs: any;
    nativeFileInputs: ElementRef[];
    ngOnInit(): void;
    onResize(event: any): void;
    private NormalizeWindows;
    private bootstrapChat;
    private activateFriendListFetch;
    private initializeBrowserNotifications;
    private initializeDefaultText;
    private initializeTheme;
    private fetchFriendsList;
    fetchMessageHistory(window: Window): void;
    private onFetchMessageHistoryLoaded;
    private onFriendsListChanged;
    private onMessageReceived;
    openChatWindow(participant: IChatParticipant, focusOnNewWindow?: boolean, invokedByUserClick?: boolean): [Window, boolean];
    private focusOnWindow;
    private scrollChatWindow;
    markMessagesAsRead(messages: Message[]): void;
    private bufferAudioFile;
    private emitMessageSound;
    private emitBrowserNotification;
    private updateWindowsState;
    private restoreWindowsState;
    private getClosestWindow;
    private assertMessageType;
    private formatUnreadMessagesTotal;
    unreadMessagesTotal(window: Window): string;
    unreadMessagesTotalByParticipant(participant: IChatParticipant): string;
    onChatInputTyped(event: any, window: Window): void;
    onCloseChatWindow(window: Window): void;
    onChatTitleClicked(event: any): void;
    onChatWindowClicked(window: Window): void;
    isAvatarVisible(window: Window, message: Message, index: number): boolean;
    getChatWindowAvatar(participant: IChatParticipant, message: Message): string | null;
    toggleWindowFocus(window: Window): void;
    getStatusTitle(status: ChatParticipantStatus): any;
    triggerOpenChatWindow(user: User): void;
    triggerCloseChatWindow(userId: any): void;
    triggerToggleChatWindowVisibility(userId: any): void;
    getUniqueFileUploadInstanceId(window: Window): string;
    triggerNativeFileUpload(window: Window): void;
    private clearInUseFileUploader;
    isUploadingFile(window: Window): boolean;
    onFileChosen(window: Window): void;
    onFriendsListCheckboxChange(selectedUser: User, isChecked: boolean): void;
    onFriendsListActionCancelClicked(): void;
    onFriendsListActionConfirmClicked(): void;
    isUserSelectedFromFriendsList(user: User): boolean;
}
