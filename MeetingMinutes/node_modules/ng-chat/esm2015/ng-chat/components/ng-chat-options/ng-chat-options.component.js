/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Window } from '../../core/window';
export class NgChatOptionsComponent {
    constructor() {
        this.activeOptionTrackerChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} option
     * @return {?}
     */
    onOptionClicked(option) {
        if (option.action) {
            option.isActive = true;
            option.action(this.chattingTo);
            this.activeOptionTrackerChange.emit(option);
        }
    }
}
NgChatOptionsComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-chat-options',
                template: "<div *ngIf=\"options && options.length > 0\" class=\"ng-chat-options\">\r\n  <button class=\"ng-chat-options-activator\">\r\n    <span class=\"primary-text\">...</span>\r\n  </button>\r\n  <div class=\"ng-chat-options-content primary-background shadowed\">\r\n    <a *ngFor=\"let option of options; let i = index\" [ngClass]=\"'primary-text'\" (click)=\"onOptionClicked(option)\">\r\n      {{option.displayLabel}}\r\n    </a>\r\n  </div>      \r\n</div>\r\n",
                styles: [".ng-chat-options-activator{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator>span{position:relative;top:-5px;left:0}.ng-chat-options{position:relative;display:inline-block}.ng-chat-options:hover .ng-chat-options-content{display:block}.ng-chat-options:hover .ng-chat-options-activator{background-color:#ddd}.ng-chat-options-content{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content a:hover{background-color:#ddd}.ng-chat-options-content a{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content{right:0}}"]
            }] }
];
/** @nocollapse */
NgChatOptionsComponent.ctorParameters = () => [];
NgChatOptionsComponent.propDecorators = {
    options: [{ type: Input }],
    activeOptionTracker: [{ type: Input }],
    activeOptionTrackerChange: [{ type: Output }],
    chattingTo: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    NgChatOptionsComponent.prototype.options;
    /** @type {?} */
    NgChatOptionsComponent.prototype.activeOptionTracker;
    /** @type {?} */
    NgChatOptionsComponent.prototype.activeOptionTrackerChange;
    /** @type {?} */
    NgChatOptionsComponent.prototype.chattingTo;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY2hhdC1vcHRpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWNoYXQvIiwic291cmNlcyI6WyJuZy1jaGF0L2NvbXBvbmVudHMvbmctY2hhdC1vcHRpb25zL25nLWNoYXQtb3B0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBUTNDLE1BQU0sT0FBTyxzQkFBc0I7SUFFakM7UUFTTyw4QkFBeUIsR0FBOEIsSUFBSSxZQUFZLEVBQWUsQ0FBQztJQVQ5RSxDQUFDOzs7O0lBY2pCLFFBQVE7SUFDUixDQUFDOzs7OztJQUVELGVBQWUsQ0FBQyxNQUFtQjtRQUUvQixJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQ2pCO1lBQ0ksTUFBTSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDdkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvQztJQUNMLENBQUM7OztZQWhDRixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IscWRBQStDOzthQUVsRDs7Ozs7c0JBS0UsS0FBSztrQ0FHTCxLQUFLO3dDQUdMLE1BQU07eUJBR04sS0FBSzs7OztJQVROLHlDQUM4Qjs7SUFFOUIscURBQ3dDOztJQUV4QywyREFDOEY7O0lBRTlGLDRDQUMwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgV2luZG93IH0gZnJvbSAnLi4vLi4vY29yZS93aW5kb3cnO1xyXG5pbXBvcnQgeyBJQ2hhdE9wdGlvbiB9IGZyb20gJy4uLy4uL2NvcmUvY2hhdC1vcHRpb24nO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ25nLWNoYXQtb3B0aW9ucycsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vbmctY2hhdC1vcHRpb25zLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL25nLWNoYXQtb3B0aW9ucy5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIE5nQ2hhdE9wdGlvbnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBvcHRpb25zOiBJQ2hhdE9wdGlvbltdO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBhY3RpdmVPcHRpb25UcmFja2VyOiBJQ2hhdE9wdGlvbjtcclxuXHJcbiAgQE91dHB1dCgpXHJcbiAgcHVibGljIGFjdGl2ZU9wdGlvblRyYWNrZXJDaGFuZ2U6IEV2ZW50RW1pdHRlcjxJQ2hhdE9wdGlvbj4gPSBuZXcgRXZlbnRFbWl0dGVyPElDaGF0T3B0aW9uPigpO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBjaGF0dGluZ1RvOiBXaW5kb3c7XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgb25PcHRpb25DbGlja2VkKG9wdGlvbjogSUNoYXRPcHRpb24pOiB2b2lkXHJcbiAge1xyXG4gICAgICBpZiAob3B0aW9uLmFjdGlvbilcclxuICAgICAge1xyXG4gICAgICAgICAgb3B0aW9uLmlzQWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgIG9wdGlvbi5hY3Rpb24odGhpcy5jaGF0dGluZ1RvKTtcclxuICAgICAgICAgIHRoaXMuYWN0aXZlT3B0aW9uVHJhY2tlckNoYW5nZS5lbWl0KG9wdGlvbik7XHJcbiAgICAgIH1cclxuICB9XHJcbn1cclxuIl19