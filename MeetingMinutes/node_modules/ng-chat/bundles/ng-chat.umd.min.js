!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/forms"),require("@angular/common/http"),require("rxjs/operators"),require("@angular/platform-browser"),require("@angular/core")):"function"==typeof define&&define.amd?define("ng-chat",["exports","@angular/common","@angular/forms","@angular/common/http","rxjs/operators","@angular/platform-browser","@angular/core"],e):e(t["ng-chat"]={},t.ng.common,t.ng.forms,t.ng.common.http,t.rxjs.operators,t.ng.platformBrowser,t.ng.core)}(this,function(t,e,i,n,a,o,s){"use strict";var r=(c.prototype.onFriendsListChanged=function(t){this.friendsListChangedHandler(t)},c.prototype.onMessageReceived=function(t,e){this.messageReceivedHandler(t,e)},c);function c(){this.friendsListChangedHandler=function(t){},this.messageReceivedHandler=function(t,e){}}var p={Text:1,File:2};p[p.Text]="Text",p[p.File]="File";var d=function V(){this.type=p.Text},l={Online:0,Busy:1,Away:2,Offline:3};l[l.Online]="Online",l[l.Busy]="Busy",l[l.Away]="Away",l[l.Offline]="Offline";var h={User:0,Group:1};h[h.User]="User",h[h.Group]="Group";function g(){this.participantType=h.User}function u(){}function f(){this.totalUnreadMessages=0}var m=function $(t,e,i){this.messages=[],this.newMessage="",this.isCollapsed=!1,this.isLoadingHistory=!1,this.hasFocus=!1,this.hasMoreMessages=!0,this.historyPage=0,this.participant=t,this.messages=[],this.isLoadingHistory=e,this.hasFocus=!1,this.isCollapsed=i,this.hasMoreMessages=!1,this.historyPage=0},w=function(t,e){return(w=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)};function y(n,a){var o,s,r,t,c={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return t={next:e(0),"throw":e(1),"return":e(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function i(t){if(o)throw new TypeError("Generator is already executing.");for(;c;)try{if(o=1,s&&(r=2&t[0]?s["return"]:t[0]?s["throw"]||((r=s["return"])&&r.call(s),0):s.next)&&!(r=r.call(s,t[1])).done)return r;switch(s=0,r&&(t=[2&t[0],r.value]),t[0]){case 0:case 1:r=t;break;case 4:return c.label++,{value:t[1],done:!1};case 5:c.label++,s=t[1],t=[0];continue;case 7:t=c.ops.pop(),c.trys.pop();continue;default:if(!(r=0<(r=c.trys).length&&r[r.length-1])&&(6===t[0]||2===t[0])){c=0;continue}if(3===t[0]&&(!r||t[1]>r[0]&&t[1]<r[3])){c.label=t[1];break}if(6===t[0]&&c.label<r[1]){c.label=r[1],r=t;break}if(r&&c.label<r[2]){c.label=r[2],c.ops.push(t);break}r[2]&&c.ops.pop(),c.trys.pop();continue}t=a.call(n,c)}catch(e){t=[6,e],s=0}finally{o=r=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([e,t])}}}var b,x=(function q(t,e){function i(){this.constructor=t}w(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}(v,b=r),v);function v(){return null!==b&&b.apply(this,arguments)||this}var C={Custom:"custom-theme",Light:"light-theme",Dark:"dark-theme"},k=(I.newGuid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0;return("x"==t?e:3&e|8).toString(16)})},I);function I(){}var F=function G(t){this.id=k.newGuid(),this.participantType=h.Group,this.chattingTo=t,this.status=l.Online,this.displayName=t.map(function(t){return t.displayName}).sort(function(t,e){return t<e?-1:1}).join(", ")},M={Top:0,Bottom:1};M[M.Top]="Top",M[M.Bottom]="Bottom";var T=(P.prototype.uploadFile=function(t,e){var i=new FormData;return i.append("ng-chat-participant-id",e),i.append("file",t,t.name),this._http.post(this._serverEndpointUrl,i)},P);function P(t,e){this._serverEndpointUrl=t,this._http=e}var S=(Object.defineProperty(O.prototype,"isDisabled",{get:function(){return this._isDisabled},set:function(t){(this._isDisabled=t)?window.clearInterval(this.pollingIntervalWindowInstance):this.activateFriendListFetch()},enumerable:!0,configurable:!0}),O.prototype.defaultWindowOptions=function(t){var e=this;return this.groupAdapter&&t.participant.participantType==h.User?[{isActive:!1,action:function(t){e.selectedUsersFromFriendsList=e.selectedUsersFromFriendsList.concat(t.participant)},validateContext:function(t){return t.participantType==h.User},displayLabel:"Add People"}]:[]},Object.defineProperty(O.prototype,"localStorageKey",{get:function(){return"ng-chat-users-"+this.userId},enumerable:!0,configurable:!0}),Object.defineProperty(O.prototype,"filteredParticipants",{get:function(){var e=this;return 0<this.searchInput.length?this.participants.filter(function(t){return t.displayName.toUpperCase().includes(e.searchInput.toUpperCase())}):this.participants},enumerable:!0,configurable:!0}),O.prototype.ngOnInit=function(){this.bootstrapChat()},O.prototype.onResize=function(t){this.viewPortTotalArea=t.target.innerWidth,this.NormalizeWindows()},O.prototype.NormalizeWindows=function(){var t=Math.floor((this.viewPortTotalArea-(this.hideFriendsList?0:this.friendsListWidth))/this.windowSizeFactor),e=this.windows.length-t;0<=e&&this.windows.splice(this.windows.length-e),this.updateWindowsState(this.windows),this.unsupportedViewport=!this.isViewportOnMobileEnabled&&this.hideFriendsListOnUnsupportedViewport&&t<1},O.prototype.bootstrapChat=function(){var i=this,t=null;if(null!=this.adapter&&null!=this.userId)try{this.viewPortTotalArea=window.innerWidth,this.initializeTheme(),this.initializeDefaultText(),this.initializeBrowserNotifications(),this.adapter.messageReceivedHandler=function(t,e){return i.onMessageReceived(t,e)},this.adapter.friendsListChangedHandler=function(t){return i.onFriendsListChanged(t)},this.activateFriendListFetch(),this.bufferAudioFile(),this.hasPagedHistory=this.adapter instanceof x,this.fileUploadUrl&&""!==this.fileUploadUrl&&(this.fileUploadAdapter=new T(this.fileUploadUrl,this._httpClient)),this.NormalizeWindows(),this.isBootstrapped=!0}catch(e){t=e}this.isBootstrapped||(console.error("ng-chat component couldn't be bootstrapped."),null==this.userId&&console.error("ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component."),null==this.adapter&&console.error("ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component."),t&&(console.error("An exception has occurred while initializing ng-chat. Details: "+t.message),console.error(t)))},O.prototype.activateFriendListFetch=function(){var t=this;this.adapter&&(this.pollFriendsList?(this.fetchFriendsList(!0),this.pollingIntervalWindowInstance=window.setInterval(function(){return t.fetchFriendsList(!1)},this.pollingInterval)):this.fetchFriendsList(!0))},O.prototype.initializeBrowserNotifications=function(){return function t(e,s,r,c){return new(r=r||Promise)(function(t,i){function n(t){try{o(c.next(t))}catch(e){i(e)}}function a(t){try{o(c["throw"](t))}catch(e){i(e)}}function o(e){e.done?t(e.value):new r(function(t){t(e.value)}).then(n,a)}o((c=c.apply(e,s||[])).next())})}(this,void 0,void 0,function(){return y(this,function(t){switch(t.label){case 0:return this.browserNotificationsEnabled&&"Notification"in window?[4,Notification.requestPermission()]:[3,2];case 1:t.sent()&&(this.browserNotificationsBootstrapped=!0),t.label=2;case 2:return[2]}})})},O.prototype.initializeDefaultText=function(){this.localization||(this.localization={messagePlaceholder:this.messagePlaceholder,searchPlaceholder:this.searchPlaceholder,title:this.title,statusDescription:this.statusDescription,browserNotificationTitle:this.browserNotificationTitle,loadMessageHistoryPlaceholder:"Load older messages"})},O.prototype.initializeTheme=function(){if(this.customTheme)this.theme=C.Custom;else if(this.theme!=C.Light&&this.theme!=C.Dark)throw new Error('Invalid theme configuration for ng-chat. "'+this.theme+'" is not a valid theme value.')},O.prototype.fetchFriendsList=function(t){var e=this;this.adapter.listFriends().pipe(a.map(function(t){e.participantsResponse=t,e.participants=t.map(function(t){return t.participant})})).subscribe(function(){t&&e.restoreWindowsState()})},O.prototype.fetchMessageHistory=function(i){var n=this;this.adapter instanceof x?(i.isLoadingHistory=!0,this.adapter.getMessageHistoryByPage(i.participant.id,this.historyPageSize,++i.historyPage).pipe(a.map(function(t){t.forEach(function(t){return n.assertMessageType(t)}),i.messages=t.concat(i.messages),i.isLoadingHistory=!1;var e=1==i.historyPage?M.Bottom:M.Top;i.hasMoreMessages=t.length==n.historyPageSize,setTimeout(function(){return n.onFetchMessageHistoryLoaded(t,i,e,!0)})})).subscribe()):this.adapter.getMessageHistory(i.participant.id).pipe(a.map(function(t){t.forEach(function(t){return n.assertMessageType(t)}),i.messages=t.concat(i.messages),i.isLoadingHistory=!1,setTimeout(function(){return n.onFetchMessageHistoryLoaded(t,i,M.Bottom)})})).subscribe()},O.prototype.onFetchMessageHistoryLoaded=function(t,e,i,n){if(void 0===n&&(n=!1),this.scrollChatWindow(e,i),e.hasFocus||n){var a=t.filter(function(t){return!t.dateSeen});this.markMessagesAsRead(a),this.onMessagesSeen.emit(a)}},O.prototype.onFriendsListChanged=function(t){t&&(this.participantsResponse=t,this.participants=t.map(function(t){return t.participant}),this.participantsInteractedWith=[])},O.prototype.onMessageReceived=function(t,e){if(t&&e){var i=this.openChatWindow(t);this.assertMessageType(e),i[1]&&this.historyEnabled||(i[0].messages.push(e),this.scrollChatWindow(i[0],M.Bottom),i[0].hasFocus&&(this.markMessagesAsRead([e]),this.onMessagesSeen.emit([e]))),this.emitMessageSound(i[0]),!this.maximizeWindowOnNewMessage&&(i[1]||i[0].isCollapsed)||this.emitBrowserNotification(i[0],e)}},O.prototype.openChatWindow=function(e,t,i){void 0===t&&(t=!1),void 0===i&&(i=!1);var n=this.windows.find(function(t){return t.participant.id==e.id});if(n)return[n,!1];i&&this.onParticipantClicked.emit(e);var a=!i&&!this.maximizeWindowOnNewMessage,o=new m(e,this.historyEnabled,a);return this.historyEnabled&&this.fetchMessageHistory(o),this.windows.unshift(o),this.isViewportOnMobileEnabled||this.windows.length*this.windowSizeFactor>=this.viewPortTotalArea-(this.hideFriendsList?0:this.friendsListWidth)&&this.windows.pop(),this.updateWindowsState(this.windows),t&&!a&&this.focusOnWindow(o),this.participantsInteractedWith.push(e),this.onParticipantChatOpened.emit(e),[o,!0]},O.prototype.focusOnWindow=function(t,e){var i=this;void 0===e&&(e=function(){});var n=this.windows.indexOf(t);0<=n&&setTimeout(function(){i.chatWindowInputs&&i.chatWindowInputs.toArray()[n].nativeElement.focus(),e()})},O.prototype.scrollChatWindow=function(t,i){var n=this;if(!t.isCollapsed){var a=this.windows.indexOf(t);setTimeout(function(){if(n.chatMessageClusters&&n.chatMessageClusters.toArray()[a]){var t=n.chatMessageClusters.toArray()[a].nativeElement,e=i===M.Top?0:t.scrollHeight;t.scrollTop=e}})}},O.prototype.markMessagesAsRead=function(t){var e=new Date;t.forEach(function(t){t.dateSeen=e})},O.prototype.bufferAudioFile=function(){this.audioSource&&0<this.audioSource.length&&(this.audioFile=new Audio,this.audioFile.src=this.audioSource,this.audioFile.load())},O.prototype.emitMessageSound=function(t){this.audioEnabled&&!t.hasFocus&&this.audioFile&&this.audioFile.play()},O.prototype.emitBrowserNotification=function(t,e){if(this.browserNotificationsBootstrapped&&!t.hasFocus&&e){var i=new Notification(this.localization.browserNotificationTitle+" "+t.participant.displayName,{body:e.message,icon:this.browserNotificationIconSource});setTimeout(function(){i.close()},e.message.length<=50?5e3:7e3)}},O.prototype.updateWindowsState=function(t){if(this.persistWindowsState){var e=t.map(function(t){return t.participant.id});localStorage.setItem(this.localStorageKey,JSON.stringify(e))}},O.prototype.restoreWindowsState=function(){var e=this;try{if(this.persistWindowsState){var t=localStorage.getItem(this.localStorageKey);if(t&&0<t.length){var i=JSON.parse(t);this.participants.filter(function(t){return 0<=i.indexOf(t.id)}).forEach(function(t){e.openChatWindow(t)})}}}catch(n){console.error("An error occurred while restoring ng-chat windows state. Details: "+n)}},O.prototype.getClosestWindow=function(t){var e=this.windows.indexOf(t);return 0<e?this.windows[e-1]:0==e&&1<this.windows.length?this.windows[e+1]:void 0},O.prototype.assertMessageType=function(t){t.type||(t.type=p.Text)},O.prototype.formatUnreadMessagesTotal=function(t){return 0<t?99<t?"99+":String(t):""},O.prototype.unreadMessagesTotal=function(t){var e=this,i=0;return t&&(i=t.messages.filter(function(t){return t.fromId!=e.userId&&!t.dateSeen}).length),this.formatUnreadMessagesTotal(i)},O.prototype.unreadMessagesTotalByParticipant=function(e){var i=this,t=this.windows.find(function(t){return t.participant.id==e.id});if(t)return this.unreadMessagesTotal(t);var n=this.participantsResponse.filter(function(t){return t.participant.id==e.id&&!i.participantsInteractedWith.find(function(t){return t.id==e.id})&&t.metadata&&0<t.metadata.totalUnreadMessages}).map(function(t){return t.metadata.totalUnreadMessages})[0];return this.formatUnreadMessagesTotal(n)},O.prototype.onChatInputTyped=function(t,e){var i=this;switch(t.keyCode){case 13:if(e.newMessage&&""!=e.newMessage.trim()){var n=new d;n.fromId=this.userId,n.toId=e.participant.id,n.message=e.newMessage,n.dateSent=new Date,e.messages.push(n),this.adapter.sendMessage(n),e.newMessage="",this.scrollChatWindow(e,M.Bottom)}break;case 9:t.preventDefault();var a=this.windows.indexOf(e),o=this.chatWindowInputs.toArray()[a+(t.shiftKey?1:-1)];(o=o||this.chatWindowInputs.toArray()[0<a?0:this.chatWindowInputs.length-1]).nativeElement.focus();break;case 27:var s=this.getClosestWindow(e);s?this.focusOnWindow(s,function(){i.onCloseChatWindow(e)}):this.onCloseChatWindow(e)}},O.prototype.onCloseChatWindow=function(t){var e=this.windows.indexOf(t);this.windows.splice(e,1),this.updateWindowsState(this.windows),this.onParticipantChatClosed.emit(t.participant)},O.prototype.onChatTitleClicked=function(t){this.isCollapsed=!this.isCollapsed},O.prototype.onChatWindowClicked=function(t){t.isCollapsed=!t.isCollapsed,this.scrollChatWindow(t,M.Bottom)},O.prototype.isAvatarVisible=function(t,e,i){if(e.fromId!=this.userId){if(0==i)return!0;if(t.messages[i-1].fromId!=e.fromId)return!0}return!1},O.prototype.getChatWindowAvatar=function(t,e){if(t.participantType==h.User)return t.avatar;if(t.participantType!=h.Group)return null;var i=t,n=i.chattingTo.findIndex(function(t){return t.id==e.fromId});return i.chattingTo[0<=n?n:0].avatar},O.prototype.toggleWindowFocus=function(e){var i=this;if(e.hasFocus=!e.hasFocus,e.hasFocus){var t=e.messages.filter(function(t){return null==t.dateSeen&&(t.toId==i.userId||e.participant.participantType===h.Group)});t&&0<t.length&&(this.markMessagesAsRead(t),this.onMessagesSeen.emit(t))}},O.prototype.getStatusTitle=function(t){var e=t.toString().toLowerCase();return this.localization.statusDescription[e]},O.prototype.triggerOpenChatWindow=function(t){t&&this.openChatWindow(t)},O.prototype.triggerCloseChatWindow=function(e){var t=this.windows.find(function(t){return t.participant.id==e});t&&this.onCloseChatWindow(t)},O.prototype.triggerToggleChatWindowVisibility=function(e){var t=this.windows.find(function(t){return t.participant.id==e});t&&this.onChatWindowClicked(t)},O.prototype.getUniqueFileUploadInstanceId=function(t){return t&&t.participant?"ng-chat-file-upload-"+t.participant.id:"ng-chat-file-upload"},O.prototype.triggerNativeFileUpload=function(t){if(t){var e=this.getUniqueFileUploadInstanceId(t),i=this.nativeFileInputs.filter(function(t){return t.nativeElement.id===e})[0];i&&i.nativeElement.click()}},O.prototype.clearInUseFileUploader=function(t){var e=this.fileUploadersInUse.indexOf(t);-1<e&&this.fileUploadersInUse.splice(e,1)},O.prototype.isUploadingFile=function(t){var e=this.getUniqueFileUploadInstanceId(t);return-1<this.fileUploadersInUse.indexOf(e)},O.prototype.onFileChosen=function(e){var i=this,n=this.getUniqueFileUploadInstanceId(e),a=this.nativeFileInputs.filter(function(t){return t.nativeElement.id===n})[0];if(a){var t=a.nativeElement.files[0];this.fileUploadersInUse.push(n),this.fileUploadAdapter.uploadFile(t,e.participant.id).subscribe(function(t){i.clearInUseFileUploader(n),t.fromId=i.userId,e.messages.push(t),i.adapter.sendMessage(t),i.scrollChatWindow(e,M.Bottom),a.nativeElement.value=""},function(t){i.clearInUseFileUploader(n),a.nativeElement.value=""})}},O.prototype.onFriendsListCheckboxChange=function(t,e){e?this.selectedUsersFromFriendsList.push(t):this.selectedUsersFromFriendsList.splice(this.selectedUsersFromFriendsList.indexOf(t),1)},O.prototype.onFriendsListActionCancelClicked=function(){this.currentActiveOption&&(this.currentActiveOption.isActive=!1,this.currentActiveOption=null,this.selectedUsersFromFriendsList=[])},O.prototype.onFriendsListActionConfirmClicked=function(){var t=new F(this.selectedUsersFromFriendsList);this.openChatWindow(t),this.groupAdapter&&this.groupAdapter.groupCreated(t),this.onFriendsListActionCancelClicked()},O.prototype.isUserSelectedFromFriendsList=function(e){return 0<this.selectedUsersFromFriendsList.filter(function(t){return t.id==e.id}).length},O.decorators=[{type:s.Component,args:[{selector:"ng-chat",template:'<link *ngIf="customTheme" rel="stylesheet" [href]=\'customTheme | sanitize\'>\r\n\r\n<div id="ng-chat" *ngIf="!isDisabled && isBootstrapped && !unsupportedViewport" [ngClass]="theme">\r\n    <div *ngIf="!hideFriendsList" id="ng-chat-people" [ngClass]="{\'primary-outline-color\': true, \'primary-background\': true, \'ng-chat-people-collapsed\': isCollapsed}">\r\n        <a href="javascript:void(0);" class="ng-chat-title secondary-background shadowed" (click)="onChatTitleClicked($event)">\r\n            <span>\r\n                {{localization.title}}\r\n            </span>\r\n        </a>\r\n        <div *ngIf="currentActiveOption" class="ng-chat-people-actions" (click)="onFriendsListActionCancelClicked()">\r\n            <a href="javascript:void(0);" class="ng-chat-people-action">\r\n                <i class="remove-icon"></i>\r\n            </a>\r\n            <a href="javascript:void(0);" class="ng-chat-people-action" (click)="onFriendsListActionConfirmClicked()">\r\n                <i class="check-icon"></i>\r\n            </a>\r\n        </div>\r\n        <input *ngIf="searchEnabled" id="ng-chat-search_friend" class="friends-search-bar" type="search" [placeholder]="localization.searchPlaceholder" [(ngModel)]="searchInput" />\r\n        <ul id="ng-chat-users" *ngIf="!isCollapsed" [ngClass]="{\'offset-search\': searchEnabled}">\r\n            <li *ngFor="let user of filteredParticipants">\r\n                <input \r\n                    *ngIf="currentActiveOption && currentActiveOption.validateContext(user)" \r\n                    type="checkbox" \r\n                    class="ng-chat-users-checkbox" \r\n                    (change)="onFriendsListCheckboxChange(user, $event.target.checked)" \r\n                    [checked]="isUserSelectedFromFriendsList(user)"/>\r\n                <div [ngClass]="{\'ng-chat-friends-list-selectable-offset\': currentActiveOption, \'ng-chat-friends-list-container\': true}" (click)="openChatWindow(user, true, true)">\r\n                    <div *ngIf="!user.avatar" class="icon-wrapper">\r\n                        <i class="user-icon"></i>\r\n                    </div>\r\n                    <img *ngIf="user.avatar" alt="" class="avatar" height="30" width="30"  [src]="user.avatar | sanitize"/>\r\n                    <strong title="{{user.displayName}}">{{user.displayName}}</strong>\r\n                    <span [ngClass]="{\'ng-chat-participant-status\': true, \'online\': user.status == ChatParticipantStatus.Online, \'busy\': user.status == ChatParticipantStatus.Busy, \'away\': user.status == ChatParticipantStatus.Away, \'offline\': user.status == ChatParticipantStatus.Offline}" title="{{getStatusTitle(user.status)}}"></span>\r\n                    <span *ngIf="unreadMessagesTotalByParticipant(user).length > 0" class="ng-chat-unread-messages-count unread-messages-counter-container primary-text">{{unreadMessagesTotalByParticipant(user)}}</span>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div *ngFor="let window of windows; let i = index" [ngClass]="{\'ng-chat-window\': true, \'primary-outline-color\': true, \'ng-chat-window-collapsed\': window.isCollapsed}" [ngStyle]="{\'right\': (!hideFriendsList ? friendsListWidth : 0) + 20 + windowSizeFactor * i + \'px\'}">\r\n        <ng-container *ngIf="window.isCollapsed">\r\n            <div class="ng-chat-title secondary-background">\r\n                <div class="ng-chat-title-visibility-toggle-area" (click)="onChatWindowClicked(window)">\r\n                    <strong title="{{window.participant.displayName}}">\r\n                        {{window.participant.displayName}}\r\n                    </strong>\r\n                    <span [ngClass]="{\'ng-chat-participant-status\': true, \'online\': window.participant.status == ChatParticipantStatus.Online, \'busy\': window.participant.status == ChatParticipantStatus.Busy, \'away\': window.participant.status == ChatParticipantStatus.Away, \'offline\': window.participant.status == ChatParticipantStatus.Offline}" title="{{getStatusTitle(window.participant.status)}}"></span>\r\n                    <span *ngIf="unreadMessagesTotal(window).length > 0" class="ng-chat-unread-messages-count unread-messages-counter-container primary-text">{{unreadMessagesTotal(window)}}</span>\r\n                </div>\r\n                <a href="javascript:void(0);" class="ng-chat-close primary-text" (click)="onCloseChatWindow(window)">X</a>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf="!window.isCollapsed">\r\n            <div class="ng-chat-title secondary-background">\r\n                <div class="ng-chat-title-visibility-toggle-area" (click)="onChatWindowClicked(window)">\r\n                    <strong title="{{window.participant.displayName}}">\r\n                        {{window.participant.displayName}}\r\n                    </strong>\r\n                    <span [ngClass]="{\'ng-chat-participant-status\': true, \'online\': window.participant.status == ChatParticipantStatus.Online, \'busy\': window.participant.status == ChatParticipantStatus.Busy, \'away\': window.participant.status == ChatParticipantStatus.Away, \'offline\': window.participant.status == ChatParticipantStatus.Offline}" title="{{getStatusTitle(window.participant.status)}}"></span>\r\n                    <span *ngIf="unreadMessagesTotal(window).length > 0" class="ng-chat-unread-messages-count unread-messages-counter-container primary-text">{{unreadMessagesTotal(window)}}</span>    \r\n                </div>\r\n                <a href="javascript:void(0);" class="ng-chat-close primary-text" (click)="onCloseChatWindow(window)">X</a>\r\n                <ng-chat-options [ngClass]="\'ng-chat-options-container\'" [options]="defaultWindowOptions(window)" [chattingTo]="window" [(activeOptionTracker)]="currentActiveOption"></ng-chat-options>\r\n            </div>\r\n            <div #chatMessages class="ng-chat-messages primary-background">\r\n                <div *ngIf="window.isLoadingHistory" class="ng-chat-loading-wrapper">\r\n                    <div class="loader">Loading history...</div>\r\n                </div>\r\n                <div *ngIf="hasPagedHistory && window.hasMoreMessages && !window.isLoadingHistory" class="ng-chat-load-history">\r\n                \t<a class="load-history-action" (click)="fetchMessageHistory(window)">{{localization.loadMessageHistoryPlaceholder}}</a>\r\n                </div>\r\n\r\n                <div *ngFor="let message of window.messages; let i = index" [ngClass]="{\'ng-chat-message\': true, \'ng-chat-message-received\': message.fromId != userId}">\r\n                    <ng-container *ngIf="isAvatarVisible(window, message, i)"> \r\n                        <div *ngIf="!getChatWindowAvatar(window.participant, message)" class="icon-wrapper">\r\n                            <i class="user-icon"></i>\r\n                        </div>\r\n                        <img *ngIf="getChatWindowAvatar(window.participant, message)" alt="" class="avatar" height="30" width="30" [src]="getChatWindowAvatar(window.participant, message) | sanitize" />\r\n                        <span *ngIf="window.participant.participantType == ChatParticipantType.Group" class="ng-chat-participant-name">{{window.participant | groupMessageDisplayName:message}}</span>\r\n                    </ng-container>\r\n                    <ng-container [ngSwitch]="message.type">\r\n                        <div *ngSwitchCase="MessageType.Text" [ngClass]="{\'sent-chat-message-container\': message.fromId == userId, \'received-chat-message-container\': message.fromId != userId}">\r\n                            <span [innerHtml]="message.message | emojify:emojisEnabled | linkfy:linkfyEnabled"></span>\r\n                            <span *ngIf="showMessageDate && message.dateSent" class="message-sent-date">{{message.dateSent | date:messageDatePipeFormat}}</span>\r\n                        </div>\r\n                        <div *ngSwitchCase="MessageType.File" [ngClass]="{\'file-message-container\': true, \'received\': message.fromId != userId}">\r\n                            <div class="file-message-icon-container">\r\n                                <i class="paperclip-icon"></i>\r\n                            </div>\r\n                            <a class="file-details" [attr.href]="message.downloadUrl" target="_blank" rel="noopener noreferrer" (click)="this.markMessagesAsRead([message])" download>\r\n                                <span class="file-message-title" [attr.title]="message.message">{{message.message}}</span>\r\n                                <span *ngIf="message.fileSizeInBytes" class="file-message-size">{{message.fileSizeInBytes}} Bytes</span>\r\n                            </a>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="ng-chat-footer primary-outline-color primary-background">\r\n                <input #chatWindowInput \r\n                    type="text" \r\n                    [ngModel]="window.newMessage | emojify:emojisEnabled" \r\n                    (ngModelChange)="window.newMessage=$event" \r\n                    [placeholder]="localization.messagePlaceholder" \r\n                    [ngClass]="{\'chat-window-input\': true, \'has-side-action\': fileUploadAdapter}"\r\n                    (keydown)="onChatInputTyped($event, window)" \r\n                    (blur)="toggleWindowFocus(window)" \r\n                    (focus)="toggleWindowFocus(window)"/>\r\n\r\n                \x3c!-- File Upload --\x3e\r\n                <ng-container *ngIf="fileUploadAdapter">\r\n                    <a *ngIf="!isUploadingFile(window)" class="btn-add-file" (click)="triggerNativeFileUpload(window)">\r\n                        <i class="upload-icon"></i>\r\n                    </a>\r\n                    <input \r\n                        type="file" \r\n                        #nativeFileInput \r\n                        style="display: none;" \r\n                        [attr.id]="getUniqueFileUploadInstanceId(window)" \r\n                        (change)="onFileChosen(window)" />\r\n                    <div *ngIf="isUploadingFile(window)" class="loader"></div>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n',encapsulation:s.ViewEncapsulation.None,styles:[".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:'';pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid currentColor;border-top:none;border-radius:1px}.upload-icon:before{content:'';position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:'';position:absolute;top:-8px;left:4px;width:4px;height:4px;border-top:1px solid currentColor;border-right:1px solid currentColor;transform:rotate(-45deg)}.paperclip-icon{position:absolute;margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid currentColor;border-right:1px solid currentColor;border-top:1px solid currentColor;transform:rotate(45deg)}.paperclip-icon:before{content:'';position:absolute;top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-left:1px solid currentColor;border-right:1px solid currentColor;border-bottom:1px solid currentColor}.paperclip-icon:after{content:'';position:absolute;left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-left:1px solid currentColor;border-right:1px solid currentColor;border-top:1px solid currentColor}.check-icon{color:#000;position:absolute;margin-left:3px;margin-top:4px;width:14px;height:8px;border-bottom:1px solid currentColor;border-left:1px solid currentColor;transform:rotate(-45deg)}.remove-icon{color:#000;position:absolute;margin-left:3px;margin-top:10px}.remove-icon:before{content:'';position:absolute;width:15px;height:1px;background-color:currentColor;transform:rotate(45deg)}.remove-icon:after{content:'';position:absolute;width:15px;height:1px;background-color:currentColor;transform:rotate(-45deg)}",".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:1s ease-in-out infinite load1;animation:1s ease-in-out infinite load1;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:''}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,100%,80%{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,100%,80%{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}","#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:initial;font-size:11pt;text-align:left}#ng-chat .shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title .ng-chat-title-visibility-toggle-area{display:inline-block;width:85%}.ng-chat-title .ng-chat-title-visibility-toggle-area>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status{float:left;margin-left:5px}.ng-chat-people-actions{position:absolute;top:4px;right:5px;margin:0;padding:0;z-index:2}.ng-chat-people-actions>a.ng-chat-people-action{display:inline-block;width:21px;height:21px;margin-right:8px;text-decoration:none;border:none;border-radius:25px;padding:1px}#ng-chat-search_friend{display:block;padding:7px 10px;margin:10px auto 0;width:calc(100% - 20px);font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users .ng-chat-users-checkbox{float:left;margin-right:5px;margin-top:8px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.ng-chat-friends-list-selectable-offset{margin-left:22px}#ng-chat-users li .ng-chat-friends-list-container{display:inline-block;width:100%}#ng-chat-users li>.ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container{display:block;width:auto}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper,#ng-chat-users li .ng-chat-friends-list-container>img.avatar{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li .ng-chat-friends-list-container>.icon-wrapper>i{color:#fff;transform:scale(.7)}#ng-chat-users li .ng-chat-friends-list-container>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li .ng-chat-friends-list-container>.ng-chat-participant-status{float:right}.ng-chat-participant-status{display:inline-block;border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-participant-status.online{background-color:#92a400}.ng-chat-participant-status.busy{background-color:#f91c1e}.ng-chat-participant-status.away{background-color:#f7d21b}.ng-chat-participant-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;width:300px;position:fixed;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img.avatar{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name{display:inline-block;margin-left:40px;padding-bottom:5px;font-weight:700;font-size:.8em;text-overflow:ellipsis;max-width:180px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px;padding:0}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date{font-size:.8em;display:block;text-align:right;margin-top:5px}.ng-chat-window .ng-chat-messages .ng-chat-message>div{float:right;width:182px;padding:10px;border-radius:5px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>div.received-chat-message-container{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:202px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em;padding:0;box-sizing:border-box}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:208px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px 5px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}.ng-chat-options-container{float:right;margin-right:5px}@media only screen and (max-width:581px){#ng-chat-people{width:300px;height:360px;margin-right:0}.ng-chat-window{position:initial}}",".light-theme,.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}.light-theme .primary-background{background-color:#fff}.light-theme .secondary-background{background-color:#fafafa}.light-theme .primary-outline-color{border-color:#a3a3a3}.light-theme .friends-search-bar{background-color:#fff}.light-theme .ng-chat-people-action,.light-theme .ng-chat-people-action>i,.light-theme .unread-messages-counter-container{color:#5c5c5c;background-color:#e3e3e3}.light-theme .load-history-action{background-color:#e3e3e3}.light-theme .chat-window-input{background-color:#fff}.light-theme .file-message-container,.light-theme .sent-chat-message-container{background-color:#e3e3e3;border-color:#e3e3e3}.light-theme .file-message-container.received,.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}",".dark-theme,.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}.dark-theme .primary-background{background-color:#565656}.dark-theme .secondary-background{background-color:#444}.dark-theme .primary-outline-color{border-color:#353535}.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}.dark-theme .ng-chat-people-action,.dark-theme .ng-chat-people-action>i,.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}.dark-theme .load-history-action{background-color:#444}.dark-theme .chat-window-input{background-color:#444;color:#fff}.dark-theme .file-message-container,.dark-theme .sent-chat-message-container{border-color:#444;background-color:#444}.dark-theme .file-message-container.received,.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}.dark-theme .ng-chat-footer{background-color:#444}.dark-theme .ng-chat-message a{color:#fff}"]}]}],O.ctorParameters=function(){return[{type:n.HttpClient}]},O.propDecorators={isDisabled:[{type:s.Input}],adapter:[{type:s.Input}],groupAdapter:[{type:s.Input}],userId:[{type:s.Input}],isCollapsed:[{type:s.Input}],maximizeWindowOnNewMessage:[{type:s.Input}],pollFriendsList:[{type:s.Input}],pollingInterval:[{type:s.Input}],historyEnabled:[{type:s.Input}],emojisEnabled:[{type:s.Input}],linkfyEnabled:[{type:s.Input}],audioEnabled:[{type:s.Input}],searchEnabled:[{type:s.Input}],audioSource:[{type:s.Input}],persistWindowsState:[{type:s.Input}],title:[{type:s.Input}],messagePlaceholder:[{type:s.Input}],searchPlaceholder:[{type:s.Input}],browserNotificationsEnabled:[{type:s.Input}],browserNotificationIconSource:[{type:s.Input}],browserNotificationTitle:[{type:s.Input}],historyPageSize:[{type:s.Input}],localization:[{type:s.Input}],hideFriendsList:[{type:s.Input}],hideFriendsListOnUnsupportedViewport:[{type:s.Input}],fileUploadUrl:[{type:s.Input}],theme:[{type:s.Input}],customTheme:[{type:s.Input}],messageDatePipeFormat:[{type:s.Input}],showMessageDate:[{type:s.Input}],isViewportOnMobileEnabled:[{type:s.Input}],onParticipantClicked:[{type:s.Output}],onParticipantChatOpened:[{type:s.Output}],onParticipantChatClosed:[{type:s.Output}],onMessagesSeen:[{type:s.Output}],chatMessageClusters:[{type:s.ViewChildren,args:["chatMessages"]}],chatWindowInputs:[{type:s.ViewChildren,args:["chatWindowInput"]}],nativeFileInputs:[{type:s.ViewChildren,args:["nativeFileInput"]}],onResize:[{type:s.HostListener,args:["window:resize",["$event"]]}]},O);function O(t){this._httpClient=t,this.ChatParticipantType=h,this.ChatParticipantStatus=l,this.MessageType=p,this._isDisabled=!1,this.isCollapsed=!1,this.maximizeWindowOnNewMessage=!0,this.pollFriendsList=!1,this.pollingInterval=5e3,this.historyEnabled=!0,this.emojisEnabled=!0,this.linkfyEnabled=!0,this.audioEnabled=!0,this.searchEnabled=!0,this.audioSource="https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav",this.persistWindowsState=!0,this.title="Friends",this.messagePlaceholder="Type a message",this.searchPlaceholder="Search",this.browserNotificationsEnabled=!0,this.browserNotificationIconSource="https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png",this.browserNotificationTitle="New message from",this.historyPageSize=10,this.hideFriendsList=!1,this.hideFriendsListOnUnsupportedViewport=!0,this.theme=C.Light,this.messageDatePipeFormat="short",this.showMessageDate=!0,this.isViewportOnMobileEnabled=!1,this.onParticipantClicked=new s.EventEmitter,this.onParticipantChatOpened=new s.EventEmitter,this.onParticipantChatClosed=new s.EventEmitter,this.onMessagesSeen=new s.EventEmitter,this.browserNotificationsBootstrapped=!1,this.hasPagedHistory=!1,this.statusDescription={online:"Online",busy:"Busy",away:"Away",offline:"Offline"},this.searchInput="",this.participantsInteractedWith=[],this.selectedUsersFromFriendsList=[],this.windowSizeFactor=320,this.friendsListWidth=262,this.unsupportedViewport=!1,this.fileUploadersInUse=[],this.windows=[],this.isBootstrapped=!1}var U=[{patterns:[":)",":-)","=)"],unicode:"😃"},{patterns:[":D",":-D","=D"],unicode:"😀"},{patterns:[":(",":-(","=("],unicode:"🙁"},{patterns:[":|",":-|","=|"],unicode:"😐"},{patterns:[":*",":-*","=*"],unicode:"😙"},{patterns:["T_T","T.T"],unicode:"😭"},{patterns:[":O",":-O","=O",":o",":-o","=o"],unicode:"😮"},{patterns:[":P",":-P","=P",":p",":-p","=p"],unicode:"😋"},{patterns:[">.<"],unicode:"😣"},{patterns:["@.@"],unicode:"😵"},{patterns:["*.*"],unicode:"😍"},{patterns:["<3"],unicode:"❤️"},{patterns:["^.^"],unicode:"😊"},{patterns:[":+1"],unicode:"👍"},{patterns:[":-1"],unicode:"👎"}],W=(z.prototype.transform=function(i,t){return t&&i&&1<i.length&&U.forEach(function(e){e.patterns.forEach(function(t){i=i.replace(t,e.unicode)})}),i},z.decorators=[{type:s.Pipe,args:[{name:"emojify"}]}],z);function z(){}var A=(L.prototype.transform=function(t,e){var i,n,a;return e&&t&&1<t.length?(i=/(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gim,n=/(^|[^\/])(www\.[\S]+(\b|$))/gim,a=/(([a-zA-Z0-9\-\_\.])+@[a-zA-Z\_]+?(\.[a-zA-Z]{2,6})+)/gim,t.replace(i,'<a href="$1" target="_blank">$1</a>').replace(n,'$1<a href="http://$2" target="_blank">$2</a>').replace(a,'<a href="mailto:$1">$1</a>')):t},L.decorators=[{type:s.Pipe,args:[{name:"linkfy"}]}],L);function L(){}var E=(N.prototype.transform=function(t){return this.sanitizer.bypassSecurityTrustResourceUrl(t)},N.decorators=[{type:s.Pipe,args:[{name:"sanitize"}]}],N.ctorParameters=function(){return[{type:o.DomSanitizer}]},N);function N(t){this.sanitizer=t}var B=(D.prototype.transform=function(t,e){if(t&&t.participantType==h.Group){var i=t,n=i.chattingTo.findIndex(function(t){return t.id==e.fromId});return i.chattingTo[0<=n?n:0].displayName}return""},D.decorators=[{type:s.Pipe,args:[{name:"groupMessageDisplayName"}]}],D);function D(){}var H=(_.prototype.ngOnInit=function(){},_.prototype.onOptionClicked=function(t){t.action&&(t.isActive=!0,t.action(this.chattingTo),this.activeOptionTrackerChange.emit(t))},_.decorators=[{type:s.Component,args:[{selector:"ng-chat-options",template:'<div *ngIf="options && options.length > 0" class="ng-chat-options">\r\n  <button class="ng-chat-options-activator">\r\n    <span class="primary-text">...</span>\r\n  </button>\r\n  <div class="ng-chat-options-content primary-background shadowed">\r\n    <a *ngFor="let option of options; let i = index" [ngClass]="\'primary-text\'" (click)="onOptionClicked(option)">\r\n      {{option.displayLabel}}\r\n    </a>\r\n  </div>      \r\n</div>\r\n',styles:[".ng-chat-options-activator{background-color:unset;color:#fff;line-height:28px;border:none;position:relative}.ng-chat-options-activator>span{position:relative;top:-5px;left:0}.ng-chat-options{position:relative;display:inline-block}.ng-chat-options:hover .ng-chat-options-content{display:block}.ng-chat-options:hover .ng-chat-options-activator{background-color:#ddd}.ng-chat-options-content{display:none;position:absolute;min-width:160px;z-index:1}.ng-chat-options-content a:hover{background-color:#ddd}.ng-chat-options-content a{padding:6px 16px;text-decoration:none;display:block}@media only screen and (max-width:581px){.ng-chat-options-content{right:0}}"]}]}],_.ctorParameters=function(){return[]},_.propDecorators={options:[{type:s.Input}],activeOptionTracker:[{type:s.Input}],activeOptionTrackerChange:[{type:s.Output}],chattingTo:[{type:s.Input}]},_);function _(){this.activeOptionTrackerChange=new s.EventEmitter}var j=(R.decorators=[{type:s.NgModule,args:[{imports:[e.CommonModule,i.FormsModule,n.HttpClientModule],declarations:[S,W,A,E,B,H],exports:[S]}]}],R);function R(){}t.NgChatModule=j,t.ChatAdapter=r,t.Message=d,t.ChatParticipantStatus=l,t.User=g,t.ParticipantResponse=u,t.ParticipantMetadata=f,t.Window=m,t.PagedHistoryChatAdapter=x,t.Theme=C,t.Group=F,t.ChatParticipantType=h,t.ɵf=H,t.ɵa=S,t.ɵb=W,t.ɵe=B,t.ɵc=A,t.ɵd=E,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ng-chat.umd.min.js.map